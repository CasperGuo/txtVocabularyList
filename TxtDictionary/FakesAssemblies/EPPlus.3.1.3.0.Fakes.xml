<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EPPlus.3.1.3.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.EPPlusDelegates">
            <summary>包含用于 EPPlus 的存根和填充码的自定义委托</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingAverageGroup 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingAverageGroup 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingAverageGroup.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingAverageGroup.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingAverageGroup.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingAverageGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingBeginsWith 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingBeginsWith 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingBeginsWith.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingBeginsWith.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingBeginsWith.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.AttachBackingFieldToText">
            <summary>附加委托以将 StubIExcelConditionalFormattingBeginsWith.Text 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.TextGet">
            <summary>设置 IExcelConditionalFormattingWithText.get_Text() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.TextSetString">
            <summary>设置 IExcelConditionalFormattingWithText.set_Text(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithText#Text">
            <summary>设置 IExcelConditionalFormattingWithText.get_Text() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBeginsWith.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingBetween 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingBetween 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingBetween.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.AttachBackingFieldToFormula">
            <summary>附加委托以将 StubIExcelConditionalFormattingBetween.Formula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.AttachBackingFieldToFormula2">
            <summary>附加委托以将 StubIExcelConditionalFormattingBetween.Formula2 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingBetween.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingBetween.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.Formula2Get">
            <summary>设置 IExcelConditionalFormattingWithFormula2.get_Formula2() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.Formula2SetString">
            <summary>设置 IExcelConditionalFormattingWithFormula2.set_Formula2(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.FormulaGet">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.FormulaSetString">
            <summary>设置 IExcelConditionalFormattingWithFormula.set_Formula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithFormula#Formula">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithFormula2#Formula2">
            <summary>设置 IExcelConditionalFormattingWithFormula2.get_Formula2() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingColorScaleGroup 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingColorScaleGroup 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingColorScaleGroup.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingColorScaleGroup.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingColorScaleGroup.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingColorScaleGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingContainsBlanks 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingContainsBlanks 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingContainsBlanks.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingContainsBlanks.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingContainsBlanks.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsBlanks.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingContainsErrors 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingContainsErrors 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingContainsErrors.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingContainsErrors.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingContainsErrors.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsErrors.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingContainsText 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingContainsText 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingContainsText.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingContainsText.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingContainsText.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.AttachBackingFieldToText">
            <summary>附加委托以将 StubIExcelConditionalFormattingContainsText.Text 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.TextGet">
            <summary>设置 IExcelConditionalFormattingWithText.get_Text() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.TextSetString">
            <summary>设置 IExcelConditionalFormattingWithText.set_Text(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithText#Text">
            <summary>设置 IExcelConditionalFormattingWithText.get_Text() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingContainsText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingDataBarGroup 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingDataBarGroup.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.AttachBackingFieldToColor">
            <summary>附加委托以将 StubIExcelConditionalFormattingDataBarGroup.Color 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingDataBarGroup.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.AttachBackingFieldToShowValue">
            <summary>附加委托以将 StubIExcelConditionalFormattingDataBarGroup.ShowValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingDataBarGroup.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.ColorGet">
            <summary>设置 IExcelConditionalFormattingDataBarGroup.get_Color() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.ColorSetColor">
            <summary>设置 IExcelConditionalFormattingDataBarGroup.set_Color(Color value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.HighValueGet">
            <summary>设置 IExcelConditionalFormattingDataBarGroup.get_HighValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.LowValueGet">
            <summary>设置 IExcelConditionalFormattingDataBarGroup.get_LowValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.ShowValueGet">
            <summary>设置 IExcelConditionalFormattingDataBarGroup.get_ShowValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.ShowValueSetBoolean">
            <summary>设置 IExcelConditionalFormattingDataBarGroup.set_ShowValue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingDataBarGroup#Color">
            <summary>设置 IExcelConditionalFormattingDataBarGroup.get_Color() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingDataBarGroup#HighValue">
            <summary>设置 IExcelConditionalFormattingDataBarGroup.get_HighValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingDataBarGroup#LowValue">
            <summary>设置 IExcelConditionalFormattingDataBarGroup.get_LowValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingDataBarGroup#ShowValue">
            <summary>设置 IExcelConditionalFormattingDataBarGroup.get_ShowValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDataBarGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDuplicateValues 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingDuplicateValues 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingDuplicateValues.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingDuplicateValues.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingDuplicateValues.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingDuplicateValues.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingEndsWith 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingEndsWith 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingEndsWith.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingEndsWith.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingEndsWith.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.AttachBackingFieldToText">
            <summary>附加委托以将 StubIExcelConditionalFormattingEndsWith.Text 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.TextGet">
            <summary>设置 IExcelConditionalFormattingWithText.get_Text() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.TextSetString">
            <summary>设置 IExcelConditionalFormattingWithText.set_Text(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithText#Text">
            <summary>设置 IExcelConditionalFormattingWithText.get_Text() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEndsWith.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingEqual 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingEqual 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingEqual.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.AttachBackingFieldToFormula">
            <summary>附加委托以将 StubIExcelConditionalFormattingEqual.Formula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingEqual.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingEqual.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.FormulaGet">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.FormulaSetString">
            <summary>设置 IExcelConditionalFormattingWithFormula.set_Formula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithFormula#Formula">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingExpression 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingExpression 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingExpression.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.AttachBackingFieldToFormula">
            <summary>附加委托以将 StubIExcelConditionalFormattingExpression.Formula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingExpression.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingExpression.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.FormulaGet">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.FormulaSetString">
            <summary>设置 IExcelConditionalFormattingWithFormula.set_Formula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithFormula#Formula">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingExpression.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingFiveIconSet 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingFiveIconSet 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingFiveIconSet.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.AttachBackingFieldToIconSet">
            <summary>附加委托以将 StubIExcelConditionalFormattingFiveIconSet.IconSet 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingFiveIconSet.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.AttachBackingFieldToReverse">
            <summary>附加委托以将 StubIExcelConditionalFormattingFiveIconSet.Reverse 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.AttachBackingFieldToShowValue">
            <summary>附加委托以将 StubIExcelConditionalFormattingFiveIconSet.ShowValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingFiveIconSet.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.Icon1Get">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon1() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.Icon2Get">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon2() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.Icon3Get">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon3() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.Icon4Get">
            <summary>设置 IExcelConditionalFormattingFourIconSet`1.get_Icon4() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.Icon5Get">
            <summary>设置 IExcelConditionalFormattingFiveIconSet.get_Icon5() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.IconSetGet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_IconSet() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.IconSetSeteExcelconditionalFormatting5IconsSetType">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.set_IconSet(!0 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.ReverseGet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_Reverse() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.ReverseSetBoolean">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.set_Reverse(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.ShowValueGet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_ShowValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.ShowValueSetBoolean">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.set_ShowValue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingThreeIconSet{OfficeOpenXml#ConditionalFormatting#eExcelconditionalFormatting5IconsSetType}#Icon1">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon1() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingThreeIconSet{OfficeOpenXml#ConditionalFormatting#eExcelconditionalFormatting5IconsSetType}#Icon2">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon2() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingThreeIconSet{OfficeOpenXml#ConditionalFormatting#eExcelconditionalFormatting5IconsSetType}#Icon3">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon3() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingFourIconSet{OfficeOpenXml#ConditionalFormatting#eExcelconditionalFormatting5IconsSetType}#Icon4">
            <summary>设置 IExcelConditionalFormattingFourIconSet`1.get_Icon4() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingFiveIconSet#Icon5">
            <summary>设置 IExcelConditionalFormattingFiveIconSet.get_Icon5() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingIconSetGroup{OfficeOpenXml#ConditionalFormatting#eExcelconditionalFormatting5IconsSetType}#IconSet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_IconSet() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingIconSetGroup{OfficeOpenXml#ConditionalFormatting#eExcelconditionalFormatting5IconsSetType}#Reverse">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_Reverse() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingIconSetGroup{OfficeOpenXml#ConditionalFormatting#eExcelconditionalFormatting5IconsSetType}#ShowValue">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_ShowValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFiveIconSet.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingFourIconSet`1 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingFourIconSet 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingFourIconSet.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.AttachBackingFieldToIconSet">
            <summary>附加委托以将 StubIExcelConditionalFormattingFourIconSet.IconSet 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingFourIconSet.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.AttachBackingFieldToReverse">
            <summary>附加委托以将 StubIExcelConditionalFormattingFourIconSet.Reverse 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.AttachBackingFieldToShowValue">
            <summary>附加委托以将 StubIExcelConditionalFormattingFourIconSet.ShowValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingFourIconSet.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.Icon1Get">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon1() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.Icon2Get">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon2() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.Icon3Get">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon3() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.Icon4Get">
            <summary>设置 IExcelConditionalFormattingFourIconSet`1.get_Icon4() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.IconSetGet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_IconSet() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.IconSetSetT0">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.set_IconSet(!0 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.ReverseGet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_Reverse() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.ReverseSetBoolean">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.set_Reverse(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.ShowValueGet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_ShowValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.ShowValueSetBoolean">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.set_ShowValue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingThreeIconSet{T}#Icon1">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon1() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingThreeIconSet{T}#Icon2">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon2() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingThreeIconSet{T}#Icon3">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon3() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingFourIconSet{T}#Icon4">
            <summary>设置 IExcelConditionalFormattingFourIconSet`1.get_Icon4() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingIconSetGroup{T}#IconSet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_IconSet() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingIconSetGroup{T}#Reverse">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_Reverse() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingIconSetGroup{T}#ShowValue">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_ShowValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingFourIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingGreaterThan 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingGreaterThan 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingGreaterThan.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.AttachBackingFieldToFormula">
            <summary>附加委托以将 StubIExcelConditionalFormattingGreaterThan.Formula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingGreaterThan.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingGreaterThan.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.FormulaGet">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.FormulaSetString">
            <summary>设置 IExcelConditionalFormattingWithFormula.set_Formula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithFormula#Formula">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThan.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingGreaterThanOrEqual 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingGreaterThanOrEqual 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingGreaterThanOrEqual.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.AttachBackingFieldToFormula">
            <summary>附加委托以将 StubIExcelConditionalFormattingGreaterThanOrEqual.Formula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingGreaterThanOrEqual.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingGreaterThanOrEqual.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.FormulaGet">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.FormulaSetString">
            <summary>设置 IExcelConditionalFormattingWithFormula.set_Formula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithFormula#Formula">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingGreaterThanOrEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingIconSetGroup`1 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingIconSetGroup 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingIconSetGroup.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.AttachBackingFieldToIconSet">
            <summary>附加委托以将 StubIExcelConditionalFormattingIconSetGroup.IconSet 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingIconSetGroup.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.AttachBackingFieldToReverse">
            <summary>附加委托以将 StubIExcelConditionalFormattingIconSetGroup.Reverse 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.AttachBackingFieldToShowValue">
            <summary>附加委托以将 StubIExcelConditionalFormattingIconSetGroup.ShowValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingIconSetGroup.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.IconSetGet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_IconSet() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.IconSetSetT0">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.set_IconSet(!0 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.ReverseGet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_Reverse() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.ReverseSetBoolean">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.set_Reverse(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.ShowValueGet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_ShowValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.ShowValueSetBoolean">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.set_ShowValue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingIconSetGroup{T}#IconSet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_IconSet() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingIconSetGroup{T}#Reverse">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_Reverse() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingIconSetGroup{T}#ShowValue">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_ShowValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingIconSetGroup`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingLessThan 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingLessThan 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingLessThan.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.AttachBackingFieldToFormula">
            <summary>附加委托以将 StubIExcelConditionalFormattingLessThan.Formula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingLessThan.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingLessThan.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.FormulaGet">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.FormulaSetString">
            <summary>设置 IExcelConditionalFormattingWithFormula.set_Formula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithFormula#Formula">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThan.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingLessThanOrEqual 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingLessThanOrEqual 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingLessThanOrEqual.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.AttachBackingFieldToFormula">
            <summary>附加委托以将 StubIExcelConditionalFormattingLessThanOrEqual.Formula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingLessThanOrEqual.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingLessThanOrEqual.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.FormulaGet">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.FormulaSetString">
            <summary>设置 IExcelConditionalFormattingWithFormula.set_Formula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithFormula#Formula">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingLessThanOrEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingNotBetween 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingNotBetween 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotBetween.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.AttachBackingFieldToFormula">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotBetween.Formula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.AttachBackingFieldToFormula2">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotBetween.Formula2 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotBetween.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotBetween.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.Formula2Get">
            <summary>设置 IExcelConditionalFormattingWithFormula2.get_Formula2() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.Formula2SetString">
            <summary>设置 IExcelConditionalFormattingWithFormula2.set_Formula2(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.FormulaGet">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.FormulaSetString">
            <summary>设置 IExcelConditionalFormattingWithFormula.set_Formula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithFormula#Formula">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithFormula2#Formula2">
            <summary>设置 IExcelConditionalFormattingWithFormula2.get_Formula2() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotBetween.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingNotContainsBlanks 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingNotContainsBlanks 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotContainsBlanks.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotContainsBlanks.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotContainsBlanks.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsBlanks.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingNotContainsErrors 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingNotContainsErrors 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotContainsErrors.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotContainsErrors.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotContainsErrors.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsErrors.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingNotContainsText 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingNotContainsText 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotContainsText.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotContainsText.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotContainsText.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.AttachBackingFieldToText">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotContainsText.Text 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.TextGet">
            <summary>设置 IExcelConditionalFormattingWithText.get_Text() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.TextSetString">
            <summary>设置 IExcelConditionalFormattingWithText.set_Text(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithText#Text">
            <summary>设置 IExcelConditionalFormattingWithText.get_Text() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotContainsText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingNotEqual 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingNotEqual 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotEqual.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.AttachBackingFieldToFormula">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotEqual.Formula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotEqual.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingNotEqual.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.FormulaGet">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.FormulaSetString">
            <summary>设置 IExcelConditionalFormattingWithFormula.set_Formula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithFormula#Formula">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingNotEqual.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingRule 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingRule.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingRule.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingRule.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingRule.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingStdDevGroup 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingStdDevGroup 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingStdDevGroup.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingStdDevGroup.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.AttachBackingFieldToStdDev">
            <summary>附加委托以将 StubIExcelConditionalFormattingStdDevGroup.StdDev 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingStdDevGroup.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.StdDevGet">
            <summary>设置 IExcelConditionalFormattingWithStdDev.get_StdDev() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.StdDevSetUInt16">
            <summary>设置 IExcelConditionalFormattingWithStdDev.set_StdDev(UInt16 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithStdDev#StdDev">
            <summary>设置 IExcelConditionalFormattingWithStdDev.get_StdDev() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingStdDevGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingThreeColorScale 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingThreeColorScale 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingThreeColorScale.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.AttachBackingFieldToHighValue">
            <summary>附加委托以将 StubIExcelConditionalFormattingThreeColorScale.HighValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.AttachBackingFieldToLowValue">
            <summary>附加委托以将 StubIExcelConditionalFormattingThreeColorScale.LowValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.AttachBackingFieldToMiddleValue">
            <summary>附加委托以将 StubIExcelConditionalFormattingThreeColorScale.MiddleValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingThreeColorScale.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingThreeColorScale.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.HighValueGet">
            <summary>设置 IExcelConditionalFormattingTwoColorScale.get_HighValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.HighValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 IExcelConditionalFormattingTwoColorScale.set_HighValue(ExcelConditionalFormattingColorScaleValue value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.LowValueGet">
            <summary>设置 IExcelConditionalFormattingTwoColorScale.get_LowValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.LowValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 IExcelConditionalFormattingTwoColorScale.set_LowValue(ExcelConditionalFormattingColorScaleValue value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.MiddleValueGet">
            <summary>设置 IExcelConditionalFormattingThreeColorScale.get_MiddleValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.MiddleValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 IExcelConditionalFormattingThreeColorScale.set_MiddleValue(ExcelConditionalFormattingColorScaleValue value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingTwoColorScale#HighValue">
            <summary>设置 IExcelConditionalFormattingTwoColorScale.get_HighValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingTwoColorScale#LowValue">
            <summary>设置 IExcelConditionalFormattingTwoColorScale.get_LowValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingThreeColorScale#MiddleValue">
            <summary>设置 IExcelConditionalFormattingThreeColorScale.get_MiddleValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingThreeIconSet`1 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingThreeIconSet 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingThreeIconSet.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.AttachBackingFieldToIconSet">
            <summary>附加委托以将 StubIExcelConditionalFormattingThreeIconSet.IconSet 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingThreeIconSet.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.AttachBackingFieldToReverse">
            <summary>附加委托以将 StubIExcelConditionalFormattingThreeIconSet.Reverse 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.AttachBackingFieldToShowValue">
            <summary>附加委托以将 StubIExcelConditionalFormattingThreeIconSet.ShowValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingThreeIconSet.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.Icon1Get">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon1() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.Icon2Get">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon2() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.Icon3Get">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon3() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.IconSetGet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_IconSet() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.IconSetSetT0">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.set_IconSet(!0 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.ReverseGet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_Reverse() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.ReverseSetBoolean">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.set_Reverse(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.ShowValueGet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_ShowValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.ShowValueSetBoolean">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.set_ShowValue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingThreeIconSet{T}#Icon1">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon1() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingThreeIconSet{T}#Icon2">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon2() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingThreeIconSet{T}#Icon3">
            <summary>设置 IExcelConditionalFormattingThreeIconSet`1.get_Icon3() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingIconSetGroup{T}#IconSet">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_IconSet() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingIconSetGroup{T}#Reverse">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_Reverse() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingIconSetGroup{T}#ShowValue">
            <summary>设置 IExcelConditionalFormattingIconSetGroup`1.get_ShowValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingThreeIconSet`1.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTimePeriodGroup 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingTimePeriodGroup 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingTimePeriodGroup.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingTimePeriodGroup.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingTimePeriodGroup.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTimePeriodGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTopBottomGroup 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingTopBottomGroup 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingTopBottomGroup.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingTopBottomGroup.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.AttachBackingFieldToRank">
            <summary>附加委托以将 StubIExcelConditionalFormattingTopBottomGroup.Rank 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingTopBottomGroup.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.RankGet">
            <summary>设置 IExcelConditionalFormattingWithRank.get_Rank() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.RankSetUInt16">
            <summary>设置 IExcelConditionalFormattingWithRank.set_Rank(UInt16 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithRank#Rank">
            <summary>设置 IExcelConditionalFormattingWithRank.get_Rank() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTopBottomGroup.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTwoColorScale 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingTwoColorScale 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingTwoColorScale.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.AttachBackingFieldToHighValue">
            <summary>附加委托以将 StubIExcelConditionalFormattingTwoColorScale.HighValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.AttachBackingFieldToLowValue">
            <summary>附加委托以将 StubIExcelConditionalFormattingTwoColorScale.LowValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingTwoColorScale.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingTwoColorScale.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.HighValueGet">
            <summary>设置 IExcelConditionalFormattingTwoColorScale.get_HighValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.HighValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 IExcelConditionalFormattingTwoColorScale.set_HighValue(ExcelConditionalFormattingColorScaleValue value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.LowValueGet">
            <summary>设置 IExcelConditionalFormattingTwoColorScale.get_LowValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.LowValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 IExcelConditionalFormattingTwoColorScale.set_LowValue(ExcelConditionalFormattingColorScaleValue value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingTwoColorScale#HighValue">
            <summary>设置 IExcelConditionalFormattingTwoColorScale.get_HighValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingTwoColorScale#LowValue">
            <summary>设置 IExcelConditionalFormattingTwoColorScale.get_LowValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingTwoColorScale.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingUniqueValues 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingUniqueValues 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.AddressGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.AddressSetExcelAddress">
            <summary>设置 IExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.AttachBackingFieldToAddress">
            <summary>附加委托以将 StubIExcelConditionalFormattingUniqueValues.Address 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.AttachBackingFieldToPriority">
            <summary>附加委托以将 StubIExcelConditionalFormattingUniqueValues.Priority 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.AttachBackingFieldToStopIfTrue">
            <summary>附加委托以将 StubIExcelConditionalFormattingUniqueValues.StopIfTrue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.NodeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.PriorityGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.PrioritySetInt32">
            <summary>设置 IExcelConditionalFormattingRule.set_Priority(Int32 value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.StopIfTrueGet">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.StopIfTrueSetBoolean">
            <summary>设置 IExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.StyleGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.TypeGet">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Address">
            <summary>设置 IExcelConditionalFormattingRule.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Node">
            <summary>设置 IExcelConditionalFormattingRule.get_Node() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Priority">
            <summary>设置 IExcelConditionalFormattingRule.get_Priority() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#StopIfTrue">
            <summary>设置 IExcelConditionalFormattingRule.get_StopIfTrue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Style">
            <summary>设置 IExcelConditionalFormattingRule.get_Style() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingUniqueValues.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingRule#Type">
            <summary>设置 IExcelConditionalFormattingRule.get_Type() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithFormula 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingWithFormula 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula.AttachBackingFieldToFormula">
            <summary>附加委托以将 StubIExcelConditionalFormattingWithFormula.Formula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula.FormulaGet">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula.FormulaSetString">
            <summary>设置 IExcelConditionalFormattingWithFormula.set_Formula(String value) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithFormula#Formula">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula2">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithFormula2 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula2.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingWithFormula2 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula2.AttachBackingFieldToFormula">
            <summary>附加委托以将 StubIExcelConditionalFormattingWithFormula2.Formula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula2.AttachBackingFieldToFormula2">
            <summary>附加委托以将 StubIExcelConditionalFormattingWithFormula2.Formula2 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula2.Formula2Get">
            <summary>设置 IExcelConditionalFormattingWithFormula2.get_Formula2() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula2.Formula2SetString">
            <summary>设置 IExcelConditionalFormattingWithFormula2.set_Formula2(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula2.FormulaGet">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula2.FormulaSetString">
            <summary>设置 IExcelConditionalFormattingWithFormula.set_Formula(String value) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula2.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithFormula#Formula">
            <summary>设置 IExcelConditionalFormattingWithFormula.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithFormula2.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithFormula2#Formula2">
            <summary>设置 IExcelConditionalFormattingWithFormula2.get_Formula2() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithRank">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithRank 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithRank.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingWithRank 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithRank.AttachBackingFieldToRank">
            <summary>附加委托以将 StubIExcelConditionalFormattingWithRank.Rank 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithRank.RankGet">
            <summary>设置 IExcelConditionalFormattingWithRank.get_Rank() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithRank.RankSetUInt16">
            <summary>设置 IExcelConditionalFormattingWithRank.set_Rank(UInt16 value) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithRank.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithRank#Rank">
            <summary>设置 IExcelConditionalFormattingWithRank.get_Rank() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithReverse">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithReverse 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithReverse.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingWithReverse 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithReverse.AttachBackingFieldToReverse">
            <summary>附加委托以将 StubIExcelConditionalFormattingWithReverse.Reverse 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithReverse.ReverseGet">
            <summary>设置 IExcelConditionalFormattingWithReverse.get_Reverse() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithReverse.ReverseSetBoolean">
            <summary>设置 IExcelConditionalFormattingWithReverse.set_Reverse(Boolean value) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithReverse.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithReverse#Reverse">
            <summary>设置 IExcelConditionalFormattingWithReverse.get_Reverse() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithShowValue">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithShowValue 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithShowValue.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingWithShowValue 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithShowValue.AttachBackingFieldToShowValue">
            <summary>附加委托以将 StubIExcelConditionalFormattingWithShowValue.ShowValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithShowValue.ShowValueGet">
            <summary>设置 IExcelConditionalFormattingWithShowValue.get_ShowValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithShowValue.ShowValueSetBoolean">
            <summary>设置 IExcelConditionalFormattingWithShowValue.set_ShowValue(Boolean value) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithShowValue.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithShowValue#ShowValue">
            <summary>设置 IExcelConditionalFormattingWithShowValue.get_ShowValue() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithStdDev">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithStdDev.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingWithStdDev 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithStdDev.AttachBackingFieldToStdDev">
            <summary>附加委托以将 StubIExcelConditionalFormattingWithStdDev.StdDev 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithStdDev.StdDevGet">
            <summary>设置 IExcelConditionalFormattingWithStdDev.get_StdDev() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithStdDev.StdDevSetUInt16">
            <summary>设置 IExcelConditionalFormattingWithStdDev.set_StdDev(UInt16 value) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithStdDev.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithStdDev#StdDev">
            <summary>设置 IExcelConditionalFormattingWithStdDev.get_StdDev() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithText">
            <summary>OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithText 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithText.#ctor">
            <summary>初始化 type StubIExcelConditionalFormattingWithText 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithText.AttachBackingFieldToText">
            <summary>附加委托以将 StubIExcelConditionalFormattingWithText.Text 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithText.TextGet">
            <summary>设置 IExcelConditionalFormattingWithText.get_Text() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithText.TextSetString">
            <summary>设置 IExcelConditionalFormattingWithText.set_Text(String value) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Contracts.Fakes.StubIExcelConditionalFormattingWithText.epp::OfficeOpenXml#ConditionalFormatting#Contracts#IExcelConditionalFormattingWithText#Text">
            <summary>设置 IExcelConditionalFormattingWithText.get_Text() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveAverage">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingAboveAverage 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveAverage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveAverage.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingAboveAverage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveAverage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveAverage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveAverage.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingAverageGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveAverage.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveAverage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveAverage.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingAboveAverage.ExcelConditionalFormattingAboveAverage(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveAverage.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingAboveAverage.ExcelConditionalFormattingAboveAverage(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveAverage.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingAboveAverage.ExcelConditionalFormattingAboveAverage(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveAverage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveOrEqualAverage">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingAboveOrEqualAverage 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveOrEqualAverage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveOrEqualAverage.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingAboveOrEqualAverage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveOrEqualAverage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveOrEqualAverage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveOrEqualAverage.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingAverageGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveOrEqualAverage.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveOrEqualAverage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveOrEqualAverage.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingAboveOrEqualAverage.ExcelConditionalFormattingAboveOrEqualAverage(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveOrEqualAverage.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingAboveOrEqualAverage.ExcelConditionalFormattingAboveOrEqualAverage(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveOrEqualAverage.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingAboveOrEqualAverage.ExcelConditionalFormattingAboveOrEqualAverage(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveOrEqualAverage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveStdDev">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingAboveStdDev 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveStdDev.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveStdDev.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingAboveStdDev)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveStdDev.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveStdDev.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveStdDev.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveStdDev.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingStdDevGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveStdDev.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveStdDev.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveStdDev.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingAboveStdDev.ExcelConditionalFormattingAboveStdDev(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveStdDev.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingAboveStdDev.ExcelConditionalFormattingAboveStdDev(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveStdDev.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingAboveStdDev.ExcelConditionalFormattingAboveStdDev(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAboveStdDev.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAverageGroup">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingAverageGroup 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAverageGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAverageGroup.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingAverageGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAverageGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAverageGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAverageGroup.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingAverageGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAverageGroup.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAverageGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAverageGroup.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingAverageGroup.ExcelConditionalFormattingAverageGroup(eExcelConditionalFormattingRuleType type, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAverageGroup.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingAverageGroup.ExcelConditionalFormattingAverageGroup(eExcelConditionalFormattingRuleType type, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAverageGroup.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingAverageGroup.ExcelConditionalFormattingAverageGroup(eExcelConditionalFormattingRuleType type, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingAverageGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingBeginsWith 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingBeginsWith)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingBeginsWith)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithText)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingBeginsWith.ExcelConditionalFormattingBeginsWith(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingBeginsWith.ExcelConditionalFormattingBeginsWith(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingBeginsWith.ExcelConditionalFormattingBeginsWith(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.TextGet">
            <summary>设置 ExcelConditionalFormattingBeginsWith.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.TextSetString">
            <summary>设置 ExcelConditionalFormattingBeginsWith.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.AllInstances.TextGet">
            <summary>设置 ExcelConditionalFormattingBeginsWith.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBeginsWith.AllInstances.TextSetString">
            <summary>设置 ExcelConditionalFormattingBeginsWith.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowAverage">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingBelowAverage 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowAverage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowAverage.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingBelowAverage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowAverage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowAverage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowAverage.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingAverageGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowAverage.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowAverage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowAverage.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingBelowAverage.ExcelConditionalFormattingBelowAverage(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowAverage.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingBelowAverage.ExcelConditionalFormattingBelowAverage(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowAverage.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingBelowAverage.ExcelConditionalFormattingBelowAverage(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowAverage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowOrEqualAverage">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingBelowOrEqualAverage 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowOrEqualAverage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowOrEqualAverage.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingBelowOrEqualAverage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowOrEqualAverage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowOrEqualAverage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowOrEqualAverage.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingAverageGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowOrEqualAverage.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowOrEqualAverage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowOrEqualAverage.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingBelowOrEqualAverage.ExcelConditionalFormattingBelowOrEqualAverage(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowOrEqualAverage.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingBelowOrEqualAverage.ExcelConditionalFormattingBelowOrEqualAverage(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowOrEqualAverage.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingBelowOrEqualAverage.ExcelConditionalFormattingBelowOrEqualAverage(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowOrEqualAverage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowStdDev">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingBelowStdDev 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowStdDev.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowStdDev.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingBelowStdDev)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowStdDev.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowStdDev.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowStdDev.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowStdDev.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingStdDevGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowStdDev.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowStdDev.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowStdDev.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingBelowStdDev.ExcelConditionalFormattingBelowStdDev(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowStdDev.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingBelowStdDev.ExcelConditionalFormattingBelowStdDev(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowStdDev.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingBelowStdDev.ExcelConditionalFormattingBelowStdDev(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBelowStdDev.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBetween">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingBetween 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBetween.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBetween.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingBetween)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBetween.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBetween.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBetween.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingBetween)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBetween.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBetween.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithFormula)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBetween.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithFormula2)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBetween.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBetween.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingBetween.ExcelConditionalFormattingBetween(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBetween.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingBetween.ExcelConditionalFormattingBetween(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBetween.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingBetween.ExcelConditionalFormattingBetween(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBetween.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottom">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingBottom 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottom.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottom.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingBottom)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottom.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottom.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottom.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottom.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTopBottomGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottom.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithRank)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottom.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottom.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingBottom.ExcelConditionalFormattingBottom(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottom.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingBottom.ExcelConditionalFormattingBottom(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottom.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingBottom.ExcelConditionalFormattingBottom(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottom.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottomPercent">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingBottomPercent 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottomPercent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottomPercent.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingBottomPercent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottomPercent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottomPercent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottomPercent.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottomPercent.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTopBottomGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottomPercent.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithRank)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottomPercent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottomPercent.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingBottomPercent.ExcelConditionalFormattingBottomPercent(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottomPercent.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingBottomPercent.ExcelConditionalFormattingBottomPercent(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottomPercent.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingBottomPercent.ExcelConditionalFormattingBottomPercent(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingBottomPercent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddAboveAverageExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddAboveAverage(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddAboveOrEqualAverageExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddAboveOrEqualAverage(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddAboveStdDevExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddAboveStdDev(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddBeginsWithExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddBeginsWith(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddBelowAverageExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddBelowAverage(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddBelowOrEqualAverageExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddBelowOrEqualAverage(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddBelowStdDevExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddBelowStdDev(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddBetweenExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddBetween(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddBottomExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddBottom(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddBottomPercentExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddBottomPercent(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddContainsBlanksExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddContainsBlanks(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddContainsErrorsExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddContainsErrors(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddContainsTextExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddContainsText(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddDatabarExcelAddressColor">
            <summary>设置 ExcelConditionalFormattingCollection.AddDatabar(ExcelAddress Address, Color color) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddDuplicateValuesExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddDuplicateValues(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddEndsWithExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddEndsWith(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddEqualExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddEqual(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddExpressionExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddExpression(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddFiveIconSetExcelAddresseExcelconditionalFormatting5IconsSetType">
            <summary>设置 ExcelConditionalFormattingCollection.AddFiveIconSet(ExcelAddress Address, eExcelconditionalFormatting5IconsSetType IconSet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddFourIconSetExcelAddresseExcelconditionalFormatting4IconsSetType">
            <summary>设置 ExcelConditionalFormattingCollection.AddFourIconSet(ExcelAddress Address, eExcelconditionalFormatting4IconsSetType IconSet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddGreaterThanExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddGreaterThan(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddGreaterThanOrEqualExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddGreaterThanOrEqual(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddLast7DaysExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddLast7Days(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddLastMonthExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddLastMonth(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddLastWeekExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddLastWeek(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddLessThanExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddLessThan(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddLessThanOrEqualExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddLessThanOrEqual(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddNextMonthExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddNextMonth(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddNextWeekExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddNextWeek(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddNotBetweenExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddNotBetween(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddNotContainsBlanksExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddNotContainsBlanks(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddNotContainsErrorsExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddNotContainsErrors(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddNotContainsTextExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddNotContainsText(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddNotEqualExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddNotEqual(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddRuleeExcelConditionalFormattingRuleTypeExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddRule(eExcelConditionalFormattingRuleType type, ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddThisMonthExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddThisMonth(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddThisWeekExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddThisWeek(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddThreeColorScaleExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddThreeColorScale(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddThreeIconSetExcelAddresseExcelconditionalFormatting3IconsSetType">
            <summary>设置 ExcelConditionalFormattingCollection.AddThreeIconSet(ExcelAddress Address, eExcelconditionalFormatting3IconsSetType IconSet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddTodayExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddToday(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddTomorrowExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddTomorrow(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddTopExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddTop(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddTopPercentExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddTopPercent(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddTwoColorScaleExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddTwoColorScale(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddUniqueValuesExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddUniqueValues(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AddYesterdayExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddYesterday(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.ConstructorExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingCollection.ExcelConditionalFormattingCollection(ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.CountGet">
            <summary>设置 ExcelConditionalFormattingCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.EnsureRootElementExists">
            <summary>设置 ExcelConditionalFormattingCollection.EnsureRootElementExists() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.GetNextPriority">
            <summary>设置 ExcelConditionalFormattingCollection.GetNextPriority() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.GetRootNode">
            <summary>设置 ExcelConditionalFormattingCollection.GetRootNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.ItemGetInt32">
            <summary>设置 ExcelConditionalFormattingCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.ItemSetInt32IExcelConditionalFormattingRule">
            <summary>设置 ExcelConditionalFormattingCollection.set_Item(Int32 index, IExcelConditionalFormattingRule value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.RemoveAll">
            <summary>设置 ExcelConditionalFormattingCollection.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.RemoveAtInt32">
            <summary>设置 ExcelConditionalFormattingCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.RemoveByPriorityInt32">
            <summary>设置 ExcelConditionalFormattingCollection.RemoveByPriority(Int32 priority) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.RemoveIExcelConditionalFormattingRule">
            <summary>设置 ExcelConditionalFormattingCollection.Remove(IExcelConditionalFormattingRule item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.RulesByPriorityInt32">
            <summary>设置 ExcelConditionalFormattingCollection.RulesByPriority(Int32 priority) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.SystemCollectionsGenericIEnumerableOfficeOpenXmlConditionalFormattingContractsIExcelConditionalFormattingRuleGetEnumerator">
            <summary>设置 ExcelConditionalFormattingCollection.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelConditionalFormattingCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.ValidateAddressExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.ValidateAddress(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddAboveAverageExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddAboveAverage(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddAboveOrEqualAverageExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddAboveOrEqualAverage(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddAboveStdDevExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddAboveStdDev(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddBeginsWithExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddBeginsWith(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddBelowAverageExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddBelowAverage(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddBelowOrEqualAverageExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddBelowOrEqualAverage(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddBelowStdDevExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddBelowStdDev(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddBetweenExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddBetween(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddBottomExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddBottom(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddBottomPercentExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddBottomPercent(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddContainsBlanksExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddContainsBlanks(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddContainsErrorsExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddContainsErrors(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddContainsTextExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddContainsText(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddDatabarExcelAddressColor">
            <summary>设置 ExcelConditionalFormattingCollection.AddDatabar(ExcelAddress Address, Color color) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddDuplicateValuesExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddDuplicateValues(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddEndsWithExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddEndsWith(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddEqualExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddEqual(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddExpressionExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddExpression(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddFiveIconSetExcelAddresseExcelconditionalFormatting5IconsSetType">
            <summary>设置 ExcelConditionalFormattingCollection.AddFiveIconSet(ExcelAddress Address, eExcelconditionalFormatting5IconsSetType IconSet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddFourIconSetExcelAddresseExcelconditionalFormatting4IconsSetType">
            <summary>设置 ExcelConditionalFormattingCollection.AddFourIconSet(ExcelAddress Address, eExcelconditionalFormatting4IconsSetType IconSet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddGreaterThanExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddGreaterThan(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddGreaterThanOrEqualExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddGreaterThanOrEqual(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddLast7DaysExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddLast7Days(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddLastMonthExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddLastMonth(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddLastWeekExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddLastWeek(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddLessThanExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddLessThan(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddLessThanOrEqualExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddLessThanOrEqual(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddNextMonthExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddNextMonth(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddNextWeekExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddNextWeek(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddNotBetweenExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddNotBetween(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddNotContainsBlanksExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddNotContainsBlanks(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddNotContainsErrorsExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddNotContainsErrors(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddNotContainsTextExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddNotContainsText(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddNotEqualExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddNotEqual(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddRuleeExcelConditionalFormattingRuleTypeExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddRule(eExcelConditionalFormattingRuleType type, ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddThisMonthExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddThisMonth(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddThisWeekExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddThisWeek(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddThreeColorScaleExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddThreeColorScale(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddThreeIconSetExcelAddresseExcelconditionalFormatting3IconsSetType">
            <summary>设置 ExcelConditionalFormattingCollection.AddThreeIconSet(ExcelAddress Address, eExcelconditionalFormatting3IconsSetType IconSet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddTodayExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddToday(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddTomorrowExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddTomorrow(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddTopExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddTop(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddTopPercentExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddTopPercent(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddTwoColorScaleExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddTwoColorScale(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddUniqueValuesExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddUniqueValues(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.AddYesterdayExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.AddYesterday(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.CountGet">
            <summary>设置 ExcelConditionalFormattingCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.EnsureRootElementExists">
            <summary>设置 ExcelConditionalFormattingCollection.EnsureRootElementExists() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.GetNextPriority">
            <summary>设置 ExcelConditionalFormattingCollection.GetNextPriority() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.GetRootNode">
            <summary>设置 ExcelConditionalFormattingCollection.GetRootNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.ItemGetInt32">
            <summary>设置 ExcelConditionalFormattingCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.ItemSetInt32IExcelConditionalFormattingRule">
            <summary>设置 ExcelConditionalFormattingCollection.set_Item(Int32 index, IExcelConditionalFormattingRule value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.RemoveAll">
            <summary>设置 ExcelConditionalFormattingCollection.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.RemoveAtInt32">
            <summary>设置 ExcelConditionalFormattingCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.RemoveByPriorityInt32">
            <summary>设置 ExcelConditionalFormattingCollection.RemoveByPriority(Int32 priority) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.RemoveIExcelConditionalFormattingRule">
            <summary>设置 ExcelConditionalFormattingCollection.Remove(IExcelConditionalFormattingRule item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.RulesByPriorityInt32">
            <summary>设置 ExcelConditionalFormattingCollection.RulesByPriority(Int32 priority) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.SystemCollectionsGenericIEnumerableOfficeOpenXmlConditionalFormattingContractsIExcelConditionalFormattingRuleGetEnumerator">
            <summary>设置 ExcelConditionalFormattingCollection.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelConditionalFormattingCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingCollection.AllInstances.ValidateAddressExcelAddress">
            <summary>设置 ExcelConditionalFormattingCollection.ValidateAddress(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingColorScaleValue 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingColorScaleValue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.ColorGet">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.ColorSetColor">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.set_Color(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.ConstructoreExcelConditionalFormattingValueObjectPositioneExcelConditionalFormattingValueObjectTypeColorDoubleStringeExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.ExcelConditionalFormattingColorScaleValue(eExcelConditionalFormattingValueObjectPosition position, eExcelConditionalFormattingValueObjectType type, Color color, Double value, String formula, eExcelConditionalFormattingRuleType ruleType, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.ConstructoreExcelConditionalFormattingValueObjectPositioneExcelConditionalFormattingValueObjectTypeColorDoubleStringeExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.ExcelConditionalFormattingColorScaleValue(eExcelConditionalFormattingValueObjectPosition position, eExcelConditionalFormattingValueObjectType type, Color color, Double value, String formula, eExcelConditionalFormattingRuleType ruleType, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.ConstructoreExcelConditionalFormattingValueObjectPositioneExcelConditionalFormattingValueObjectTypeColoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.ExcelConditionalFormattingColorScaleValue(eExcelConditionalFormattingValueObjectPosition position, eExcelConditionalFormattingValueObjectType type, Color color, eExcelConditionalFormattingRuleType ruleType, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.CreateNodeByOrdemeExcelConditionalFormattingValueObjectNodeTypeStringString">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.CreateNodeByOrdem(eExcelConditionalFormattingValueObjectNodeType nodeType, String attributePath, String attributeValue) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.FormulaGet">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.get_Formula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.FormulaSetString">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.set_Formula(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.GetNodeOrder">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.GetNodeOrder() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.PositionGet">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.get_Position() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.PositionSeteExcelConditionalFormattingValueObjectPosition">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.set_Position(eExcelConditionalFormattingValueObjectPosition value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.RuleTypeGet">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.get_RuleType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.RuleTypeSeteExcelConditionalFormattingRuleType">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.set_RuleType(eExcelConditionalFormattingRuleType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.TypeGet">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.TypeSeteExcelConditionalFormattingValueObjectType">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.set_Type(eExcelConditionalFormattingValueObjectType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.ValueGet">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.get_Value() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.ValueSetDouble">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.set_Value(Double value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances.ColorGet">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances.ColorSetColor">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.set_Color(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances.CreateNodeByOrdemeExcelConditionalFormattingValueObjectNodeTypeStringString">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.CreateNodeByOrdem(eExcelConditionalFormattingValueObjectNodeType nodeType, String attributePath, String attributeValue) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances.FormulaGet">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.get_Formula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances.FormulaSetString">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.set_Formula(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances.GetNodeOrder">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.GetNodeOrder() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances.PositionGet">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.get_Position() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances.PositionSeteExcelConditionalFormattingValueObjectPosition">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.set_Position(eExcelConditionalFormattingValueObjectPosition value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances.RuleTypeGet">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.get_RuleType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances.RuleTypeSeteExcelConditionalFormattingRuleType">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.set_RuleType(eExcelConditionalFormattingRuleType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances.TypeGet">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances.TypeSeteExcelConditionalFormattingValueObjectType">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.set_Type(eExcelConditionalFormattingValueObjectType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances.ValueGet">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.get_Value() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingColorScaleValue.AllInstances.ValueSetDouble">
            <summary>设置 ExcelConditionalFormattingColorScaleValue.set_Value(Double value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsBlanks">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingContainsBlanks 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsBlanks.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsBlanks.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingContainsBlanks)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsBlanks.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsBlanks.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsBlanks.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingContainsBlanks)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsBlanks.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsBlanks.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsBlanks.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingContainsBlanks.ExcelConditionalFormattingContainsBlanks(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsBlanks.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingContainsBlanks.ExcelConditionalFormattingContainsBlanks(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsBlanks.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingContainsBlanks.ExcelConditionalFormattingContainsBlanks(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsBlanks.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsErrors">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingContainsErrors 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsErrors.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsErrors.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingContainsErrors)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsErrors.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsErrors.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsErrors.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingContainsErrors)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsErrors.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsErrors.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsErrors.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingContainsErrors.ExcelConditionalFormattingContainsErrors(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsErrors.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingContainsErrors.ExcelConditionalFormattingContainsErrors(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsErrors.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingContainsErrors.ExcelConditionalFormattingContainsErrors(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsErrors.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingContainsText 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingContainsText)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingContainsText)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithText)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingContainsText.ExcelConditionalFormattingContainsText(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingContainsText.ExcelConditionalFormattingContainsText(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingContainsText.ExcelConditionalFormattingContainsText(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.TextGet">
            <summary>设置 ExcelConditionalFormattingContainsText.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.TextSetString">
            <summary>设置 ExcelConditionalFormattingContainsText.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.AllInstances.TextGet">
            <summary>设置 ExcelConditionalFormattingContainsText.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingContainsText.AllInstances.TextSetString">
            <summary>设置 ExcelConditionalFormattingContainsText.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.ColorGet">
            <summary>设置 ExcelConditionalFormattingDataBar.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.ColorSetColor">
            <summary>设置 ExcelConditionalFormattingDataBar.set_Color(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingDataBar.ExcelConditionalFormattingDataBar(eExcelConditionalFormattingRuleType type, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingDataBar.ExcelConditionalFormattingDataBar(eExcelConditionalFormattingRuleType type, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingDataBar.ExcelConditionalFormattingDataBar(eExcelConditionalFormattingRuleType type, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.HighValueGet">
            <summary>设置 ExcelConditionalFormattingDataBar.get_HighValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.HighValueSetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingDataBar.set_HighValue(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.LowValueGet">
            <summary>设置 ExcelConditionalFormattingDataBar.get_LowValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.LowValueSetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingDataBar.set_LowValue(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.ShowValueGet">
            <summary>设置 ExcelConditionalFormattingDataBar.get_ShowValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.ShowValueSetBoolean">
            <summary>设置 ExcelConditionalFormattingDataBar.set_ShowValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.AllInstances.ColorGet">
            <summary>设置 ExcelConditionalFormattingDataBar.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.AllInstances.ColorSetColor">
            <summary>设置 ExcelConditionalFormattingDataBar.set_Color(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.AllInstances.HighValueGet">
            <summary>设置 ExcelConditionalFormattingDataBar.get_HighValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.AllInstances.HighValueSetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingDataBar.set_HighValue(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.AllInstances.LowValueGet">
            <summary>设置 ExcelConditionalFormattingDataBar.get_LowValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.AllInstances.LowValueSetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingDataBar.set_LowValue(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.AllInstances.ShowValueGet">
            <summary>设置 ExcelConditionalFormattingDataBar.get_ShowValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDataBar.AllInstances.ShowValueSetBoolean">
            <summary>设置 ExcelConditionalFormattingDataBar.set_ShowValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDuplicateValues">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDuplicateValues 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDuplicateValues.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDuplicateValues.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDuplicateValues)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDuplicateValues.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDuplicateValues.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDuplicateValues.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDuplicateValues)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDuplicateValues.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDuplicateValues.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDuplicateValues.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingDuplicateValues.ExcelConditionalFormattingDuplicateValues(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDuplicateValues.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingDuplicateValues.ExcelConditionalFormattingDuplicateValues(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDuplicateValues.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingDuplicateValues.ExcelConditionalFormattingDuplicateValues(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingDuplicateValues.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingEndsWith 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingEndsWith)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingEndsWith)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithText)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingEndsWith.ExcelConditionalFormattingEndsWith(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingEndsWith.ExcelConditionalFormattingEndsWith(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingEndsWith.ExcelConditionalFormattingEndsWith(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.TextGet">
            <summary>设置 ExcelConditionalFormattingEndsWith.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.TextSetString">
            <summary>设置 ExcelConditionalFormattingEndsWith.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.AllInstances.TextGet">
            <summary>设置 ExcelConditionalFormattingEndsWith.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEndsWith.AllInstances.TextSetString">
            <summary>设置 ExcelConditionalFormattingEndsWith.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEqual">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingEqual 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEqual.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEqual.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingEqual)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEqual.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEqual.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEqual.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingEqual)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEqual.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEqual.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithFormula)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEqual.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEqual.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingEqual.ExcelConditionalFormattingEqual(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEqual.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingEqual.ExcelConditionalFormattingEqual(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEqual.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingEqual.ExcelConditionalFormattingEqual(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingEqual.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingExpression">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingExpression 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingExpression.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingExpression.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingExpression)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingExpression.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingExpression.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingExpression.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingExpression)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingExpression.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingExpression.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithFormula)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingExpression.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingExpression.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingExpression.ExcelConditionalFormattingExpression(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingExpression.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingExpression.ExcelConditionalFormattingExpression(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingExpression.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingExpression.ExcelConditionalFormattingExpression(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingExpression.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingFiveIconSet 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingFiveIconSet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingFiveIconSet)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingFourIconSet{OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormatting5IconsSetType})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingIconSetGroup{OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormatting5IconsSetType})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingThreeIconSet{OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormatting5IconsSetType})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingFiveIconSet.ExcelConditionalFormattingFiveIconSet(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingFiveIconSet.ExcelConditionalFormattingFiveIconSet(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingFiveIconSet.ExcelConditionalFormattingFiveIconSet(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.Icon4Get">
            <summary>设置 ExcelConditionalFormattingFiveIconSet.get_Icon4() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.Icon4SetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingFiveIconSet.set_Icon4(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.Icon5Get">
            <summary>设置 ExcelConditionalFormattingFiveIconSet.get_Icon5() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.Icon5SetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingFiveIconSet.set_Icon5(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.AllInstances.Icon4Get">
            <summary>设置 ExcelConditionalFormattingFiveIconSet.get_Icon4() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.AllInstances.Icon4SetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingFiveIconSet.set_Icon4(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.AllInstances.Icon5Get">
            <summary>设置 ExcelConditionalFormattingFiveIconSet.get_Icon5() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFiveIconSet.AllInstances.Icon5SetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingFiveIconSet.set_Icon5(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingFourIconSet 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingFourIconSet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingFourIconSet{OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormatting4IconsSetType})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingIconSetGroup{OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormatting4IconsSetType})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingThreeIconSet{OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormatting4IconsSetType})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingFourIconSet.ExcelConditionalFormattingFourIconSet(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingFourIconSet.ExcelConditionalFormattingFourIconSet(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingFourIconSet.ExcelConditionalFormattingFourIconSet(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.Icon4Get">
            <summary>设置 ExcelConditionalFormattingFourIconSet.get_Icon4() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.Icon4SetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingFourIconSet.set_Icon4(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.AllInstances.Icon4Get">
            <summary>设置 ExcelConditionalFormattingFourIconSet.get_Icon4() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingFourIconSet.AllInstances.Icon4SetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingFourIconSet.set_Icon4(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThan">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingGreaterThan 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThan.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThan.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingGreaterThan)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThan.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThan.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThan.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingGreaterThan)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThan.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThan.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithFormula)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThan.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThan.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingGreaterThan.ExcelConditionalFormattingGreaterThan(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThan.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingGreaterThan.ExcelConditionalFormattingGreaterThan(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThan.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingGreaterThan.ExcelConditionalFormattingGreaterThan(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThan.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThanOrEqual">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingGreaterThanOrEqual 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThanOrEqual.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThanOrEqual.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingGreaterThanOrEqual)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThanOrEqual.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThanOrEqual.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThanOrEqual.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingGreaterThanOrEqual)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThanOrEqual.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThanOrEqual.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithFormula)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThanOrEqual.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThanOrEqual.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingGreaterThanOrEqual.ExcelConditionalFormattingGreaterThanOrEqual(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThanOrEqual.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingGreaterThanOrEqual.ExcelConditionalFormattingGreaterThanOrEqual(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThanOrEqual.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingGreaterThanOrEqual.ExcelConditionalFormattingGreaterThanOrEqual(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingGreaterThanOrEqual.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingIconDataBarValue 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingIconDataBarValue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.ExcelConditionalFormattingIconDataBarValue(eExcelConditionalFormattingRuleType ruleType, ExcelAddress address, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.ConstructoreExcelConditionalFormattingValueObjectTypeColoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.ExcelConditionalFormattingIconDataBarValue(eExcelConditionalFormattingValueObjectType type, Color color, eExcelConditionalFormattingRuleType ruleType, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.ConstructoreExcelConditionalFormattingValueObjectTypeDoubleStringeExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.ExcelConditionalFormattingIconDataBarValue(eExcelConditionalFormattingValueObjectType type, Double value, String formula, eExcelConditionalFormattingRuleType ruleType, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.ConstructoreExcelConditionalFormattingValueObjectTypeDoubleStringeExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.ExcelConditionalFormattingIconDataBarValue(eExcelConditionalFormattingValueObjectType type, Double value, String formula, eExcelConditionalFormattingRuleType ruleType, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.FormulaGet">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.get_Formula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.FormulaSetString">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.set_Formula(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.RuleTypeGet">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.get_RuleType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.RuleTypeSeteExcelConditionalFormattingRuleType">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.set_RuleType(eExcelConditionalFormattingRuleType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.TypeGet">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.TypeSeteExcelConditionalFormattingValueObjectType">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.set_Type(eExcelConditionalFormattingValueObjectType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.ValueGet">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.get_Value() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.ValueSetDouble">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.set_Value(Double value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.AllInstances.FormulaGet">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.get_Formula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.AllInstances.FormulaSetString">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.set_Formula(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.AllInstances.RuleTypeGet">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.get_RuleType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.AllInstances.RuleTypeSeteExcelConditionalFormattingRuleType">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.set_RuleType(eExcelConditionalFormattingRuleType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.AllInstances.TypeGet">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.AllInstances.TypeSeteExcelConditionalFormattingValueObjectType">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.set_Type(eExcelConditionalFormattingValueObjectType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.AllInstances.ValueGet">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.get_Value() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconDataBarValue.AllInstances.ValueSetDouble">
            <summary>设置 ExcelConditionalFormattingIconDataBarValue.set_Value(Double value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingIconSetBase`1 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingIconSetBase{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingIconSetGroup{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingThreeIconSet{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.ExcelConditionalFormattingIconSetBase`1(eExcelConditionalFormattingRuleType type, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.ExcelConditionalFormattingIconSetBase`1(eExcelConditionalFormattingRuleType type, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.ExcelConditionalFormattingIconSetBase`1(eExcelConditionalFormattingRuleType type, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.GetIconSetStringT0">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.GetIconSetString(!0 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.Icon1Get">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.get_Icon1() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.Icon1SetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.set_Icon1(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.Icon2Get">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.get_Icon2() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.Icon2SetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.set_Icon2(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.Icon3Get">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.get_Icon3() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.Icon3SetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.set_Icon3(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.IconSetGet">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.get_IconSet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.IconSetSetT0">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.set_IconSet(!0 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.ReverseGet">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.get_Reverse() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.ReverseSetBoolean">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.set_Reverse(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.ShowValueGet">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.get_ShowValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.ShowValueSetBoolean">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.set_ShowValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.AllInstances.GetIconSetStringT0">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.GetIconSetString(!0 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.AllInstances.Icon1Get">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.get_Icon1() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.AllInstances.Icon1SetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.set_Icon1(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.AllInstances.Icon2Get">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.get_Icon2() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.AllInstances.Icon2SetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.set_Icon2(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.AllInstances.Icon3Get">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.get_Icon3() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.AllInstances.Icon3SetExcelConditionalFormattingIconDataBarValue">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.set_Icon3(ExcelConditionalFormattingIconDataBarValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.AllInstances.IconSetGet">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.get_IconSet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.AllInstances.IconSetSetT0">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.set_IconSet(!0 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.AllInstances.ReverseGet">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.get_Reverse() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.AllInstances.ReverseSetBoolean">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.set_Reverse(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.AllInstances.ShowValueGet">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.get_ShowValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingIconSetBase`1.AllInstances.ShowValueSetBoolean">
            <summary>设置 ExcelConditionalFormattingIconSetBase`1.set_ShowValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLast7Days">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingLast7Days 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLast7Days.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLast7Days.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingLast7Days)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLast7Days.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLast7Days.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLast7Days.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLast7Days.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTimePeriodGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLast7Days.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLast7Days.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingLast7Days.ExcelConditionalFormattingLast7Days(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLast7Days.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingLast7Days.ExcelConditionalFormattingLast7Days(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLast7Days.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingLast7Days.ExcelConditionalFormattingLast7Days(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLast7Days.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastMonth">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingLastMonth 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastMonth.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastMonth.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingLastMonth)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastMonth.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastMonth.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastMonth.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastMonth.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTimePeriodGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastMonth.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastMonth.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingLastMonth.ExcelConditionalFormattingLastMonth(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastMonth.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingLastMonth.ExcelConditionalFormattingLastMonth(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastMonth.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingLastMonth.ExcelConditionalFormattingLastMonth(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastMonth.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastWeek">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingLastWeek 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastWeek.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastWeek.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingLastWeek)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastWeek.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastWeek.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastWeek.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastWeek.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTimePeriodGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastWeek.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastWeek.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingLastWeek.ExcelConditionalFormattingLastWeek(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastWeek.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingLastWeek.ExcelConditionalFormattingLastWeek(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastWeek.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingLastWeek.ExcelConditionalFormattingLastWeek(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLastWeek.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThan">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingLessThan 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThan.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThan.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingLessThan)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThan.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThan.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThan.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingLessThan)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThan.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThan.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithFormula)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThan.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThan.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingLessThan.ExcelConditionalFormattingLessThan(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThan.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingLessThan.ExcelConditionalFormattingLessThan(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThan.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingLessThan.ExcelConditionalFormattingLessThan(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThan.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThanOrEqual">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingLessThanOrEqual 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThanOrEqual.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThanOrEqual.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingLessThanOrEqual)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThanOrEqual.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThanOrEqual.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThanOrEqual.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingLessThanOrEqual)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThanOrEqual.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThanOrEqual.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithFormula)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThanOrEqual.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThanOrEqual.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingLessThanOrEqual.ExcelConditionalFormattingLessThanOrEqual(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThanOrEqual.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingLessThanOrEqual.ExcelConditionalFormattingLessThanOrEqual(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThanOrEqual.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingLessThanOrEqual.ExcelConditionalFormattingLessThanOrEqual(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingLessThanOrEqual.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextMonth">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingNextMonth 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextMonth.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextMonth.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingNextMonth)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextMonth.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextMonth.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextMonth.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextMonth.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTimePeriodGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextMonth.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextMonth.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingNextMonth.ExcelConditionalFormattingNextMonth(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextMonth.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingNextMonth.ExcelConditionalFormattingNextMonth(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextMonth.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingNextMonth.ExcelConditionalFormattingNextMonth(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextMonth.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextWeek">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingNextWeek 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextWeek.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextWeek.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingNextWeek)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextWeek.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextWeek.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextWeek.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextWeek.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTimePeriodGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextWeek.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextWeek.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingNextWeek.ExcelConditionalFormattingNextWeek(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextWeek.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingNextWeek.ExcelConditionalFormattingNextWeek(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextWeek.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingNextWeek.ExcelConditionalFormattingNextWeek(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNextWeek.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotBetween">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingNotBetween 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotBetween.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotBetween.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingNotBetween)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotBetween.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotBetween.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotBetween.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingNotBetween)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotBetween.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotBetween.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithFormula)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotBetween.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithFormula2)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotBetween.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotBetween.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingNotBetween.ExcelConditionalFormattingNotBetween(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotBetween.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingNotBetween.ExcelConditionalFormattingNotBetween(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotBetween.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingNotBetween.ExcelConditionalFormattingNotBetween(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotBetween.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsBlanks">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingNotContainsBlanks 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsBlanks.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsBlanks.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingNotContainsBlanks)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsBlanks.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsBlanks.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsBlanks.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingNotContainsBlanks)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsBlanks.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsBlanks.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsBlanks.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingNotContainsBlanks.ExcelConditionalFormattingNotContainsBlanks(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsBlanks.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingNotContainsBlanks.ExcelConditionalFormattingNotContainsBlanks(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsBlanks.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingNotContainsBlanks.ExcelConditionalFormattingNotContainsBlanks(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsBlanks.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsErrors">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingNotContainsErrors 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsErrors.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsErrors.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingNotContainsErrors)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsErrors.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsErrors.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsErrors.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingNotContainsErrors)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsErrors.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsErrors.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsErrors.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingNotContainsErrors.ExcelConditionalFormattingNotContainsErrors(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsErrors.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingNotContainsErrors.ExcelConditionalFormattingNotContainsErrors(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsErrors.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingNotContainsErrors.ExcelConditionalFormattingNotContainsErrors(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsErrors.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingNotContainsText 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingNotContainsText)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingNotContainsText)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithText)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingNotContainsText.ExcelConditionalFormattingNotContainsText(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingNotContainsText.ExcelConditionalFormattingNotContainsText(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingNotContainsText.ExcelConditionalFormattingNotContainsText(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.TextGet">
            <summary>设置 ExcelConditionalFormattingNotContainsText.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.TextSetString">
            <summary>设置 ExcelConditionalFormattingNotContainsText.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.AllInstances.TextGet">
            <summary>设置 ExcelConditionalFormattingNotContainsText.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotContainsText.AllInstances.TextSetString">
            <summary>设置 ExcelConditionalFormattingNotContainsText.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotEqual">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingNotEqual 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotEqual.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotEqual.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingNotEqual)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotEqual.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotEqual.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotEqual.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingNotEqual)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotEqual.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotEqual.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithFormula)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotEqual.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotEqual.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingNotEqual.ExcelConditionalFormattingNotEqual(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotEqual.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingNotEqual.ExcelConditionalFormattingNotEqual(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotEqual.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingNotEqual.ExcelConditionalFormattingNotEqual(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingNotEqual.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AboveAverageGet">
            <summary>设置 ExcelConditionalFormattingRule.get_AboveAverage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AboveAverageSetNullableOfBoolean">
            <summary>设置 ExcelConditionalFormattingRule.set_AboveAverage(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AddressGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Address() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AddressSetExcelAddress">
            <summary>设置 ExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.BottomGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.BottomSetNullableOfBoolean">
            <summary>设置 ExcelConditionalFormattingRule.set_Bottom(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingRule.ExcelConditionalFormattingRule(eExcelConditionalFormattingRuleType type, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingRule.ExcelConditionalFormattingRule(eExcelConditionalFormattingRuleType type, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.DxfIdGet">
            <summary>设置 ExcelConditionalFormattingRule.get_DxfId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.DxfIdSetInt32">
            <summary>设置 ExcelConditionalFormattingRule.set_DxfId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.EqualAverageGet">
            <summary>设置 ExcelConditionalFormattingRule.get_EqualAverage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.EqualAverageSetNullableOfBoolean">
            <summary>设置 ExcelConditionalFormattingRule.set_EqualAverage(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.Formula2Get">
            <summary>设置 ExcelConditionalFormattingRule.get_Formula2() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.Formula2SetString">
            <summary>设置 ExcelConditionalFormattingRule.set_Formula2(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.FormulaGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Formula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.FormulaSetString">
            <summary>设置 ExcelConditionalFormattingRule.set_Formula(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.NodeGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Node() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.OperatorGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Operator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.OperatorSeteExcelConditionalFormattingOperatorType">
            <summary>设置 ExcelConditionalFormattingRule.set_Operator(eExcelConditionalFormattingOperatorType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.PercentGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Percent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.PercentSetNullableOfBoolean">
            <summary>设置 ExcelConditionalFormattingRule.set_Percent(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.PriorityGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Priority() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.PrioritySetInt32">
            <summary>设置 ExcelConditionalFormattingRule.set_Priority(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.RankGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Rank() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.RankSetUInt16">
            <summary>设置 ExcelConditionalFormattingRule.set_Rank(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.StaticConstructor">
            <summary>设置 ExcelConditionalFormattingRule.ExcelConditionalFormattingRule() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.StdDevGet">
            <summary>设置 ExcelConditionalFormattingRule.get_StdDev() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.StdDevSetUInt16">
            <summary>设置 ExcelConditionalFormattingRule.set_StdDev(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.StopIfTrueGet">
            <summary>设置 ExcelConditionalFormattingRule.get_StopIfTrue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.StopIfTrueSetBoolean">
            <summary>设置 ExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.StyleGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.TimePeriodGet">
            <summary>设置 ExcelConditionalFormattingRule.get_TimePeriod() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.TimePeriodSeteExcelConditionalFormattingTimePeriodType">
            <summary>设置 ExcelConditionalFormattingRule.set_TimePeriod(eExcelConditionalFormattingTimePeriodType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.TypeGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.TypeSeteExcelConditionalFormattingRuleType">
            <summary>设置 ExcelConditionalFormattingRule.set_Type(eExcelConditionalFormattingRuleType value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.AboveAverageGet">
            <summary>设置 ExcelConditionalFormattingRule.get_AboveAverage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.AboveAverageSetNullableOfBoolean">
            <summary>设置 ExcelConditionalFormattingRule.set_AboveAverage(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.AddressGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Address() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.AddressSetExcelAddress">
            <summary>设置 ExcelConditionalFormattingRule.set_Address(ExcelAddress value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.BottomGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.BottomSetNullableOfBoolean">
            <summary>设置 ExcelConditionalFormattingRule.set_Bottom(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.DxfIdGet">
            <summary>设置 ExcelConditionalFormattingRule.get_DxfId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.DxfIdSetInt32">
            <summary>设置 ExcelConditionalFormattingRule.set_DxfId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.EqualAverageGet">
            <summary>设置 ExcelConditionalFormattingRule.get_EqualAverage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.EqualAverageSetNullableOfBoolean">
            <summary>设置 ExcelConditionalFormattingRule.set_EqualAverage(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.Formula2Get">
            <summary>设置 ExcelConditionalFormattingRule.get_Formula2() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.Formula2SetString">
            <summary>设置 ExcelConditionalFormattingRule.set_Formula2(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.FormulaGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Formula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.FormulaSetString">
            <summary>设置 ExcelConditionalFormattingRule.set_Formula(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.NodeGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Node() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.OperatorGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Operator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.OperatorSeteExcelConditionalFormattingOperatorType">
            <summary>设置 ExcelConditionalFormattingRule.set_Operator(eExcelConditionalFormattingOperatorType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.PercentGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Percent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.PercentSetNullableOfBoolean">
            <summary>设置 ExcelConditionalFormattingRule.set_Percent(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.PriorityGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Priority() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.PrioritySetInt32">
            <summary>设置 ExcelConditionalFormattingRule.set_Priority(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.RankGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Rank() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.RankSetUInt16">
            <summary>设置 ExcelConditionalFormattingRule.set_Rank(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.StdDevGet">
            <summary>设置 ExcelConditionalFormattingRule.get_StdDev() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.StdDevSetUInt16">
            <summary>设置 ExcelConditionalFormattingRule.set_StdDev(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.StopIfTrueGet">
            <summary>设置 ExcelConditionalFormattingRule.get_StopIfTrue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.StopIfTrueSetBoolean">
            <summary>设置 ExcelConditionalFormattingRule.set_StopIfTrue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.StyleGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.TimePeriodGet">
            <summary>设置 ExcelConditionalFormattingRule.get_TimePeriod() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.TimePeriodSeteExcelConditionalFormattingTimePeriodType">
            <summary>设置 ExcelConditionalFormattingRule.set_TimePeriod(eExcelConditionalFormattingTimePeriodType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.TypeGet">
            <summary>设置 ExcelConditionalFormattingRule.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingRule.AllInstances.TypeSeteExcelConditionalFormattingRuleType">
            <summary>设置 ExcelConditionalFormattingRule.set_Type(eExcelConditionalFormattingRuleType value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisMonth">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingThisMonth 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisMonth.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisMonth.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingThisMonth)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisMonth.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisMonth.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisMonth.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisMonth.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTimePeriodGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisMonth.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisMonth.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingThisMonth.ExcelConditionalFormattingThisMonth(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisMonth.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingThisMonth.ExcelConditionalFormattingThisMonth(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisMonth.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingThisMonth.ExcelConditionalFormattingThisMonth(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisMonth.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisWeek">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingThisWeek 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisWeek.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisWeek.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingThisWeek)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisWeek.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisWeek.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisWeek.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisWeek.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTimePeriodGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisWeek.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisWeek.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingThisWeek.ExcelConditionalFormattingThisWeek(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisWeek.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingThisWeek.ExcelConditionalFormattingThisWeek(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisWeek.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingThisWeek.ExcelConditionalFormattingThisWeek(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThisWeek.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingThreeColorScale 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingThreeColorScale)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingColorScaleGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingThreeColorScale)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTwoColorScale)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.ExcelConditionalFormattingThreeColorScale(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.ExcelConditionalFormattingThreeColorScale(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.ExcelConditionalFormattingThreeColorScale(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.HighValueGet">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.get_HighValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.HighValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.set_HighValue(ExcelConditionalFormattingColorScaleValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.LowValueGet">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.get_LowValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.LowValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.set_LowValue(ExcelConditionalFormattingColorScaleValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.MiddleValueGet">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.get_MiddleValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.MiddleValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.set_MiddleValue(ExcelConditionalFormattingColorScaleValue value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.AllInstances.HighValueGet">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.get_HighValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.AllInstances.HighValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.set_HighValue(ExcelConditionalFormattingColorScaleValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.AllInstances.LowValueGet">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.get_LowValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.AllInstances.LowValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.set_LowValue(ExcelConditionalFormattingColorScaleValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.AllInstances.MiddleValueGet">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.get_MiddleValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeColorScale.AllInstances.MiddleValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 ExcelConditionalFormattingThreeColorScale.set_MiddleValue(ExcelConditionalFormattingColorScaleValue value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeIconSet">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingThreeIconSet 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeIconSet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeIconSet.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingThreeIconSet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeIconSet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeIconSet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeIconSet.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeIconSet.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingIconSetGroup{OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormatting3IconsSetType})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeIconSet.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingThreeIconSet{OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormatting3IconsSetType})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeIconSet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeIconSet.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingThreeIconSet.ExcelConditionalFormattingThreeIconSet(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingThreeIconSet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTimePeriodGroup">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingTimePeriodGroup 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTimePeriodGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTimePeriodGroup.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingTimePeriodGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTimePeriodGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTimePeriodGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTimePeriodGroup.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTimePeriodGroup.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTimePeriodGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTimePeriodGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTimePeriodGroup.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingTimePeriodGroup.ExcelConditionalFormattingTimePeriodGroup(eExcelConditionalFormattingRuleType type, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTimePeriodGroup.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingTimePeriodGroup.ExcelConditionalFormattingTimePeriodGroup(eExcelConditionalFormattingRuleType type, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTimePeriodGroup.ConstructoreExcelConditionalFormattingRuleTypeExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingTimePeriodGroup.ExcelConditionalFormattingTimePeriodGroup(eExcelConditionalFormattingRuleType type, ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTimePeriodGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingToday">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingToday 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingToday.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingToday.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingToday)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingToday.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingToday.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingToday.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingToday.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTimePeriodGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingToday.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingToday.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingToday.ExcelConditionalFormattingToday(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingToday.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingToday.ExcelConditionalFormattingToday(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingToday.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingToday.ExcelConditionalFormattingToday(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingToday.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTomorrow">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingTomorrow 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTomorrow.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTomorrow.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingTomorrow)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTomorrow.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTomorrow.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTomorrow.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTomorrow.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTimePeriodGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTomorrow.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTomorrow.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingTomorrow.ExcelConditionalFormattingTomorrow(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTomorrow.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingTomorrow.ExcelConditionalFormattingTomorrow(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTomorrow.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingTomorrow.ExcelConditionalFormattingTomorrow(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTomorrow.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTop">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingTop 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTop.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTop.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingTop)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTop.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTop.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTop.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTop.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTopBottomGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTop.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithRank)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTop.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTop.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingTop.ExcelConditionalFormattingTop(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTop.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingTop.ExcelConditionalFormattingTop(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTop.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingTop.ExcelConditionalFormattingTop(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTop.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTopPercent">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingTopPercent 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTopPercent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTopPercent.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingTopPercent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTopPercent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTopPercent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTopPercent.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTopPercent.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTopBottomGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTopPercent.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithRank)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTopPercent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTopPercent.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingTopPercent.ExcelConditionalFormattingTopPercent(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTopPercent.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingTopPercent.ExcelConditionalFormattingTopPercent(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTopPercent.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingTopPercent.ExcelConditionalFormattingTopPercent(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTopPercent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingTwoColorScale 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingTwoColorScale)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingColorScaleGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTwoColorScale)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingTwoColorScale.ExcelConditionalFormattingTwoColorScale(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingTwoColorScale.ExcelConditionalFormattingTwoColorScale(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingTwoColorScale.ExcelConditionalFormattingTwoColorScale(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.HighValueGet">
            <summary>设置 ExcelConditionalFormattingTwoColorScale.get_HighValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.HighValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 ExcelConditionalFormattingTwoColorScale.set_HighValue(ExcelConditionalFormattingColorScaleValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.LowValueGet">
            <summary>设置 ExcelConditionalFormattingTwoColorScale.get_LowValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.LowValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 ExcelConditionalFormattingTwoColorScale.set_LowValue(ExcelConditionalFormattingColorScaleValue value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.AllInstances.HighValueGet">
            <summary>设置 ExcelConditionalFormattingTwoColorScale.get_HighValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.AllInstances.HighValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 ExcelConditionalFormattingTwoColorScale.set_HighValue(ExcelConditionalFormattingColorScaleValue value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.AllInstances.LowValueGet">
            <summary>设置 ExcelConditionalFormattingTwoColorScale.get_LowValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingTwoColorScale.AllInstances.LowValueSetExcelConditionalFormattingColorScaleValue">
            <summary>设置 ExcelConditionalFormattingTwoColorScale.set_LowValue(ExcelConditionalFormattingColorScaleValue value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingUniqueValues">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingUniqueValues 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingUniqueValues.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingUniqueValues.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingUniqueValues)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingUniqueValues.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingUniqueValues.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingUniqueValues.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingUniqueValues.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingUniqueValues)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingUniqueValues.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingUniqueValues.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingUniqueValues.ExcelConditionalFormattingUniqueValues(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingUniqueValues.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingUniqueValues.ExcelConditionalFormattingUniqueValues(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingUniqueValues.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingUniqueValues.ExcelConditionalFormattingUniqueValues(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingUniqueValues.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingYesterday">
            <summary>OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingYesterday 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingYesterday.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingYesterday.#ctor(OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingYesterday)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingYesterday.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingYesterday.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingYesterday.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingYesterday.Bind(OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingTimePeriodGroup)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingYesterday.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingYesterday.ConstructorExcelAddressInt32ExcelWorksheet">
            <summary>设置 ExcelConditionalFormattingYesterday.ExcelConditionalFormattingYesterday(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingYesterday.ConstructorExcelAddressInt32ExcelWorksheetXmlNode">
            <summary>设置 ExcelConditionalFormattingYesterday.ExcelConditionalFormattingYesterday(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingYesterday.ConstructorExcelAddressInt32ExcelWorksheetXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelConditionalFormattingYesterday.ExcelConditionalFormattingYesterday(ExcelAddress address, Int32 priority, ExcelWorksheet worksheet, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.ShimExcelConditionalFormattingYesterday.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting">
            <summary>OfficeOpenXml.ConditionalFormatting.IRangeConditionalFormatting 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.#ctor">
            <summary>初始化 type StubIRangeConditionalFormatting 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddAboveAverage">
            <summary>设置 IRangeConditionalFormatting.AddAboveAverage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddAboveOrEqualAverage">
            <summary>设置 IRangeConditionalFormatting.AddAboveOrEqualAverage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddAboveStdDev">
            <summary>设置 IRangeConditionalFormatting.AddAboveStdDev() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddBeginsWith">
            <summary>设置 IRangeConditionalFormatting.AddBeginsWith() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddBelowAverage">
            <summary>设置 IRangeConditionalFormatting.AddBelowAverage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddBelowOrEqualAverage">
            <summary>设置 IRangeConditionalFormatting.AddBelowOrEqualAverage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddBelowStdDev">
            <summary>设置 IRangeConditionalFormatting.AddBelowStdDev() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddBetween">
            <summary>设置 IRangeConditionalFormatting.AddBetween() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddBottom">
            <summary>设置 IRangeConditionalFormatting.AddBottom() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddBottomPercent">
            <summary>设置 IRangeConditionalFormatting.AddBottomPercent() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddContainsBlanks">
            <summary>设置 IRangeConditionalFormatting.AddContainsBlanks() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddContainsErrors">
            <summary>设置 IRangeConditionalFormatting.AddContainsErrors() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddContainsText">
            <summary>设置 IRangeConditionalFormatting.AddContainsText() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddDatabarColor">
            <summary>设置 IRangeConditionalFormatting.AddDatabar(Color color) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddDuplicateValues">
            <summary>设置 IRangeConditionalFormatting.AddDuplicateValues() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddEndsWith">
            <summary>设置 IRangeConditionalFormatting.AddEndsWith() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddEqual">
            <summary>设置 IRangeConditionalFormatting.AddEqual() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddExpression">
            <summary>设置 IRangeConditionalFormatting.AddExpression() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddFiveIconSeteExcelconditionalFormatting5IconsSetType">
            <summary>设置 IRangeConditionalFormatting.AddFiveIconSet(eExcelconditionalFormatting5IconsSetType IconSet) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddFourIconSeteExcelconditionalFormatting4IconsSetType">
            <summary>设置 IRangeConditionalFormatting.AddFourIconSet(eExcelconditionalFormatting4IconsSetType IconSet) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddGreaterThan">
            <summary>设置 IRangeConditionalFormatting.AddGreaterThan() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddGreaterThanOrEqual">
            <summary>设置 IRangeConditionalFormatting.AddGreaterThanOrEqual() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddLast7Days">
            <summary>设置 IRangeConditionalFormatting.AddLast7Days() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddLastMonth">
            <summary>设置 IRangeConditionalFormatting.AddLastMonth() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddLastWeek">
            <summary>设置 IRangeConditionalFormatting.AddLastWeek() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddLessThan">
            <summary>设置 IRangeConditionalFormatting.AddLessThan() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddLessThanOrEqual">
            <summary>设置 IRangeConditionalFormatting.AddLessThanOrEqual() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddNextMonth">
            <summary>设置 IRangeConditionalFormatting.AddNextMonth() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddNextWeek">
            <summary>设置 IRangeConditionalFormatting.AddNextWeek() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddNotBetween">
            <summary>设置 IRangeConditionalFormatting.AddNotBetween() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddNotContainsBlanks">
            <summary>设置 IRangeConditionalFormatting.AddNotContainsBlanks() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddNotContainsErrors">
            <summary>设置 IRangeConditionalFormatting.AddNotContainsErrors() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddNotContainsText">
            <summary>设置 IRangeConditionalFormatting.AddNotContainsText() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddNotEqual">
            <summary>设置 IRangeConditionalFormatting.AddNotEqual() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddThisMonth">
            <summary>设置 IRangeConditionalFormatting.AddThisMonth() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddThisWeek">
            <summary>设置 IRangeConditionalFormatting.AddThisWeek() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddThreeColorScale">
            <summary>设置 IRangeConditionalFormatting.AddThreeColorScale() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddThreeIconSeteExcelconditionalFormatting3IconsSetType">
            <summary>设置 IRangeConditionalFormatting.AddThreeIconSet(eExcelconditionalFormatting3IconsSetType IconSet) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddToday">
            <summary>设置 IRangeConditionalFormatting.AddToday() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddTomorrow">
            <summary>设置 IRangeConditionalFormatting.AddTomorrow() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddTop">
            <summary>设置 IRangeConditionalFormatting.AddTop() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddTopPercent">
            <summary>设置 IRangeConditionalFormatting.AddTopPercent() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddTwoColorScale">
            <summary>设置 IRangeConditionalFormatting.AddTwoColorScale() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddUniqueValues">
            <summary>设置 IRangeConditionalFormatting.AddUniqueValues() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.AddYesterday">
            <summary>设置 IRangeConditionalFormatting.AddYesterday() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddAboveAverage">
            <summary>设置 IRangeConditionalFormatting.AddAboveAverage() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddAboveOrEqualAverage">
            <summary>设置 IRangeConditionalFormatting.AddAboveOrEqualAverage() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddAboveStdDev">
            <summary>设置 IRangeConditionalFormatting.AddAboveStdDev() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddBeginsWith">
            <summary>设置 IRangeConditionalFormatting.AddBeginsWith() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddBelowAverage">
            <summary>设置 IRangeConditionalFormatting.AddBelowAverage() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddBelowOrEqualAverage">
            <summary>设置 IRangeConditionalFormatting.AddBelowOrEqualAverage() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddBelowStdDev">
            <summary>设置 IRangeConditionalFormatting.AddBelowStdDev() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddBetween">
            <summary>设置 IRangeConditionalFormatting.AddBetween() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddBottom">
            <summary>设置 IRangeConditionalFormatting.AddBottom() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddBottomPercent">
            <summary>设置 IRangeConditionalFormatting.AddBottomPercent() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddContainsBlanks">
            <summary>设置 IRangeConditionalFormatting.AddContainsBlanks() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddContainsErrors">
            <summary>设置 IRangeConditionalFormatting.AddContainsErrors() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddContainsText">
            <summary>设置 IRangeConditionalFormatting.AddContainsText() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddDatabar(System.Drawing.Color)">
            <summary>设置 IRangeConditionalFormatting.AddDatabar(Color color) 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddDuplicateValues">
            <summary>设置 IRangeConditionalFormatting.AddDuplicateValues() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddEndsWith">
            <summary>设置 IRangeConditionalFormatting.AddEndsWith() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddEqual">
            <summary>设置 IRangeConditionalFormatting.AddEqual() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddExpression">
            <summary>设置 IRangeConditionalFormatting.AddExpression() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddFiveIconSet(OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormatting5IconsSetType)">
            <summary>设置 IRangeConditionalFormatting.AddFiveIconSet(eExcelconditionalFormatting5IconsSetType IconSet) 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddFourIconSet(OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormatting4IconsSetType)">
            <summary>设置 IRangeConditionalFormatting.AddFourIconSet(eExcelconditionalFormatting4IconsSetType IconSet) 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddGreaterThan">
            <summary>设置 IRangeConditionalFormatting.AddGreaterThan() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddGreaterThanOrEqual">
            <summary>设置 IRangeConditionalFormatting.AddGreaterThanOrEqual() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddLast7Days">
            <summary>设置 IRangeConditionalFormatting.AddLast7Days() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddLastMonth">
            <summary>设置 IRangeConditionalFormatting.AddLastMonth() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddLastWeek">
            <summary>设置 IRangeConditionalFormatting.AddLastWeek() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddLessThan">
            <summary>设置 IRangeConditionalFormatting.AddLessThan() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddLessThanOrEqual">
            <summary>设置 IRangeConditionalFormatting.AddLessThanOrEqual() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddNextMonth">
            <summary>设置 IRangeConditionalFormatting.AddNextMonth() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddNextWeek">
            <summary>设置 IRangeConditionalFormatting.AddNextWeek() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddNotBetween">
            <summary>设置 IRangeConditionalFormatting.AddNotBetween() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddNotContainsBlanks">
            <summary>设置 IRangeConditionalFormatting.AddNotContainsBlanks() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddNotContainsErrors">
            <summary>设置 IRangeConditionalFormatting.AddNotContainsErrors() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddNotContainsText">
            <summary>设置 IRangeConditionalFormatting.AddNotContainsText() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddNotEqual">
            <summary>设置 IRangeConditionalFormatting.AddNotEqual() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddThisMonth">
            <summary>设置 IRangeConditionalFormatting.AddThisMonth() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddThisWeek">
            <summary>设置 IRangeConditionalFormatting.AddThisWeek() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddThreeColorScale">
            <summary>设置 IRangeConditionalFormatting.AddThreeColorScale() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddThreeIconSet(OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormatting3IconsSetType)">
            <summary>设置 IRangeConditionalFormatting.AddThreeIconSet(eExcelconditionalFormatting3IconsSetType IconSet) 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddToday">
            <summary>设置 IRangeConditionalFormatting.AddToday() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddTomorrow">
            <summary>设置 IRangeConditionalFormatting.AddTomorrow() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddTop">
            <summary>设置 IRangeConditionalFormatting.AddTop() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddTopPercent">
            <summary>设置 IRangeConditionalFormatting.AddTopPercent() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddTwoColorScale">
            <summary>设置 IRangeConditionalFormatting.AddTwoColorScale() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddUniqueValues">
            <summary>设置 IRangeConditionalFormatting.AddUniqueValues() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.ConditionalFormatting.Fakes.StubIRangeConditionalFormatting.epp::OfficeOpenXml#ConditionalFormatting#IRangeConditionalFormatting#AddYesterday">
            <summary>设置 IRangeConditionalFormatting.AddYesterday() 的 存根</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation">
            <summary>OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.#ctor">
            <summary>初始化 type StubIExcelDataValidation 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.AddressGet">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.AllowBlankGet">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.AllowBlankSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_AllowBlank(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.AllowsOperatorGet">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.AttachBackingFieldToAllowBlank">
            <summary>附加委托以将 StubIExcelDataValidation.AllowBlank 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.AttachBackingFieldToError">
            <summary>附加委托以将 StubIExcelDataValidation.Error 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.AttachBackingFieldToErrorStyle">
            <summary>附加委托以将 StubIExcelDataValidation.ErrorStyle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.AttachBackingFieldToErrorTitle">
            <summary>附加委托以将 StubIExcelDataValidation.ErrorTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.AttachBackingFieldToPrompt">
            <summary>附加委托以将 StubIExcelDataValidation.Prompt 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.AttachBackingFieldToPromptTitle">
            <summary>附加委托以将 StubIExcelDataValidation.PromptTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.AttachBackingFieldToShowErrorMessage">
            <summary>附加委托以将 StubIExcelDataValidation.ShowErrorMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.AttachBackingFieldToShowInputMessage">
            <summary>附加委托以将 StubIExcelDataValidation.ShowInputMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.ErrorGet">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.ErrorSetString">
            <summary>设置 IExcelDataValidation.set_Error(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.ErrorStyleGet">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.ErrorStyleSetExcelDataValidationWarningStyle">
            <summary>设置 IExcelDataValidation.set_ErrorStyle(ExcelDataValidationWarningStyle value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.ErrorTitleGet">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.ErrorTitleSetString">
            <summary>设置 IExcelDataValidation.set_ErrorTitle(String value) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.PromptGet">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.PromptSetString">
            <summary>设置 IExcelDataValidation.set_Prompt(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.PromptTitleGet">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.PromptTitleSetString">
            <summary>设置 IExcelDataValidation.set_PromptTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.ShowErrorMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.ShowErrorMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowErrorMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.ShowInputMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.ShowInputMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowInputMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.ValidationTypeGet">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Address">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowBlank">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowsOperator">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Error">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorStyle">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorTitle">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Prompt">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#PromptTitle">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowErrorMessage">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowInputMessage">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidation.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ValidationType">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom">
            <summary>OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationCustom 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.#ctor">
            <summary>初始化 type StubIExcelDataValidationCustom 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.AddressGet">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.AllowBlankGet">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.AllowBlankSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_AllowBlank(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.AllowsOperatorGet">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.AttachBackingFieldToAllowBlank">
            <summary>附加委托以将 StubIExcelDataValidationCustom.AllowBlank 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.AttachBackingFieldToError">
            <summary>附加委托以将 StubIExcelDataValidationCustom.Error 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.AttachBackingFieldToErrorStyle">
            <summary>附加委托以将 StubIExcelDataValidationCustom.ErrorStyle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.AttachBackingFieldToErrorTitle">
            <summary>附加委托以将 StubIExcelDataValidationCustom.ErrorTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.AttachBackingFieldToOperator">
            <summary>附加委托以将 StubIExcelDataValidationCustom.Operator 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.AttachBackingFieldToPrompt">
            <summary>附加委托以将 StubIExcelDataValidationCustom.Prompt 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.AttachBackingFieldToPromptTitle">
            <summary>附加委托以将 StubIExcelDataValidationCustom.PromptTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.AttachBackingFieldToShowErrorMessage">
            <summary>附加委托以将 StubIExcelDataValidationCustom.ShowErrorMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.AttachBackingFieldToShowInputMessage">
            <summary>附加委托以将 StubIExcelDataValidationCustom.ShowInputMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.ErrorGet">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.ErrorSetString">
            <summary>设置 IExcelDataValidation.set_Error(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.ErrorStyleGet">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.ErrorStyleSetExcelDataValidationWarningStyle">
            <summary>设置 IExcelDataValidation.set_ErrorStyle(ExcelDataValidationWarningStyle value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.ErrorTitleGet">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.ErrorTitleSetString">
            <summary>设置 IExcelDataValidation.set_ErrorTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.FormulaGet">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.OperatorGet">
            <summary>设置 IExcelDataValidationWithOperator.get_Operator() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.OperatorSetExcelDataValidationOperator">
            <summary>设置 IExcelDataValidationWithOperator.set_Operator(ExcelDataValidationOperator value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.PromptGet">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.PromptSetString">
            <summary>设置 IExcelDataValidation.set_Prompt(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.PromptTitleGet">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.PromptTitleSetString">
            <summary>设置 IExcelDataValidation.set_PromptTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.ShowErrorMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.ShowErrorMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowErrorMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.ShowInputMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.ShowInputMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowInputMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.ValidationTypeGet">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Address">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowBlank">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowsOperator">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Error">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorStyle">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorTitle">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithFormula{OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormula}#Formula">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithOperator#Operator">
            <summary>设置 IExcelDataValidationWithOperator.get_Operator() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Prompt">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#PromptTitle">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowErrorMessage">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowInputMessage">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationCustom.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ValidationType">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime">
            <summary>OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationDateTime 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.#ctor">
            <summary>初始化 type StubIExcelDataValidationDateTime 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.AddressGet">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.AllowBlankGet">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.AllowBlankSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_AllowBlank(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.AllowsOperatorGet">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.AttachBackingFieldToAllowBlank">
            <summary>附加委托以将 StubIExcelDataValidationDateTime.AllowBlank 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.AttachBackingFieldToError">
            <summary>附加委托以将 StubIExcelDataValidationDateTime.Error 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.AttachBackingFieldToErrorStyle">
            <summary>附加委托以将 StubIExcelDataValidationDateTime.ErrorStyle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.AttachBackingFieldToErrorTitle">
            <summary>附加委托以将 StubIExcelDataValidationDateTime.ErrorTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.AttachBackingFieldToOperator">
            <summary>附加委托以将 StubIExcelDataValidationDateTime.Operator 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.AttachBackingFieldToPrompt">
            <summary>附加委托以将 StubIExcelDataValidationDateTime.Prompt 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.AttachBackingFieldToPromptTitle">
            <summary>附加委托以将 StubIExcelDataValidationDateTime.PromptTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.AttachBackingFieldToShowErrorMessage">
            <summary>附加委托以将 StubIExcelDataValidationDateTime.ShowErrorMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.AttachBackingFieldToShowInputMessage">
            <summary>附加委托以将 StubIExcelDataValidationDateTime.ShowInputMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.ErrorGet">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.ErrorSetString">
            <summary>设置 IExcelDataValidation.set_Error(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.ErrorStyleGet">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.ErrorStyleSetExcelDataValidationWarningStyle">
            <summary>设置 IExcelDataValidation.set_ErrorStyle(ExcelDataValidationWarningStyle value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.ErrorTitleGet">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.ErrorTitleSetString">
            <summary>设置 IExcelDataValidation.set_ErrorTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.Formula2Get">
            <summary>设置 IExcelDataValidationWithFormula2`1.get_Formula2() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.FormulaGet">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.OperatorGet">
            <summary>设置 IExcelDataValidationWithOperator.get_Operator() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.OperatorSetExcelDataValidationOperator">
            <summary>设置 IExcelDataValidationWithOperator.set_Operator(ExcelDataValidationOperator value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.PromptGet">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.PromptSetString">
            <summary>设置 IExcelDataValidation.set_Prompt(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.PromptTitleGet">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.PromptTitleSetString">
            <summary>设置 IExcelDataValidation.set_PromptTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.ShowErrorMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.ShowErrorMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowErrorMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.ShowInputMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.ShowInputMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowInputMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.ValidationTypeGet">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Address">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowBlank">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowsOperator">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Error">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorStyle">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorTitle">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithFormula{OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaDateTime}#Formula">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithFormula2{OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaDateTime}#Formula2">
            <summary>设置 IExcelDataValidationWithFormula2`1.get_Formula2() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithOperator#Operator">
            <summary>设置 IExcelDataValidationWithOperator.get_Operator() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Prompt">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#PromptTitle">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowErrorMessage">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowInputMessage">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDateTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ValidationType">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal">
            <summary>OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationDecimal 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.#ctor">
            <summary>初始化 type StubIExcelDataValidationDecimal 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.AddressGet">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.AllowBlankGet">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.AllowBlankSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_AllowBlank(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.AllowsOperatorGet">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.AttachBackingFieldToAllowBlank">
            <summary>附加委托以将 StubIExcelDataValidationDecimal.AllowBlank 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.AttachBackingFieldToError">
            <summary>附加委托以将 StubIExcelDataValidationDecimal.Error 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.AttachBackingFieldToErrorStyle">
            <summary>附加委托以将 StubIExcelDataValidationDecimal.ErrorStyle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.AttachBackingFieldToErrorTitle">
            <summary>附加委托以将 StubIExcelDataValidationDecimal.ErrorTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.AttachBackingFieldToOperator">
            <summary>附加委托以将 StubIExcelDataValidationDecimal.Operator 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.AttachBackingFieldToPrompt">
            <summary>附加委托以将 StubIExcelDataValidationDecimal.Prompt 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.AttachBackingFieldToPromptTitle">
            <summary>附加委托以将 StubIExcelDataValidationDecimal.PromptTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.AttachBackingFieldToShowErrorMessage">
            <summary>附加委托以将 StubIExcelDataValidationDecimal.ShowErrorMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.AttachBackingFieldToShowInputMessage">
            <summary>附加委托以将 StubIExcelDataValidationDecimal.ShowInputMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.ErrorGet">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.ErrorSetString">
            <summary>设置 IExcelDataValidation.set_Error(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.ErrorStyleGet">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.ErrorStyleSetExcelDataValidationWarningStyle">
            <summary>设置 IExcelDataValidation.set_ErrorStyle(ExcelDataValidationWarningStyle value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.ErrorTitleGet">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.ErrorTitleSetString">
            <summary>设置 IExcelDataValidation.set_ErrorTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.Formula2Get">
            <summary>设置 IExcelDataValidationWithFormula2`1.get_Formula2() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.FormulaGet">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.OperatorGet">
            <summary>设置 IExcelDataValidationWithOperator.get_Operator() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.OperatorSetExcelDataValidationOperator">
            <summary>设置 IExcelDataValidationWithOperator.set_Operator(ExcelDataValidationOperator value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.PromptGet">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.PromptSetString">
            <summary>设置 IExcelDataValidation.set_Prompt(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.PromptTitleGet">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.PromptTitleSetString">
            <summary>设置 IExcelDataValidation.set_PromptTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.ShowErrorMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.ShowErrorMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowErrorMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.ShowInputMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.ShowInputMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowInputMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.ValidationTypeGet">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Address">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowBlank">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowsOperator">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Error">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorStyle">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorTitle">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithFormula{OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaDecimal}#Formula">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithFormula2{OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaDecimal}#Formula2">
            <summary>设置 IExcelDataValidationWithFormula2`1.get_Formula2() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithOperator#Operator">
            <summary>设置 IExcelDataValidationWithOperator.get_Operator() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Prompt">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#PromptTitle">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowErrorMessage">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowInputMessage">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationDecimal.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ValidationType">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt">
            <summary>OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationInt 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.#ctor">
            <summary>初始化 type StubIExcelDataValidationInt 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.AddressGet">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.AllowBlankGet">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.AllowBlankSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_AllowBlank(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.AllowsOperatorGet">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.AttachBackingFieldToAllowBlank">
            <summary>附加委托以将 StubIExcelDataValidationInt.AllowBlank 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.AttachBackingFieldToError">
            <summary>附加委托以将 StubIExcelDataValidationInt.Error 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.AttachBackingFieldToErrorStyle">
            <summary>附加委托以将 StubIExcelDataValidationInt.ErrorStyle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.AttachBackingFieldToErrorTitle">
            <summary>附加委托以将 StubIExcelDataValidationInt.ErrorTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.AttachBackingFieldToOperator">
            <summary>附加委托以将 StubIExcelDataValidationInt.Operator 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.AttachBackingFieldToPrompt">
            <summary>附加委托以将 StubIExcelDataValidationInt.Prompt 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.AttachBackingFieldToPromptTitle">
            <summary>附加委托以将 StubIExcelDataValidationInt.PromptTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.AttachBackingFieldToShowErrorMessage">
            <summary>附加委托以将 StubIExcelDataValidationInt.ShowErrorMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.AttachBackingFieldToShowInputMessage">
            <summary>附加委托以将 StubIExcelDataValidationInt.ShowInputMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.ErrorGet">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.ErrorSetString">
            <summary>设置 IExcelDataValidation.set_Error(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.ErrorStyleGet">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.ErrorStyleSetExcelDataValidationWarningStyle">
            <summary>设置 IExcelDataValidation.set_ErrorStyle(ExcelDataValidationWarningStyle value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.ErrorTitleGet">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.ErrorTitleSetString">
            <summary>设置 IExcelDataValidation.set_ErrorTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.Formula2Get">
            <summary>设置 IExcelDataValidationWithFormula2`1.get_Formula2() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.FormulaGet">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.OperatorGet">
            <summary>设置 IExcelDataValidationWithOperator.get_Operator() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.OperatorSetExcelDataValidationOperator">
            <summary>设置 IExcelDataValidationWithOperator.set_Operator(ExcelDataValidationOperator value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.PromptGet">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.PromptSetString">
            <summary>设置 IExcelDataValidation.set_Prompt(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.PromptTitleGet">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.PromptTitleSetString">
            <summary>设置 IExcelDataValidation.set_PromptTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.ShowErrorMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.ShowErrorMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowErrorMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.ShowInputMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.ShowInputMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowInputMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.ValidationTypeGet">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Address">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowBlank">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowsOperator">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Error">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorStyle">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorTitle">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithFormula{OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaInt}#Formula">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithFormula2{OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaInt}#Formula2">
            <summary>设置 IExcelDataValidationWithFormula2`1.get_Formula2() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithOperator#Operator">
            <summary>设置 IExcelDataValidationWithOperator.get_Operator() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Prompt">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#PromptTitle">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowErrorMessage">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowInputMessage">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationInt.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ValidationType">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList">
            <summary>OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationList 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.#ctor">
            <summary>初始化 type StubIExcelDataValidationList 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.AddressGet">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.AllowBlankGet">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.AllowBlankSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_AllowBlank(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.AllowsOperatorGet">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.AttachBackingFieldToAllowBlank">
            <summary>附加委托以将 StubIExcelDataValidationList.AllowBlank 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.AttachBackingFieldToError">
            <summary>附加委托以将 StubIExcelDataValidationList.Error 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.AttachBackingFieldToErrorStyle">
            <summary>附加委托以将 StubIExcelDataValidationList.ErrorStyle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.AttachBackingFieldToErrorTitle">
            <summary>附加委托以将 StubIExcelDataValidationList.ErrorTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.AttachBackingFieldToPrompt">
            <summary>附加委托以将 StubIExcelDataValidationList.Prompt 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.AttachBackingFieldToPromptTitle">
            <summary>附加委托以将 StubIExcelDataValidationList.PromptTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.AttachBackingFieldToShowErrorMessage">
            <summary>附加委托以将 StubIExcelDataValidationList.ShowErrorMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.AttachBackingFieldToShowInputMessage">
            <summary>附加委托以将 StubIExcelDataValidationList.ShowInputMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.ErrorGet">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.ErrorSetString">
            <summary>设置 IExcelDataValidation.set_Error(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.ErrorStyleGet">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.ErrorStyleSetExcelDataValidationWarningStyle">
            <summary>设置 IExcelDataValidation.set_ErrorStyle(ExcelDataValidationWarningStyle value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.ErrorTitleGet">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.ErrorTitleSetString">
            <summary>设置 IExcelDataValidation.set_ErrorTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.FormulaGet">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.PromptGet">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.PromptSetString">
            <summary>设置 IExcelDataValidation.set_Prompt(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.PromptTitleGet">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.PromptTitleSetString">
            <summary>设置 IExcelDataValidation.set_PromptTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.ShowErrorMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.ShowErrorMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowErrorMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.ShowInputMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.ShowInputMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowInputMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.ValidationTypeGet">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Address">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowBlank">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowsOperator">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Error">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorStyle">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorTitle">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithFormula{OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaList}#Formula">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Prompt">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#PromptTitle">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowErrorMessage">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowInputMessage">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationList.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ValidationType">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime">
            <summary>OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationTime 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.#ctor">
            <summary>初始化 type StubIExcelDataValidationTime 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.AddressGet">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.AllowBlankGet">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.AllowBlankSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_AllowBlank(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.AllowsOperatorGet">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.AttachBackingFieldToAllowBlank">
            <summary>附加委托以将 StubIExcelDataValidationTime.AllowBlank 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.AttachBackingFieldToError">
            <summary>附加委托以将 StubIExcelDataValidationTime.Error 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.AttachBackingFieldToErrorStyle">
            <summary>附加委托以将 StubIExcelDataValidationTime.ErrorStyle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.AttachBackingFieldToErrorTitle">
            <summary>附加委托以将 StubIExcelDataValidationTime.ErrorTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.AttachBackingFieldToOperator">
            <summary>附加委托以将 StubIExcelDataValidationTime.Operator 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.AttachBackingFieldToPrompt">
            <summary>附加委托以将 StubIExcelDataValidationTime.Prompt 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.AttachBackingFieldToPromptTitle">
            <summary>附加委托以将 StubIExcelDataValidationTime.PromptTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.AttachBackingFieldToShowErrorMessage">
            <summary>附加委托以将 StubIExcelDataValidationTime.ShowErrorMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.AttachBackingFieldToShowInputMessage">
            <summary>附加委托以将 StubIExcelDataValidationTime.ShowInputMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.ErrorGet">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.ErrorSetString">
            <summary>设置 IExcelDataValidation.set_Error(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.ErrorStyleGet">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.ErrorStyleSetExcelDataValidationWarningStyle">
            <summary>设置 IExcelDataValidation.set_ErrorStyle(ExcelDataValidationWarningStyle value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.ErrorTitleGet">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.ErrorTitleSetString">
            <summary>设置 IExcelDataValidation.set_ErrorTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.Formula2Get">
            <summary>设置 IExcelDataValidationWithFormula2`1.get_Formula2() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.FormulaGet">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.OperatorGet">
            <summary>设置 IExcelDataValidationWithOperator.get_Operator() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.OperatorSetExcelDataValidationOperator">
            <summary>设置 IExcelDataValidationWithOperator.set_Operator(ExcelDataValidationOperator value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.PromptGet">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.PromptSetString">
            <summary>设置 IExcelDataValidation.set_Prompt(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.PromptTitleGet">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.PromptTitleSetString">
            <summary>设置 IExcelDataValidation.set_PromptTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.ShowErrorMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.ShowErrorMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowErrorMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.ShowInputMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.ShowInputMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowInputMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.ValidationTypeGet">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Address">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowBlank">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowsOperator">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Error">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorStyle">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorTitle">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithFormula{OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaTime}#Formula">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithFormula2{OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaTime}#Formula2">
            <summary>设置 IExcelDataValidationWithFormula2`1.get_Formula2() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithOperator#Operator">
            <summary>设置 IExcelDataValidationWithOperator.get_Operator() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Prompt">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#PromptTitle">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowErrorMessage">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowInputMessage">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationTime.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ValidationType">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1">
            <summary>OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula`1 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.#ctor">
            <summary>初始化 type StubIExcelDataValidationWithFormula 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.AddressGet">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.AllowBlankGet">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.AllowBlankSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_AllowBlank(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.AllowsOperatorGet">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.AttachBackingFieldToAllowBlank">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula.AllowBlank 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.AttachBackingFieldToError">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula.Error 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.AttachBackingFieldToErrorStyle">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula.ErrorStyle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.AttachBackingFieldToErrorTitle">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula.ErrorTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.AttachBackingFieldToPrompt">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula.Prompt 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.AttachBackingFieldToPromptTitle">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula.PromptTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.AttachBackingFieldToShowErrorMessage">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula.ShowErrorMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.AttachBackingFieldToShowInputMessage">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula.ShowInputMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.ErrorGet">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.ErrorSetString">
            <summary>设置 IExcelDataValidation.set_Error(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.ErrorStyleGet">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.ErrorStyleSetExcelDataValidationWarningStyle">
            <summary>设置 IExcelDataValidation.set_ErrorStyle(ExcelDataValidationWarningStyle value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.ErrorTitleGet">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.ErrorTitleSetString">
            <summary>设置 IExcelDataValidation.set_ErrorTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.FormulaGet">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.PromptGet">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.PromptSetString">
            <summary>设置 IExcelDataValidation.set_Prompt(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.PromptTitleGet">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.PromptTitleSetString">
            <summary>设置 IExcelDataValidation.set_PromptTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.ShowErrorMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.ShowErrorMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowErrorMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.ShowInputMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.ShowInputMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowInputMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.ValidationTypeGet">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Address">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowBlank">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowsOperator">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Error">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorStyle">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorTitle">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithFormula{T}#Formula">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Prompt">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#PromptTitle">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowErrorMessage">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowInputMessage">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ValidationType">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1">
            <summary>OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2`1 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.#ctor">
            <summary>初始化 type StubIExcelDataValidationWithFormula2 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.AddressGet">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.AllowBlankGet">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.AllowBlankSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_AllowBlank(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.AllowsOperatorGet">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.AttachBackingFieldToAllowBlank">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula2.AllowBlank 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.AttachBackingFieldToError">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula2.Error 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.AttachBackingFieldToErrorStyle">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula2.ErrorStyle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.AttachBackingFieldToErrorTitle">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula2.ErrorTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.AttachBackingFieldToPrompt">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula2.Prompt 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.AttachBackingFieldToPromptTitle">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula2.PromptTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.AttachBackingFieldToShowErrorMessage">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula2.ShowErrorMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.AttachBackingFieldToShowInputMessage">
            <summary>附加委托以将 StubIExcelDataValidationWithFormula2.ShowInputMessage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.ErrorGet">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.ErrorSetString">
            <summary>设置 IExcelDataValidation.set_Error(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.ErrorStyleGet">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.ErrorStyleSetExcelDataValidationWarningStyle">
            <summary>设置 IExcelDataValidation.set_ErrorStyle(ExcelDataValidationWarningStyle value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.ErrorTitleGet">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.ErrorTitleSetString">
            <summary>设置 IExcelDataValidation.set_ErrorTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.Formula2Get">
            <summary>设置 IExcelDataValidationWithFormula2`1.get_Formula2() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.FormulaGet">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.PromptGet">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.PromptSetString">
            <summary>设置 IExcelDataValidation.set_Prompt(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.PromptTitleGet">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.PromptTitleSetString">
            <summary>设置 IExcelDataValidation.set_PromptTitle(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.ShowErrorMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.ShowErrorMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowErrorMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.ShowInputMessageGet">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.ShowInputMessageSetNullableOfBoolean">
            <summary>设置 IExcelDataValidation.set_ShowInputMessage(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.Validate">
            <summary>设置 IExcelDataValidation.Validate() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.ValidationTypeGet">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Address">
            <summary>设置 IExcelDataValidation.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowBlank">
            <summary>设置 IExcelDataValidation.get_AllowBlank() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#AllowsOperator">
            <summary>设置 IExcelDataValidation.get_AllowsOperator() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Error">
            <summary>设置 IExcelDataValidation.get_Error() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorStyle">
            <summary>设置 IExcelDataValidation.get_ErrorStyle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ErrorTitle">
            <summary>设置 IExcelDataValidation.get_ErrorTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithFormula{T}#Formula">
            <summary>设置 IExcelDataValidationWithFormula`1.get_Formula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithFormula2{T}#Formula2">
            <summary>设置 IExcelDataValidationWithFormula2`1.get_Formula2() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#Prompt">
            <summary>设置 IExcelDataValidation.get_Prompt() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#PromptTitle">
            <summary>设置 IExcelDataValidation.get_PromptTitle() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowErrorMessage">
            <summary>设置 IExcelDataValidation.get_ShowErrorMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ShowInputMessage">
            <summary>设置 IExcelDataValidation.get_ShowInputMessage() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithFormula2`1.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#ValidationType">
            <summary>设置 IExcelDataValidation.get_ValidationType() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithOperator">
            <summary>OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithOperator 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithOperator.#ctor">
            <summary>初始化 type StubIExcelDataValidationWithOperator 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithOperator.AttachBackingFieldToOperator">
            <summary>附加委托以将 StubIExcelDataValidationWithOperator.Operator 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithOperator.OperatorGet">
            <summary>设置 IExcelDataValidationWithOperator.get_Operator() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithOperator.OperatorSetExcelDataValidationOperator">
            <summary>设置 IExcelDataValidationWithOperator.set_Operator(ExcelDataValidationOperator value) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Contracts.Fakes.StubIExcelDataValidationWithOperator.epp::OfficeOpenXml#DataValidation#Contracts#IExcelDataValidationWithOperator#Operator">
            <summary>设置 IExcelDataValidationWithOperator.get_Operator() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation">
            <summary>OfficeOpenXml.DataValidation.ExcelDataValidation 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.#ctor(OfficeOpenXml.DataValidation.ExcelDataValidation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AddressGet">
            <summary>设置 ExcelDataValidation.get_Address() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AddressSetExcelAddress">
            <summary>设置 ExcelDataValidation.set_Address(ExcelAddress value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllowBlankGet">
            <summary>设置 ExcelDataValidation.get_AllowBlank() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllowBlankSetNullableOfBoolean">
            <summary>设置 ExcelDataValidation.set_AllowBlank(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllowsOperatorGet">
            <summary>设置 ExcelDataValidation.get_AllowsOperator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.CheckAndFixRangeAddressString">
            <summary>设置 ExcelDataValidation.CheckAndFixRangeAddress(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ConstructorExcelWorksheetStringExcelDataValidationType">
            <summary>设置 ExcelDataValidation.ExcelDataValidation(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNode">
            <summary>设置 ExcelDataValidation.ExcelDataValidation(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelDataValidation.ExcelDataValidation(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ErrorGet">
            <summary>设置 ExcelDataValidation.get_Error() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ErrorSetString">
            <summary>设置 ExcelDataValidation.set_Error(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ErrorStyleGet">
            <summary>设置 ExcelDataValidation.get_ErrorStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ErrorStyleSetExcelDataValidationWarningStyle">
            <summary>设置 ExcelDataValidation.set_ErrorStyle(ExcelDataValidationWarningStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ErrorTitleGet">
            <summary>设置 ExcelDataValidation.get_ErrorTitle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ErrorTitleSetString">
            <summary>设置 ExcelDataValidation.set_ErrorTitle(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.Formula1InternalGet">
            <summary>设置 ExcelDataValidation.get_Formula1Internal() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.Formula2InternalGet">
            <summary>设置 ExcelDataValidation.get_Formula2Internal() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.Init">
            <summary>设置 ExcelDataValidation.Init() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.OperatorGet">
            <summary>设置 ExcelDataValidation.get_Operator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.OperatorSetExcelDataValidationOperator">
            <summary>设置 ExcelDataValidation.set_Operator(ExcelDataValidationOperator value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.PromptGet">
            <summary>设置 ExcelDataValidation.get_Prompt() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.PromptSetString">
            <summary>设置 ExcelDataValidation.set_Prompt(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.PromptTitleGet">
            <summary>设置 ExcelDataValidation.get_PromptTitle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.PromptTitleSetString">
            <summary>设置 ExcelDataValidation.set_PromptTitle(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.SetNullableBoolValueStringNullableOfBoolean">
            <summary>设置 ExcelDataValidation.SetNullableBoolValue(String path, Nullable`1&lt;Boolean&gt; val) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ShowErrorMessageGet">
            <summary>设置 ExcelDataValidation.get_ShowErrorMessage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ShowErrorMessageSetNullableOfBoolean">
            <summary>设置 ExcelDataValidation.set_ShowErrorMessage(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ShowInputMessageGet">
            <summary>设置 ExcelDataValidation.get_ShowInputMessage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ShowInputMessageSetNullableOfBoolean">
            <summary>设置 ExcelDataValidation.set_ShowInputMessage(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.Validate">
            <summary>设置 ExcelDataValidation.Validate() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ValidationTypeGet">
            <summary>设置 ExcelDataValidation.get_ValidationType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.ValidationTypeSetExcelDataValidationType">
            <summary>设置 ExcelDataValidation.set_ValidationType(ExcelDataValidationType value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.AddressGet">
            <summary>设置 ExcelDataValidation.get_Address() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.AddressSetExcelAddress">
            <summary>设置 ExcelDataValidation.set_Address(ExcelAddress value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.AllowBlankGet">
            <summary>设置 ExcelDataValidation.get_AllowBlank() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.AllowBlankSetNullableOfBoolean">
            <summary>设置 ExcelDataValidation.set_AllowBlank(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.AllowsOperatorGet">
            <summary>设置 ExcelDataValidation.get_AllowsOperator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.CheckAndFixRangeAddressString">
            <summary>设置 ExcelDataValidation.CheckAndFixRangeAddress(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.ErrorGet">
            <summary>设置 ExcelDataValidation.get_Error() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.ErrorSetString">
            <summary>设置 ExcelDataValidation.set_Error(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.ErrorStyleGet">
            <summary>设置 ExcelDataValidation.get_ErrorStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.ErrorStyleSetExcelDataValidationWarningStyle">
            <summary>设置 ExcelDataValidation.set_ErrorStyle(ExcelDataValidationWarningStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.ErrorTitleGet">
            <summary>设置 ExcelDataValidation.get_ErrorTitle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.ErrorTitleSetString">
            <summary>设置 ExcelDataValidation.set_ErrorTitle(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.Formula1InternalGet">
            <summary>设置 ExcelDataValidation.get_Formula1Internal() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.Formula2InternalGet">
            <summary>设置 ExcelDataValidation.get_Formula2Internal() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.Init">
            <summary>设置 ExcelDataValidation.Init() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.OperatorGet">
            <summary>设置 ExcelDataValidation.get_Operator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.OperatorSetExcelDataValidationOperator">
            <summary>设置 ExcelDataValidation.set_Operator(ExcelDataValidationOperator value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.PromptGet">
            <summary>设置 ExcelDataValidation.get_Prompt() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.PromptSetString">
            <summary>设置 ExcelDataValidation.set_Prompt(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.PromptTitleGet">
            <summary>设置 ExcelDataValidation.get_PromptTitle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.PromptTitleSetString">
            <summary>设置 ExcelDataValidation.set_PromptTitle(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.SetNullableBoolValueStringNullableOfBoolean">
            <summary>设置 ExcelDataValidation.SetNullableBoolValue(String path, Nullable`1&lt;Boolean&gt; val) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.ShowErrorMessageGet">
            <summary>设置 ExcelDataValidation.get_ShowErrorMessage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.ShowErrorMessageSetNullableOfBoolean">
            <summary>设置 ExcelDataValidation.set_ShowErrorMessage(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.ShowInputMessageGet">
            <summary>设置 ExcelDataValidation.get_ShowInputMessage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.ShowInputMessageSetNullableOfBoolean">
            <summary>设置 ExcelDataValidation.set_ShowInputMessage(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.Validate">
            <summary>设置 ExcelDataValidation.Validate() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.ValidationTypeGet">
            <summary>设置 ExcelDataValidation.get_ValidationType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidation.AllInstances.ValidationTypeSetExcelDataValidationType">
            <summary>设置 ExcelDataValidation.set_ValidationType(ExcelDataValidationType value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection">
            <summary>OfficeOpenXml.DataValidation.ExcelDataValidationCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.#ctor(OfficeOpenXml.DataValidation.ExcelDataValidationCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AddCustomValidationString">
            <summary>设置 ExcelDataValidationCollection.AddCustomValidation(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AddDateTimeValidationString">
            <summary>设置 ExcelDataValidationCollection.AddDateTimeValidation(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AddDecimalValidationString">
            <summary>设置 ExcelDataValidationCollection.AddDecimalValidation(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AddIntegerValidationString">
            <summary>设置 ExcelDataValidationCollection.AddIntegerValidation(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AddListValidationString">
            <summary>设置 ExcelDataValidationCollection.AddListValidation(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AddTextLengthValidationString">
            <summary>设置 ExcelDataValidationCollection.AddTextLengthValidation(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AddTimeValidationString">
            <summary>设置 ExcelDataValidationCollection.AddTimeValidation(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.Clear">
            <summary>设置 ExcelDataValidationCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.ConstructorExcelWorksheet">
            <summary>设置 ExcelDataValidationCollection.ExcelDataValidationCollection(ExcelWorksheet worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.CountGet">
            <summary>设置 ExcelDataValidationCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.EnsureRootElementExists">
            <summary>设置 ExcelDataValidationCollection.EnsureRootElementExists() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.FindAllPredicateOfIExcelDataValidation">
            <summary>设置 ExcelDataValidationCollection.FindAll(Predicate`1&lt;IExcelDataValidation&gt; match) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.FindPredicateOfIExcelDataValidation">
            <summary>设置 ExcelDataValidationCollection.Find(Predicate`1&lt;IExcelDataValidation&gt; match) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.GetRootNode">
            <summary>设置 ExcelDataValidationCollection.GetRootNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.ItemGetInt32">
            <summary>设置 ExcelDataValidationCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.ItemGetString">
            <summary>设置 ExcelDataValidationCollection.get_Item(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.ItemSetInt32IExcelDataValidation">
            <summary>设置 ExcelDataValidationCollection.set_Item(Int32 index, IExcelDataValidation value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.OnValidationCountChanged">
            <summary>设置 ExcelDataValidationCollection.OnValidationCountChanged() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.RemoveAllPredicateOfIExcelDataValidation">
            <summary>设置 ExcelDataValidationCollection.RemoveAll(Predicate`1&lt;IExcelDataValidation&gt; match) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.RemoveIExcelDataValidation">
            <summary>设置 ExcelDataValidationCollection.Remove(IExcelDataValidation item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.SystemCollectionsGenericIEnumerableOfficeOpenXmlDataValidationContractsIExcelDataValidationGetEnumerator">
            <summary>设置 ExcelDataValidationCollection.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelDataValidationCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.ValidateAddressString">
            <summary>设置 ExcelDataValidationCollection.ValidateAddress(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.ValidateAddressStringIExcelDataValidation">
            <summary>设置 ExcelDataValidationCollection.ValidateAddress(String address, IExcelDataValidation validatingValidation) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.ValidateAll">
            <summary>设置 ExcelDataValidationCollection.ValidateAll() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.AddCustomValidationString">
            <summary>设置 ExcelDataValidationCollection.AddCustomValidation(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.AddDateTimeValidationString">
            <summary>设置 ExcelDataValidationCollection.AddDateTimeValidation(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.AddDecimalValidationString">
            <summary>设置 ExcelDataValidationCollection.AddDecimalValidation(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.AddIntegerValidationString">
            <summary>设置 ExcelDataValidationCollection.AddIntegerValidation(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.AddListValidationString">
            <summary>设置 ExcelDataValidationCollection.AddListValidation(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.AddTextLengthValidationString">
            <summary>设置 ExcelDataValidationCollection.AddTextLengthValidation(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.AddTimeValidationString">
            <summary>设置 ExcelDataValidationCollection.AddTimeValidation(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.Clear">
            <summary>设置 ExcelDataValidationCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.CountGet">
            <summary>设置 ExcelDataValidationCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.EnsureRootElementExists">
            <summary>设置 ExcelDataValidationCollection.EnsureRootElementExists() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.FindAllPredicateOfIExcelDataValidation">
            <summary>设置 ExcelDataValidationCollection.FindAll(Predicate`1&lt;IExcelDataValidation&gt; match) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.FindPredicateOfIExcelDataValidation">
            <summary>设置 ExcelDataValidationCollection.Find(Predicate`1&lt;IExcelDataValidation&gt; match) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.GetRootNode">
            <summary>设置 ExcelDataValidationCollection.GetRootNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.ItemGetInt32">
            <summary>设置 ExcelDataValidationCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.ItemGetString">
            <summary>设置 ExcelDataValidationCollection.get_Item(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.ItemSetInt32IExcelDataValidation">
            <summary>设置 ExcelDataValidationCollection.set_Item(Int32 index, IExcelDataValidation value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.OnValidationCountChanged">
            <summary>设置 ExcelDataValidationCollection.OnValidationCountChanged() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.RemoveAllPredicateOfIExcelDataValidation">
            <summary>设置 ExcelDataValidationCollection.RemoveAll(Predicate`1&lt;IExcelDataValidation&gt; match) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.RemoveIExcelDataValidation">
            <summary>设置 ExcelDataValidationCollection.Remove(IExcelDataValidation item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.SystemCollectionsGenericIEnumerableOfficeOpenXmlDataValidationContractsIExcelDataValidationGetEnumerator">
            <summary>设置 ExcelDataValidationCollection.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelDataValidationCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.ValidateAddressString">
            <summary>设置 ExcelDataValidationCollection.ValidateAddress(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.ValidateAddressStringIExcelDataValidation">
            <summary>设置 ExcelDataValidationCollection.ValidateAddress(String address, IExcelDataValidation validatingValidation) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCollection.AllInstances.ValidateAll">
            <summary>设置 ExcelDataValidationCollection.ValidateAll() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCustom">
            <summary>OfficeOpenXml.DataValidation.ExcelDataValidationCustom 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCustom.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCustom.#ctor(OfficeOpenXml.DataValidation.ExcelDataValidationCustom)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCustom.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCustom.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCustom.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCustom.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationCustom)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCustom.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithOperator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCustom.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula{OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormula})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCustom.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCustom.ConstructorExcelWorksheetStringExcelDataValidationType">
            <summary>设置 ExcelDataValidationCustom.ExcelDataValidationCustom(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCustom.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNode">
            <summary>设置 ExcelDataValidationCustom.ExcelDataValidationCustom(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCustom.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelDataValidationCustom.ExcelDataValidationCustom(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationCustom.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime">
            <summary>OfficeOpenXml.DataValidation.ExcelDataValidationDateTime 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime.#ctor(OfficeOpenXml.DataValidation.ExcelDataValidationDateTime)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationDateTime)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithOperator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2{OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaDateTime})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula{OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaDateTime})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime.ConstructorExcelWorksheetStringExcelDataValidationType">
            <summary>设置 ExcelDataValidationDateTime.ExcelDataValidationDateTime(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNode">
            <summary>设置 ExcelDataValidationDateTime.ExcelDataValidationDateTime(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelDataValidationDateTime.ExcelDataValidationDateTime(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDateTime.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal">
            <summary>OfficeOpenXml.DataValidation.ExcelDataValidationDecimal 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal.#ctor(OfficeOpenXml.DataValidation.ExcelDataValidationDecimal)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationDecimal)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithOperator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2{OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaDecimal})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula{OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaDecimal})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal.ConstructorExcelWorksheetStringExcelDataValidationType">
            <summary>设置 ExcelDataValidationDecimal.ExcelDataValidationDecimal(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNode">
            <summary>设置 ExcelDataValidationDecimal.ExcelDataValidationDecimal(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelDataValidationDecimal.ExcelDataValidationDecimal(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationDecimal.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt">
            <summary>OfficeOpenXml.DataValidation.ExcelDataValidationInt 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt.#ctor(OfficeOpenXml.DataValidation.ExcelDataValidationInt)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationInt)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithOperator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2{OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaInt})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula{OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaInt})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt.ConstructorExcelWorksheetStringExcelDataValidationType">
            <summary>设置 ExcelDataValidationInt.ExcelDataValidationInt(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNode">
            <summary>设置 ExcelDataValidationInt.ExcelDataValidationInt(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelDataValidationInt.ExcelDataValidationInt(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationInt.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationList">
            <summary>OfficeOpenXml.DataValidation.ExcelDataValidationList 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationList.#ctor(OfficeOpenXml.DataValidation.ExcelDataValidationList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationList.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationList.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationList.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula{OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaList})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationList.ConstructorExcelWorksheetStringExcelDataValidationType">
            <summary>设置 ExcelDataValidationList.ExcelDataValidationList(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationList.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNode">
            <summary>设置 ExcelDataValidationList.ExcelDataValidationList(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationList.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelDataValidationList.ExcelDataValidationList(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime">
            <summary>OfficeOpenXml.DataValidation.ExcelDataValidationTime 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime.#ctor(OfficeOpenXml.DataValidation.ExcelDataValidationTime)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationTime)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithOperator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2{OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaTime})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula{OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaTime})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime.ConstructorExcelWorksheetStringExcelDataValidationType">
            <summary>设置 ExcelDataValidationTime.ExcelDataValidationTime(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNode">
            <summary>设置 ExcelDataValidationTime.ExcelDataValidationTime(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelDataValidationTime.ExcelDataValidationTime(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationTime.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType">
            <summary>OfficeOpenXml.DataValidation.ExcelDataValidationType 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.#ctor(OfficeOpenXml.DataValidation.ExcelDataValidationType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.AllowOperatorGet">
            <summary>设置 ExcelDataValidationType.get_AllowOperator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.AllowOperatorSetBoolean">
            <summary>设置 ExcelDataValidationType.set_AllowOperator(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.ConstructoreDataValidationTypeBooleanString">
            <summary>设置 ExcelDataValidationType.ExcelDataValidationType(eDataValidationType validationType, Boolean allowOperator, String schemaName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.CustomGet">
            <summary>设置 ExcelDataValidationType.get_Custom() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.DateTimeGet">
            <summary>设置 ExcelDataValidationType.get_DateTime() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.DecimalGet">
            <summary>设置 ExcelDataValidationType.get_Decimal() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.EqualsObject">
            <summary>设置 ExcelDataValidationType.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.GetBySchemaNameString">
            <summary>设置 ExcelDataValidationType.GetBySchemaName(String schemaName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.GetByValidationTypeeDataValidationType">
            <summary>设置 ExcelDataValidationType.GetByValidationType(eDataValidationType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.GetHashCode">
            <summary>设置 ExcelDataValidationType.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.ListGet">
            <summary>设置 ExcelDataValidationType.get_List() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.SchemaNameGet">
            <summary>设置 ExcelDataValidationType.get_SchemaName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.SchemaNameSetString">
            <summary>设置 ExcelDataValidationType.set_SchemaName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.TextLengthGet">
            <summary>设置 ExcelDataValidationType.get_TextLength() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.TimeGet">
            <summary>设置 ExcelDataValidationType.get_Time() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.TypeGet">
            <summary>设置 ExcelDataValidationType.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.TypeSeteDataValidationType">
            <summary>设置 ExcelDataValidationType.set_Type(eDataValidationType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.WholeGet">
            <summary>设置 ExcelDataValidationType.get_Whole() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.AllInstances.AllowOperatorGet">
            <summary>设置 ExcelDataValidationType.get_AllowOperator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.AllInstances.AllowOperatorSetBoolean">
            <summary>设置 ExcelDataValidationType.set_AllowOperator(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.AllInstances.EqualsObject">
            <summary>设置 ExcelDataValidationType.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.AllInstances.GetHashCode01">
            <summary>设置 ExcelDataValidationType.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.AllInstances.SchemaNameGet">
            <summary>设置 ExcelDataValidationType.get_SchemaName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.AllInstances.SchemaNameSetString">
            <summary>设置 ExcelDataValidationType.set_SchemaName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.AllInstances.TypeGet">
            <summary>设置 ExcelDataValidationType.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationType.AllInstances.TypeSeteDataValidationType">
            <summary>设置 ExcelDataValidationType.set_Type(eDataValidationType value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1">
            <summary>OfficeOpenXml.DataValidation.ExcelDataValidationWithFormula`1 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.#ctor(OfficeOpenXml.DataValidation.ExcelDataValidationWithFormula{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.ConstructorExcelWorksheetStringExcelDataValidationType">
            <summary>设置 ExcelDataValidationWithFormula`1.ExcelDataValidationWithFormula`1(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNode">
            <summary>设置 ExcelDataValidationWithFormula`1.ExcelDataValidationWithFormula`1(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelDataValidationWithFormula`1.ExcelDataValidationWithFormula`1(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.FormulaGet">
            <summary>设置 ExcelDataValidationWithFormula`1.get_Formula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.FormulaSetT0">
            <summary>设置 ExcelDataValidationWithFormula`1.set_Formula(!0 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.Validate">
            <summary>设置 ExcelDataValidationWithFormula`1.Validate() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.AllInstances.FormulaGet">
            <summary>设置 ExcelDataValidationWithFormula`1.get_Formula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.AllInstances.FormulaSetT0">
            <summary>设置 ExcelDataValidationWithFormula`1.set_Formula(!0 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula`1.AllInstances.Validate">
            <summary>设置 ExcelDataValidationWithFormula`1.Validate() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1">
            <summary>OfficeOpenXml.DataValidation.ExcelDataValidationWithFormula2`1 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1.#ctor(OfficeOpenXml.DataValidation.ExcelDataValidationWithFormula2{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1.Bind(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1.ConstructorExcelWorksheetStringExcelDataValidationType">
            <summary>设置 ExcelDataValidationWithFormula2`1.ExcelDataValidationWithFormula2`1(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNode">
            <summary>设置 ExcelDataValidationWithFormula2`1.ExcelDataValidationWithFormula2`1(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1.ConstructorExcelWorksheetStringExcelDataValidationTypeXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelDataValidationWithFormula2`1.ExcelDataValidationWithFormula2`1(ExcelWorksheet worksheet, String address, ExcelDataValidationType validationType, XmlNode itemElementNode, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1.Formula2Get">
            <summary>设置 ExcelDataValidationWithFormula2`1.get_Formula2() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1.Formula2SetT0">
            <summary>设置 ExcelDataValidationWithFormula2`1.set_Formula2(!0 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1.AllInstances.Formula2Get">
            <summary>设置 ExcelDataValidationWithFormula2`1.get_Formula2() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelDataValidationWithFormula2`1.AllInstances.Formula2SetT0">
            <summary>设置 ExcelDataValidationWithFormula2`1.set_Formula2(!0 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime">
            <summary>OfficeOpenXml.DataValidation.ExcelTime 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.#ctor(OfficeOpenXml.DataValidation.ExcelTime)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.Constructor">
            <summary>设置 ExcelTime.ExcelTime() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.ConstructorDecimal">
            <summary>设置 ExcelTime.ExcelTime(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.HourGet">
            <summary>设置 ExcelTime.get_Hour() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.HourSetInt32">
            <summary>设置 ExcelTime.set_Hour(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.InitDecimal">
            <summary>设置 ExcelTime.Init(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.MinuteGet">
            <summary>设置 ExcelTime.get_Minute() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.MinuteSetInt32">
            <summary>设置 ExcelTime.set_Minute(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.OnTimeChanged">
            <summary>设置 ExcelTime.OnTimeChanged() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.RoundDecimal">
            <summary>设置 ExcelTime.Round(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.SecondGet">
            <summary>设置 ExcelTime.get_Second() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.SecondSetNullableOfInt32">
            <summary>设置 ExcelTime.set_Second(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.SetHourInt32">
            <summary>设置 ExcelTime.SetHour(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.SetMinuteInt32">
            <summary>设置 ExcelTime.SetMinute(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.SetSecondInt32">
            <summary>设置 ExcelTime.SetSecond(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.TimeChangedAddEventHandler">
            <summary>设置 ExcelTime.add_TimeChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.TimeChangedRemoveEventHandler">
            <summary>设置 ExcelTime.remove_TimeChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.ToExcelString">
            <summary>设置 ExcelTime.ToExcelString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.ToExcelTime">
            <summary>设置 ExcelTime.ToExcelTime() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.ToSeconds">
            <summary>设置 ExcelTime.ToSeconds() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.ToString">
            <summary>设置 ExcelTime.ToString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime._timeChangedAddEventHandler">
            <summary>设置 ExcelTime.add__timeChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime._timeChangedRemoveEventHandler">
            <summary>设置 ExcelTime.remove__timeChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.HourGet">
            <summary>设置 ExcelTime.get_Hour() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.HourSetInt32">
            <summary>设置 ExcelTime.set_Hour(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.InitDecimal">
            <summary>设置 ExcelTime.Init(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.MinuteGet">
            <summary>设置 ExcelTime.get_Minute() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.MinuteSetInt32">
            <summary>设置 ExcelTime.set_Minute(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.OnTimeChanged">
            <summary>设置 ExcelTime.OnTimeChanged() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.RoundDecimal">
            <summary>设置 ExcelTime.Round(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.SecondGet">
            <summary>设置 ExcelTime.get_Second() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.SecondSetNullableOfInt32">
            <summary>设置 ExcelTime.set_Second(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.SetHourInt32">
            <summary>设置 ExcelTime.SetHour(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.SetMinuteInt32">
            <summary>设置 ExcelTime.SetMinute(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.SetSecondInt32">
            <summary>设置 ExcelTime.SetSecond(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.TimeChangedAddEventHandler">
            <summary>设置 ExcelTime.add_TimeChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.TimeChangedRemoveEventHandler">
            <summary>设置 ExcelTime.remove_TimeChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.ToExcelString">
            <summary>设置 ExcelTime.ToExcelString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.ToExcelTime">
            <summary>设置 ExcelTime.ToExcelTime() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.ToSeconds">
            <summary>设置 ExcelTime.ToSeconds() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances.ToString01">
            <summary>设置 ExcelTime.ToString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances._timeChangedAddEventHandler">
            <summary>设置 ExcelTime.add__timeChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.ShimExcelTime.AllInstances._timeChangedRemoveEventHandler">
            <summary>设置 ExcelTime.remove__timeChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.StubExcelTime">
            <summary>OfficeOpenXml.DataValidation.ExcelTime 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.StubExcelTime.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.StubExcelTime.#ctor(System.Decimal)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.StubExcelTime.InitializeStub">
            <summary>初始化 type StubExcelTime 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.StubExcelTime.ToString">
            <summary>设置 ExcelTime.ToString() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Fakes.StubExcelTime.ToString01">
            <summary>设置 ExcelTime.ToString() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.StubExcelTime.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.StubExcelTime.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Fakes.StubExcelTime.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation">
            <summary>OfficeOpenXml.DataValidation.IRangeDataValidation 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.#ctor">
            <summary>初始化 type StubIRangeDataValidation 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.AddCustomDataValidation">
            <summary>设置 IRangeDataValidation.AddCustomDataValidation() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.AddDateTimeDataValidation">
            <summary>设置 IRangeDataValidation.AddDateTimeDataValidation() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.AddDecimalDataValidation">
            <summary>设置 IRangeDataValidation.AddDecimalDataValidation() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.AddIntegerDataValidation">
            <summary>设置 IRangeDataValidation.AddIntegerDataValidation() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.AddListDataValidation">
            <summary>设置 IRangeDataValidation.AddListDataValidation() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.AddTextLengthDataValidation">
            <summary>设置 IRangeDataValidation.AddTextLengthDataValidation() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.AddTimeDataValidation">
            <summary>设置 IRangeDataValidation.AddTimeDataValidation() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.epp::OfficeOpenXml#DataValidation#IRangeDataValidation#AddCustomDataValidation">
            <summary>设置 IRangeDataValidation.AddCustomDataValidation() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.epp::OfficeOpenXml#DataValidation#IRangeDataValidation#AddDateTimeDataValidation">
            <summary>设置 IRangeDataValidation.AddDateTimeDataValidation() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.epp::OfficeOpenXml#DataValidation#IRangeDataValidation#AddDecimalDataValidation">
            <summary>设置 IRangeDataValidation.AddDecimalDataValidation() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.epp::OfficeOpenXml#DataValidation#IRangeDataValidation#AddIntegerDataValidation">
            <summary>设置 IRangeDataValidation.AddIntegerDataValidation() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.epp::OfficeOpenXml#DataValidation#IRangeDataValidation#AddListDataValidation">
            <summary>设置 IRangeDataValidation.AddListDataValidation() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.epp::OfficeOpenXml#DataValidation#IRangeDataValidation#AddTextLengthDataValidation">
            <summary>设置 IRangeDataValidation.AddTextLengthDataValidation() 的 存根</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Fakes.StubIRangeDataValidation.epp::OfficeOpenXml#DataValidation#IRangeDataValidation#AddTimeDataValidation">
            <summary>设置 IRangeDataValidation.AddTimeDataValidation() 的 存根</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormula">
            <summary>OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormula 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormula.#ctor">
            <summary>初始化 type StubIExcelDataValidationFormula 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormula.AttachBackingFieldToExcelFormula">
            <summary>附加委托以将 StubIExcelDataValidationFormula.ExcelFormula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormula.ExcelFormulaGet">
            <summary>设置 IExcelDataValidationFormula.get_ExcelFormula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormula.ExcelFormulaSetString">
            <summary>设置 IExcelDataValidationFormula.set_ExcelFormula(String value) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormula.epp::OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormula#ExcelFormula">
            <summary>设置 IExcelDataValidationFormula.get_ExcelFormula() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDateTime">
            <summary>OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaDateTime 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDateTime.#ctor">
            <summary>初始化 type StubIExcelDataValidationFormulaDateTime 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDateTime.AttachBackingFieldToExcelFormula">
            <summary>附加委托以将 StubIExcelDataValidationFormulaDateTime.ExcelFormula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDateTime.AttachBackingFieldToValue">
            <summary>附加委托以将 StubIExcelDataValidationFormulaDateTime.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDateTime.ExcelFormulaGet">
            <summary>设置 IExcelDataValidationFormula.get_ExcelFormula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDateTime.ExcelFormulaSetString">
            <summary>设置 IExcelDataValidationFormula.set_ExcelFormula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDateTime.ValueGet">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.get_Value() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDateTime.ValueSetNullableOfDateTime">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.set_Value(!0 value) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDateTime.epp::OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormula#ExcelFormula">
            <summary>设置 IExcelDataValidationFormula.get_ExcelFormula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDateTime.epp::OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaWithValue{System#Nullable{System#DateTime}}#Value">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.get_Value() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDecimal">
            <summary>OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaDecimal 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDecimal.#ctor">
            <summary>初始化 type StubIExcelDataValidationFormulaDecimal 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDecimal.AttachBackingFieldToExcelFormula">
            <summary>附加委托以将 StubIExcelDataValidationFormulaDecimal.ExcelFormula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDecimal.AttachBackingFieldToValue">
            <summary>附加委托以将 StubIExcelDataValidationFormulaDecimal.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDecimal.ExcelFormulaGet">
            <summary>设置 IExcelDataValidationFormula.get_ExcelFormula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDecimal.ExcelFormulaSetString">
            <summary>设置 IExcelDataValidationFormula.set_ExcelFormula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDecimal.ValueGet">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.get_Value() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDecimal.ValueSetNullableOfDouble">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.set_Value(!0 value) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDecimal.epp::OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormula#ExcelFormula">
            <summary>设置 IExcelDataValidationFormula.get_ExcelFormula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaDecimal.epp::OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaWithValue{System#Nullable{System#Double}}#Value">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.get_Value() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaInt">
            <summary>OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaInt 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaInt.#ctor">
            <summary>初始化 type StubIExcelDataValidationFormulaInt 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaInt.AttachBackingFieldToExcelFormula">
            <summary>附加委托以将 StubIExcelDataValidationFormulaInt.ExcelFormula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaInt.AttachBackingFieldToValue">
            <summary>附加委托以将 StubIExcelDataValidationFormulaInt.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaInt.ExcelFormulaGet">
            <summary>设置 IExcelDataValidationFormula.get_ExcelFormula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaInt.ExcelFormulaSetString">
            <summary>设置 IExcelDataValidationFormula.set_ExcelFormula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaInt.ValueGet">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.get_Value() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaInt.ValueSetNullableOfInt32">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.set_Value(!0 value) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaInt.epp::OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormula#ExcelFormula">
            <summary>设置 IExcelDataValidationFormula.get_ExcelFormula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaInt.epp::OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaWithValue{System#Nullable{System#Int32}}#Value">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.get_Value() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaList">
            <summary>OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaList 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaList.#ctor">
            <summary>初始化 type StubIExcelDataValidationFormulaList 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaList.AttachBackingFieldToExcelFormula">
            <summary>附加委托以将 StubIExcelDataValidationFormulaList.ExcelFormula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaList.ExcelFormulaGet">
            <summary>设置 IExcelDataValidationFormula.get_ExcelFormula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaList.ExcelFormulaSetString">
            <summary>设置 IExcelDataValidationFormula.set_ExcelFormula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaList.ValuesGet">
            <summary>设置 IExcelDataValidationFormulaList.get_Values() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaList.epp::OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormula#ExcelFormula">
            <summary>设置 IExcelDataValidationFormula.get_ExcelFormula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaList.epp::OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaList#Values">
            <summary>设置 IExcelDataValidationFormulaList.get_Values() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaTime">
            <summary>OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaTime 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaTime.#ctor">
            <summary>初始化 type StubIExcelDataValidationFormulaTime 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaTime.AttachBackingFieldToExcelFormula">
            <summary>附加委托以将 StubIExcelDataValidationFormulaTime.ExcelFormula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaTime.AttachBackingFieldToValue">
            <summary>附加委托以将 StubIExcelDataValidationFormulaTime.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaTime.ExcelFormulaGet">
            <summary>设置 IExcelDataValidationFormula.get_ExcelFormula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaTime.ExcelFormulaSetString">
            <summary>设置 IExcelDataValidationFormula.set_ExcelFormula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaTime.ValueGet">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.get_Value() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaTime.ValueSetExcelTime">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.set_Value(!0 value) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaTime.epp::OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormula#ExcelFormula">
            <summary>设置 IExcelDataValidationFormula.get_ExcelFormula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaTime.epp::OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaWithValue{OfficeOpenXml#DataValidation#ExcelTime}#Value">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.get_Value() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaWithValue`1">
            <summary>OfficeOpenXml.DataValidation.Formulas.Contracts.IExcelDataValidationFormulaWithValue`1 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaWithValue`1.#ctor">
            <summary>初始化 type StubIExcelDataValidationFormulaWithValue 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaWithValue`1.AttachBackingFieldToExcelFormula">
            <summary>附加委托以将 StubIExcelDataValidationFormulaWithValue.ExcelFormula 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaWithValue`1.AttachBackingFieldToValue">
            <summary>附加委托以将 StubIExcelDataValidationFormulaWithValue.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaWithValue`1.ExcelFormulaGet">
            <summary>设置 IExcelDataValidationFormula.get_ExcelFormula() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaWithValue`1.ExcelFormulaSetString">
            <summary>设置 IExcelDataValidationFormula.set_ExcelFormula(String value) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaWithValue`1.ValueGet">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.get_Value() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaWithValue`1.ValueSetT0">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.set_Value(!0 value) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaWithValue`1.epp::OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormula#ExcelFormula">
            <summary>设置 IExcelDataValidationFormula.get_ExcelFormula() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.DataValidation.Formulas.Contracts.Fakes.StubIExcelDataValidationFormulaWithValue`1.epp::OfficeOpenXml#DataValidation#Formulas#Contracts#IExcelDataValidationFormulaWithValue{T}#Value">
            <summary>设置 IExcelDataValidationFormulaWithValue`1.get_Value() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelBarChart 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.#ctor(OfficeOpenXml.Drawing.Chart.ExcelBarChart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.ConstructorExcelChartXmlNode">
            <summary>设置 ExcelBarChart.ExcelBarChart(ExcelChart topChart, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.ConstructorExcelDrawingsXmlNodeUriPackagePartXmlDocumentXmlNode">
            <summary>设置 ExcelBarChart.ExcelBarChart(ExcelDrawings drawings, XmlNode node, Uri uriChart, PackagePart part, XmlDocument chartXml, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.ConstructorExcelDrawingsXmlNodeeChartTypeExcelChartExcelPivotTable">
            <summary>设置 ExcelBarChart.ExcelBarChart(ExcelDrawings drawings, XmlNode node, eChartType type, ExcelChart topChart, ExcelPivotTable PivotTableSource) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.DataLabelGet">
            <summary>设置 ExcelBarChart.get_DataLabel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.DirectionGet">
            <summary>设置 ExcelBarChart.get_Direction() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.DirectionSeteDirection">
            <summary>设置 ExcelBarChart.set_Direction(eDirection value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.GetChartTypeString">
            <summary>设置 ExcelBarChart.GetChartType(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.GetDirectionEnumString">
            <summary>设置 ExcelBarChart.GetDirectionEnum(String direction) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.GetDirectionTexteDirection">
            <summary>设置 ExcelBarChart.GetDirectionText(eDirection direction) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.GetShapeEnumString">
            <summary>设置 ExcelBarChart.GetShapeEnum(String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.GetShapeTexteShape">
            <summary>设置 ExcelBarChart.GetShapeText(eShape Shape) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.SetChartNodeTextString">
            <summary>设置 ExcelBarChart.SetChartNodeText(String chartNodeText) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.SetTypePropertiesExcelDrawingseChartType">
            <summary>设置 ExcelBarChart.SetTypeProperties(ExcelDrawings drawings, eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.ShapeGet">
            <summary>设置 ExcelBarChart.get_Shape() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.ShapeSeteShape">
            <summary>设置 ExcelBarChart.set_Shape(eShape value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.AllInstances.DataLabelGet">
            <summary>设置 ExcelBarChart.get_DataLabel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.AllInstances.DirectionGet">
            <summary>设置 ExcelBarChart.get_Direction() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.AllInstances.DirectionSeteDirection">
            <summary>设置 ExcelBarChart.set_Direction(eDirection value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.AllInstances.GetChartTypeString">
            <summary>设置 ExcelBarChart.GetChartType(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.AllInstances.GetDirectionEnumString">
            <summary>设置 ExcelBarChart.GetDirectionEnum(String direction) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.AllInstances.GetDirectionTexteDirection">
            <summary>设置 ExcelBarChart.GetDirectionText(eDirection direction) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.AllInstances.GetShapeEnumString">
            <summary>设置 ExcelBarChart.GetShapeEnum(String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.AllInstances.GetShapeTexteShape">
            <summary>设置 ExcelBarChart.GetShapeText(eShape Shape) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.AllInstances.SetChartNodeTextString">
            <summary>设置 ExcelBarChart.SetChartNodeText(String chartNodeText) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.AllInstances.SetTypePropertiesExcelDrawingseChartType">
            <summary>设置 ExcelBarChart.SetTypeProperties(ExcelDrawings drawings, eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.AllInstances.ShapeGet">
            <summary>设置 ExcelBarChart.get_Shape() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelBarChart.AllInstances.ShapeSeteShape">
            <summary>设置 ExcelBarChart.set_Shape(eShape value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelChart 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.#ctor(OfficeOpenXml.Drawing.Chart.ExcelChart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AddAxType">
            <summary>设置 ExcelChart.AddAxType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AddAxis">
            <summary>设置 ExcelChart.AddAxis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AddAxisIdInt32Int32">
            <summary>设置 ExcelChart.AddAxisId(Int32 axID, Int32 xAxID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AddBarDireChartType">
            <summary>设置 ExcelChart.AddBarDir(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AddFirstSliceAngeChartType">
            <summary>设置 ExcelChart.AddFirstSliceAng(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AddGrouping">
            <summary>设置 ExcelChart.AddGrouping() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AddHasMarkereChartType">
            <summary>设置 ExcelChart.AddHasMarker(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AddHoleSizeeChartType">
            <summary>设置 ExcelChart.AddHoleSize(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AddPerspectiveXmleChartType">
            <summary>设置 ExcelChart.AddPerspectiveXml(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AddScatterTypeeChartType">
            <summary>设置 ExcelChart.AddScatterType(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AddShapeeChartType">
            <summary>设置 ExcelChart.AddShape(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AddVaryColors">
            <summary>设置 ExcelChart.AddVaryColors() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AxisGet">
            <summary>设置 ExcelChart.get_Axis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.BorderGet">
            <summary>设置 ExcelChart.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.ChartNodeGet">
            <summary>设置 ExcelChart.get_ChartNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.ChartStartXmleChartType">
            <summary>设置 ExcelChart.ChartStartXml(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.ChartTypeGet">
            <summary>设置 ExcelChart.get_ChartType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.ChartTypeSeteChartType">
            <summary>设置 ExcelChart.set_ChartType(eChartType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.ChartXmlGet">
            <summary>设置 ExcelChart.get_ChartXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.ChartXmlSetXmlDocument">
            <summary>设置 ExcelChart.set_ChartXml(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.CheckRemoveAxisExcelChartAxis">
            <summary>设置 ExcelChart.CheckRemoveAxis(ExcelChartAxis excelChartAxis) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.ConstructorExcelChartXmlNode">
            <summary>设置 ExcelChart.ExcelChart(ExcelChart topChart, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.ConstructorExcelDrawingsXmlNodeUriPackagePartXmlDocumentXmlNode">
            <summary>设置 ExcelChart.ExcelChart(ExcelDrawings drawings, XmlNode node, Uri uriChart, PackagePart part, XmlDocument chartXml, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.ConstructorExcelDrawingsXmlNodeeChartTypeBoolean">
            <summary>设置 ExcelChart.ExcelChart(ExcelDrawings drawings, XmlNode node, eChartType type, Boolean isPivot) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.ConstructorExcelDrawingsXmlNodeeChartTypeExcelChartExcelPivotTable">
            <summary>设置 ExcelChart.ExcelChart(ExcelDrawings drawings, XmlNode node, eChartType type, ExcelChart topChart, ExcelPivotTable PivotTableSource) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.CreateNewChartExcelDrawingseChartTypeExcelChart">
            <summary>设置 ExcelChart.CreateNewChart(ExcelDrawings drawings, eChartType type, ExcelChart topChart) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.DeleteMe">
            <summary>设置 ExcelChart.DeleteMe() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.DisplayBlanksAsGet">
            <summary>设置 ExcelChart.get_DisplayBlanksAs() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.DisplayBlanksAsSeteDisplayBlanksAs">
            <summary>设置 ExcelChart.set_DisplayBlanksAs(eDisplayBlanksAs value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.ExistsAxisExcelChartAxis">
            <summary>设置 ExcelChart.ExistsAxis(ExcelChartAxis excelChartAxis) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.FillGet">
            <summary>设置 ExcelChart.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.GetChartExcelDrawingsXmlNode">
            <summary>设置 ExcelChart.GetChart(ExcelDrawings drawings, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.GetChartNodeText">
            <summary>设置 ExcelChart.GetChartNodeText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.GetChartSerieStartXmleChartTypeInt32Int32">
            <summary>设置 ExcelChart.GetChartSerieStartXml(eChartType type, Int32 axID, Int32 xAxID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.GetChartTypeString">
            <summary>设置 ExcelChart.GetChartType(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.GetChartXmlElementExcelDrawingsXmlNodeUriPackagePartXmlDocumentExcelChart">
            <summary>设置 ExcelChart.GetChart(XmlElement chartNode, ExcelDrawings drawings, XmlNode node, Uri uriChart, PackagePart part, XmlDocument chartXml, ExcelChart topChart) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.GetGroupingEnumString">
            <summary>设置 ExcelChart.GetGroupingEnum(String grouping) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.GetGroupingTexteGrouping">
            <summary>设置 ExcelChart.GetGroupingText(eGrouping grouping) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.GetNewChartExcelDrawingsXmlNodeeChartTypeExcelChartExcelPivotTable">
            <summary>设置 ExcelChart.GetNewChart(ExcelDrawings drawings, XmlNode drawNode, eChartType chartType, ExcelChart topChart, ExcelPivotTable PivotTableSource) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.GroupingGet">
            <summary>设置 ExcelChart.get_Grouping() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.GroupingSeteGrouping">
            <summary>设置 ExcelChart.set_Grouping(eGrouping value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.HasPrimaryAxis">
            <summary>设置 ExcelChart.HasPrimaryAxis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.IdGet">
            <summary>设置 ExcelChart.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.InitChartLoadExcelDrawingsXmlNode">
            <summary>设置 ExcelChart.InitChartLoad(ExcelDrawings drawings, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.InitExcelDrawingsXmlNode">
            <summary>设置 ExcelChart.Init(ExcelDrawings drawings, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.IsType3D">
            <summary>设置 ExcelChart.IsType3D() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.IsType3DeChartType">
            <summary>设置 ExcelChart.IsType3D(eChartType chartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.IsTypeClustered">
            <summary>设置 ExcelChart.IsTypeClustered() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.IsTypeLine">
            <summary>设置 ExcelChart.IsTypeLine() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.IsTypePercentStacked">
            <summary>设置 ExcelChart.IsTypePercentStacked() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.IsTypePieDoughnut">
            <summary>设置 ExcelChart.IsTypePieDoughnut() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.IsTypeScatter">
            <summary>设置 ExcelChart.IsTypeScatter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.IsTypeShape">
            <summary>设置 ExcelChart.IsTypeShape() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.IsTypeStacked">
            <summary>设置 ExcelChart.IsTypeStacked() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.LegendGet">
            <summary>设置 ExcelChart.get_Legend() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.LoadAxis">
            <summary>设置 ExcelChart.LoadAxis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.PartGet">
            <summary>设置 ExcelChart.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.PartSetPackagePart">
            <summary>设置 ExcelChart.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.PivotTableSourceGet">
            <summary>设置 ExcelChart.get_PivotTableSource() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.PivotTableSourceSetExcelPivotTable">
            <summary>设置 ExcelChart.set_PivotTableSource(ExcelPivotTable value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.PlotAreaGet">
            <summary>设置 ExcelChart.get_PlotArea() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.RemoveSecondaryAxis">
            <summary>设置 ExcelChart.RemoveSecondaryAxis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.SeriesGet">
            <summary>设置 ExcelChart.get_Series() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.SetPivotSourceExcelPivotTable">
            <summary>设置 ExcelChart.SetPivotSource(ExcelPivotTable pivotTableSource) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.SetTypePropertiesExcelDrawings">
            <summary>设置 ExcelChart.SetTypeProperties(ExcelDrawings drawings) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.ShowHiddenDataGet">
            <summary>设置 ExcelChart.get_ShowHiddenData() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.ShowHiddenDataSetBoolean">
            <summary>设置 ExcelChart.set_ShowHiddenData(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.StyleGet">
            <summary>设置 ExcelChart.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.StyleSeteChartStyle">
            <summary>设置 ExcelChart.set_Style(eChartStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.TitleGet">
            <summary>设置 ExcelChart.get_Title() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.UriChartGet">
            <summary>设置 ExcelChart.get_UriChart() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.UriChartSetUri">
            <summary>设置 ExcelChart.set_UriChart(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.UseSecondaryAxisGet">
            <summary>设置 ExcelChart.get_UseSecondaryAxis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.UseSecondaryAxisSetBoolean">
            <summary>设置 ExcelChart.set_UseSecondaryAxis(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.VaryColorsGet">
            <summary>设置 ExcelChart.get_VaryColors() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.VaryColorsSetBoolean">
            <summary>设置 ExcelChart.set_VaryColors(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.View3DGet">
            <summary>设置 ExcelChart.get_View3D() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.WorkSheetGet">
            <summary>设置 ExcelChart.get_WorkSheet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.WorkSheetSetExcelWorksheet">
            <summary>设置 ExcelChart.set_WorkSheet(ExcelWorksheet value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.XAxisGet">
            <summary>设置 ExcelChart.get_XAxis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.XAxisSetExcelChartAxis">
            <summary>设置 ExcelChart.set_XAxis(ExcelChartAxis value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.YAxisGet">
            <summary>设置 ExcelChart.get_YAxis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.YAxisSetExcelChartAxis">
            <summary>设置 ExcelChart.set_YAxis(ExcelChartAxis value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.AddAxType">
            <summary>设置 ExcelChart.AddAxType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.AddAxis">
            <summary>设置 ExcelChart.AddAxis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.AddAxisIdInt32Int32">
            <summary>设置 ExcelChart.AddAxisId(Int32 axID, Int32 xAxID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.AddBarDireChartType">
            <summary>设置 ExcelChart.AddBarDir(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.AddFirstSliceAngeChartType">
            <summary>设置 ExcelChart.AddFirstSliceAng(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.AddGrouping">
            <summary>设置 ExcelChart.AddGrouping() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.AddHasMarkereChartType">
            <summary>设置 ExcelChart.AddHasMarker(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.AddHoleSizeeChartType">
            <summary>设置 ExcelChart.AddHoleSize(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.AddPerspectiveXmleChartType">
            <summary>设置 ExcelChart.AddPerspectiveXml(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.AddScatterTypeeChartType">
            <summary>设置 ExcelChart.AddScatterType(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.AddShapeeChartType">
            <summary>设置 ExcelChart.AddShape(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.AddVaryColors">
            <summary>设置 ExcelChart.AddVaryColors() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.AxisGet">
            <summary>设置 ExcelChart.get_Axis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.BorderGet">
            <summary>设置 ExcelChart.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.ChartNodeGet">
            <summary>设置 ExcelChart.get_ChartNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.ChartStartXmleChartType">
            <summary>设置 ExcelChart.ChartStartXml(eChartType type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.ChartTypeGet">
            <summary>设置 ExcelChart.get_ChartType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.ChartTypeSeteChartType">
            <summary>设置 ExcelChart.set_ChartType(eChartType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.ChartXmlGet">
            <summary>设置 ExcelChart.get_ChartXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.ChartXmlSetXmlDocument">
            <summary>设置 ExcelChart.set_ChartXml(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.CheckRemoveAxisExcelChartAxis">
            <summary>设置 ExcelChart.CheckRemoveAxis(ExcelChartAxis excelChartAxis) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.CreateNewChartExcelDrawingseChartTypeExcelChart">
            <summary>设置 ExcelChart.CreateNewChart(ExcelDrawings drawings, eChartType type, ExcelChart topChart) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.DeleteMe">
            <summary>设置 ExcelChart.DeleteMe() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.DisplayBlanksAsGet">
            <summary>设置 ExcelChart.get_DisplayBlanksAs() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.DisplayBlanksAsSeteDisplayBlanksAs">
            <summary>设置 ExcelChart.set_DisplayBlanksAs(eDisplayBlanksAs value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.ExistsAxisExcelChartAxis">
            <summary>设置 ExcelChart.ExistsAxis(ExcelChartAxis excelChartAxis) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.FillGet">
            <summary>设置 ExcelChart.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.GetChartNodeText">
            <summary>设置 ExcelChart.GetChartNodeText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.GetChartSerieStartXmleChartTypeInt32Int32">
            <summary>设置 ExcelChart.GetChartSerieStartXml(eChartType type, Int32 axID, Int32 xAxID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.GetChartTypeString">
            <summary>设置 ExcelChart.GetChartType(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.GetGroupingEnumString">
            <summary>设置 ExcelChart.GetGroupingEnum(String grouping) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.GetGroupingTexteGrouping">
            <summary>设置 ExcelChart.GetGroupingText(eGrouping grouping) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.GroupingGet">
            <summary>设置 ExcelChart.get_Grouping() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.GroupingSeteGrouping">
            <summary>设置 ExcelChart.set_Grouping(eGrouping value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.HasPrimaryAxis">
            <summary>设置 ExcelChart.HasPrimaryAxis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.IdGet">
            <summary>设置 ExcelChart.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.InitChartLoadExcelDrawingsXmlNode">
            <summary>设置 ExcelChart.InitChartLoad(ExcelDrawings drawings, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.InitExcelDrawingsXmlNode">
            <summary>设置 ExcelChart.Init(ExcelDrawings drawings, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.IsType3D">
            <summary>设置 ExcelChart.IsType3D() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.IsTypeClustered">
            <summary>设置 ExcelChart.IsTypeClustered() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.IsTypeLine">
            <summary>设置 ExcelChart.IsTypeLine() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.IsTypePercentStacked">
            <summary>设置 ExcelChart.IsTypePercentStacked() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.IsTypePieDoughnut">
            <summary>设置 ExcelChart.IsTypePieDoughnut() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.IsTypeScatter">
            <summary>设置 ExcelChart.IsTypeScatter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.IsTypeShape">
            <summary>设置 ExcelChart.IsTypeShape() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.IsTypeStacked">
            <summary>设置 ExcelChart.IsTypeStacked() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.LegendGet">
            <summary>设置 ExcelChart.get_Legend() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.LoadAxis">
            <summary>设置 ExcelChart.LoadAxis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.PartGet">
            <summary>设置 ExcelChart.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.PartSetPackagePart">
            <summary>设置 ExcelChart.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.PivotTableSourceGet">
            <summary>设置 ExcelChart.get_PivotTableSource() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.PivotTableSourceSetExcelPivotTable">
            <summary>设置 ExcelChart.set_PivotTableSource(ExcelPivotTable value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.PlotAreaGet">
            <summary>设置 ExcelChart.get_PlotArea() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.RemoveSecondaryAxis">
            <summary>设置 ExcelChart.RemoveSecondaryAxis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.SeriesGet">
            <summary>设置 ExcelChart.get_Series() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.SetPivotSourceExcelPivotTable">
            <summary>设置 ExcelChart.SetPivotSource(ExcelPivotTable pivotTableSource) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.SetTypePropertiesExcelDrawings">
            <summary>设置 ExcelChart.SetTypeProperties(ExcelDrawings drawings) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.ShowHiddenDataGet">
            <summary>设置 ExcelChart.get_ShowHiddenData() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.ShowHiddenDataSetBoolean">
            <summary>设置 ExcelChart.set_ShowHiddenData(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.StyleGet">
            <summary>设置 ExcelChart.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.StyleSeteChartStyle">
            <summary>设置 ExcelChart.set_Style(eChartStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.TitleGet">
            <summary>设置 ExcelChart.get_Title() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.UriChartGet">
            <summary>设置 ExcelChart.get_UriChart() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.UriChartSetUri">
            <summary>设置 ExcelChart.set_UriChart(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.UseSecondaryAxisGet">
            <summary>设置 ExcelChart.get_UseSecondaryAxis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.UseSecondaryAxisSetBoolean">
            <summary>设置 ExcelChart.set_UseSecondaryAxis(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.VaryColorsGet">
            <summary>设置 ExcelChart.get_VaryColors() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.VaryColorsSetBoolean">
            <summary>设置 ExcelChart.set_VaryColors(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.View3DGet">
            <summary>设置 ExcelChart.get_View3D() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.WorkSheetGet">
            <summary>设置 ExcelChart.get_WorkSheet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.WorkSheetSetExcelWorksheet">
            <summary>设置 ExcelChart.set_WorkSheet(ExcelWorksheet value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.XAxisGet">
            <summary>设置 ExcelChart.get_XAxis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.XAxisSetExcelChartAxis">
            <summary>设置 ExcelChart.set_XAxis(ExcelChartAxis value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.YAxisGet">
            <summary>设置 ExcelChart.get_YAxis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChart.AllInstances.YAxisSetExcelChartAxis">
            <summary>设置 ExcelChart.set_YAxis(ExcelChartAxis value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelChartAxis 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.#ctor(OfficeOpenXml.Drawing.Chart.ExcelChartAxis)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AxisPositionGet">
            <summary>设置 ExcelChartAxis.get_AxisPosition() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AxisPositionSeteAxisPosition">
            <summary>设置 ExcelChartAxis.set_AxisPosition(eAxisPosition value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.BorderGet">
            <summary>设置 ExcelChartAxis.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelChartAxis.ExcelChartAxis(XmlNamespaceManager nameSpaceManager, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.CrossBetweenGet">
            <summary>设置 ExcelChartAxis.get_CrossBetween() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.CrossBetweenSeteCrossBetween">
            <summary>设置 ExcelChartAxis.set_CrossBetween(eCrossBetween value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.CrossesAtGet">
            <summary>设置 ExcelChartAxis.get_CrossesAt() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.CrossesAtSetNullableOfDouble">
            <summary>设置 ExcelChartAxis.set_CrossesAt(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.CrossesGet">
            <summary>设置 ExcelChartAxis.get_Crosses() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.CrossesSeteCrosses">
            <summary>设置 ExcelChartAxis.set_Crosses(eCrosses value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.DeletedGet">
            <summary>设置 ExcelChartAxis.get_Deleted() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.DeletedSetBoolean">
            <summary>设置 ExcelChartAxis.set_Deleted(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.FillGet">
            <summary>设置 ExcelChartAxis.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.FontGet">
            <summary>设置 ExcelChartAxis.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.FormatGet">
            <summary>设置 ExcelChartAxis.get_Format() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.FormatSetString">
            <summary>设置 ExcelChartAxis.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.IdGet">
            <summary>设置 ExcelChartAxis.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.LabelPositionGet">
            <summary>设置 ExcelChartAxis.get_LabelPosition() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.LabelPositionSeteTickLabelPosition">
            <summary>设置 ExcelChartAxis.set_LabelPosition(eTickLabelPosition value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.LogBaseGet">
            <summary>设置 ExcelChartAxis.get_LogBase() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.LogBaseSetNullableOfDouble">
            <summary>设置 ExcelChartAxis.set_LogBase(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.MajorTickMarkGet">
            <summary>设置 ExcelChartAxis.get_MajorTickMark() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.MajorTickMarkSeteAxisTickMark">
            <summary>设置 ExcelChartAxis.set_MajorTickMark(eAxisTickMark value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.MajorUnitGet">
            <summary>设置 ExcelChartAxis.get_MajorUnit() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.MajorUnitSetNullableOfDouble">
            <summary>设置 ExcelChartAxis.set_MajorUnit(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.MaxValueGet">
            <summary>设置 ExcelChartAxis.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.MaxValueSetNullableOfDouble">
            <summary>设置 ExcelChartAxis.set_MaxValue(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.MinValueGet">
            <summary>设置 ExcelChartAxis.get_MinValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.MinValueSetNullableOfDouble">
            <summary>设置 ExcelChartAxis.set_MinValue(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.MinorTickMarkGet">
            <summary>设置 ExcelChartAxis.get_MinorTickMark() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.MinorTickMarkSeteAxisTickMark">
            <summary>设置 ExcelChartAxis.set_MinorTickMark(eAxisTickMark value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.MinorUnitGet">
            <summary>设置 ExcelChartAxis.get_MinorUnit() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.MinorUnitSetNullableOfDouble">
            <summary>设置 ExcelChartAxis.set_MinorUnit(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.OrientationGet">
            <summary>设置 ExcelChartAxis.get_Orientation() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.OrientationSeteAxisOrientation">
            <summary>设置 ExcelChartAxis.set_Orientation(eAxisOrientation value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.TickLabelPositionGet">
            <summary>设置 ExcelChartAxis.get_TickLabelPosition() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.TickLabelPositionSeteTickLabelPosition">
            <summary>设置 ExcelChartAxis.set_TickLabelPosition(eTickLabelPosition value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.TitleGet">
            <summary>设置 ExcelChartAxis.get_Title() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.AxisPositionGet">
            <summary>设置 ExcelChartAxis.get_AxisPosition() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.AxisPositionSeteAxisPosition">
            <summary>设置 ExcelChartAxis.set_AxisPosition(eAxisPosition value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.BorderGet">
            <summary>设置 ExcelChartAxis.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.CrossBetweenGet">
            <summary>设置 ExcelChartAxis.get_CrossBetween() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.CrossBetweenSeteCrossBetween">
            <summary>设置 ExcelChartAxis.set_CrossBetween(eCrossBetween value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.CrossesAtGet">
            <summary>设置 ExcelChartAxis.get_CrossesAt() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.CrossesAtSetNullableOfDouble">
            <summary>设置 ExcelChartAxis.set_CrossesAt(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.CrossesGet">
            <summary>设置 ExcelChartAxis.get_Crosses() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.CrossesSeteCrosses">
            <summary>设置 ExcelChartAxis.set_Crosses(eCrosses value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.DeletedGet">
            <summary>设置 ExcelChartAxis.get_Deleted() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.DeletedSetBoolean">
            <summary>设置 ExcelChartAxis.set_Deleted(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.FillGet">
            <summary>设置 ExcelChartAxis.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.FontGet">
            <summary>设置 ExcelChartAxis.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.FormatGet">
            <summary>设置 ExcelChartAxis.get_Format() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.FormatSetString">
            <summary>设置 ExcelChartAxis.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.IdGet">
            <summary>设置 ExcelChartAxis.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.LabelPositionGet">
            <summary>设置 ExcelChartAxis.get_LabelPosition() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.LabelPositionSeteTickLabelPosition">
            <summary>设置 ExcelChartAxis.set_LabelPosition(eTickLabelPosition value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.LogBaseGet">
            <summary>设置 ExcelChartAxis.get_LogBase() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.LogBaseSetNullableOfDouble">
            <summary>设置 ExcelChartAxis.set_LogBase(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.MajorTickMarkGet">
            <summary>设置 ExcelChartAxis.get_MajorTickMark() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.MajorTickMarkSeteAxisTickMark">
            <summary>设置 ExcelChartAxis.set_MajorTickMark(eAxisTickMark value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.MajorUnitGet">
            <summary>设置 ExcelChartAxis.get_MajorUnit() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.MajorUnitSetNullableOfDouble">
            <summary>设置 ExcelChartAxis.set_MajorUnit(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.MaxValueGet">
            <summary>设置 ExcelChartAxis.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.MaxValueSetNullableOfDouble">
            <summary>设置 ExcelChartAxis.set_MaxValue(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.MinValueGet">
            <summary>设置 ExcelChartAxis.get_MinValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.MinValueSetNullableOfDouble">
            <summary>设置 ExcelChartAxis.set_MinValue(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.MinorTickMarkGet">
            <summary>设置 ExcelChartAxis.get_MinorTickMark() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.MinorTickMarkSeteAxisTickMark">
            <summary>设置 ExcelChartAxis.set_MinorTickMark(eAxisTickMark value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.MinorUnitGet">
            <summary>设置 ExcelChartAxis.get_MinorUnit() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.MinorUnitSetNullableOfDouble">
            <summary>设置 ExcelChartAxis.set_MinorUnit(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.OrientationGet">
            <summary>设置 ExcelChartAxis.get_Orientation() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.OrientationSeteAxisOrientation">
            <summary>设置 ExcelChartAxis.set_Orientation(eAxisOrientation value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.TickLabelPositionGet">
            <summary>设置 ExcelChartAxis.get_TickLabelPosition() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.TickLabelPositionSeteTickLabelPosition">
            <summary>设置 ExcelChartAxis.set_TickLabelPosition(eTickLabelPosition value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartAxis.AllInstances.TitleGet">
            <summary>设置 ExcelChartAxis.get_Title() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelChartCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.#ctor(OfficeOpenXml.Drawing.Chart.ExcelChartCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.Drawing.Chart.ExcelChart})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.AddExcelChart">
            <summary>设置 ExcelChartCollection.Add(ExcelChart chart) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.AddeChartType">
            <summary>设置 ExcelChartCollection.Add(eChartType chartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.ConstructorExcelChart">
            <summary>设置 ExcelChartCollection.ExcelChartCollection(ExcelChart chart) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.CountGet">
            <summary>设置 ExcelChartCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.ItemGetInt32">
            <summary>设置 ExcelChartCollection.get_Item(Int32 PositionID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.SystemCollectionsGenericIEnumerableOfficeOpenXmlDrawingChartExcelChartGetEnumerator">
            <summary>设置 ExcelChartCollection.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.Drawing.Chart.ExcelChart&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelChartCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.AllInstances.AddExcelChart">
            <summary>设置 ExcelChartCollection.Add(ExcelChart chart) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.AllInstances.AddeChartType">
            <summary>设置 ExcelChartCollection.Add(eChartType chartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.AllInstances.CountGet">
            <summary>设置 ExcelChartCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.AllInstances.ItemGetInt32">
            <summary>设置 ExcelChartCollection.get_Item(Int32 PositionID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.AllInstances.SystemCollectionsGenericIEnumerableOfficeOpenXmlDrawingChartExcelChartGetEnumerator">
            <summary>设置 ExcelChartCollection.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.Drawing.Chart.ExcelChart&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelChartCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelChartDataLabel 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.#ctor(OfficeOpenXml.Drawing.Chart.ExcelChartDataLabel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.BorderGet">
            <summary>设置 ExcelChartDataLabel.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelChartDataLabel.ExcelChartDataLabel(XmlNamespaceManager ns, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.FillGet">
            <summary>设置 ExcelChartDataLabel.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.FontGet">
            <summary>设置 ExcelChartDataLabel.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.GetPosEnumString">
            <summary>设置 ExcelChartDataLabel.GetPosEnum(String pos) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.GetPosTexteLabelPosition">
            <summary>设置 ExcelChartDataLabel.GetPosText(eLabelPosition pos) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.SeparatorGet">
            <summary>设置 ExcelChartDataLabel.get_Separator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.SeparatorSetString">
            <summary>设置 ExcelChartDataLabel.set_Separator(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ShowBubbleSizeGet">
            <summary>设置 ExcelChartDataLabel.get_ShowBubbleSize() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ShowBubbleSizeSetBoolean">
            <summary>设置 ExcelChartDataLabel.set_ShowBubbleSize(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ShowCategoryGet">
            <summary>设置 ExcelChartDataLabel.get_ShowCategory() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ShowCategorySetBoolean">
            <summary>设置 ExcelChartDataLabel.set_ShowCategory(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ShowLeaderLinesGet">
            <summary>设置 ExcelChartDataLabel.get_ShowLeaderLines() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ShowLeaderLinesSetBoolean">
            <summary>设置 ExcelChartDataLabel.set_ShowLeaderLines(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ShowLegendKeyGet">
            <summary>设置 ExcelChartDataLabel.get_ShowLegendKey() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ShowLegendKeySetBoolean">
            <summary>设置 ExcelChartDataLabel.set_ShowLegendKey(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ShowPercentGet">
            <summary>设置 ExcelChartDataLabel.get_ShowPercent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ShowPercentSetBoolean">
            <summary>设置 ExcelChartDataLabel.set_ShowPercent(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ShowSeriesNameGet">
            <summary>设置 ExcelChartDataLabel.get_ShowSeriesName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ShowSeriesNameSetBoolean">
            <summary>设置 ExcelChartDataLabel.set_ShowSeriesName(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ShowValueGet">
            <summary>设置 ExcelChartDataLabel.get_ShowValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.ShowValueSetBoolean">
            <summary>设置 ExcelChartDataLabel.set_ShowValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.BorderGet">
            <summary>设置 ExcelChartDataLabel.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.FillGet">
            <summary>设置 ExcelChartDataLabel.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.FontGet">
            <summary>设置 ExcelChartDataLabel.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.GetPosEnumString">
            <summary>设置 ExcelChartDataLabel.GetPosEnum(String pos) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.GetPosTexteLabelPosition">
            <summary>设置 ExcelChartDataLabel.GetPosText(eLabelPosition pos) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.SeparatorGet">
            <summary>设置 ExcelChartDataLabel.get_Separator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.SeparatorSetString">
            <summary>设置 ExcelChartDataLabel.set_Separator(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.ShowBubbleSizeGet">
            <summary>设置 ExcelChartDataLabel.get_ShowBubbleSize() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.ShowBubbleSizeSetBoolean">
            <summary>设置 ExcelChartDataLabel.set_ShowBubbleSize(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.ShowCategoryGet">
            <summary>设置 ExcelChartDataLabel.get_ShowCategory() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.ShowCategorySetBoolean">
            <summary>设置 ExcelChartDataLabel.set_ShowCategory(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.ShowLeaderLinesGet">
            <summary>设置 ExcelChartDataLabel.get_ShowLeaderLines() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.ShowLeaderLinesSetBoolean">
            <summary>设置 ExcelChartDataLabel.set_ShowLeaderLines(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.ShowLegendKeyGet">
            <summary>设置 ExcelChartDataLabel.get_ShowLegendKey() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.ShowLegendKeySetBoolean">
            <summary>设置 ExcelChartDataLabel.set_ShowLegendKey(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.ShowPercentGet">
            <summary>设置 ExcelChartDataLabel.get_ShowPercent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.ShowPercentSetBoolean">
            <summary>设置 ExcelChartDataLabel.set_ShowPercent(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.ShowSeriesNameGet">
            <summary>设置 ExcelChartDataLabel.get_ShowSeriesName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.ShowSeriesNameSetBoolean">
            <summary>设置 ExcelChartDataLabel.set_ShowSeriesName(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.ShowValueGet">
            <summary>设置 ExcelChartDataLabel.get_ShowValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartDataLabel.AllInstances.ShowValueSetBoolean">
            <summary>设置 ExcelChartDataLabel.set_ShowValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelChartLegend 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.#ctor(OfficeOpenXml.Drawing.Chart.ExcelChartLegend)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.Add">
            <summary>设置 ExcelChartLegend.Add() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.BorderGet">
            <summary>设置 ExcelChartLegend.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.ConstructorXmlNamespaceManagerXmlNodeExcelChart">
            <summary>设置 ExcelChartLegend.ExcelChartLegend(XmlNamespaceManager ns, XmlNode node, ExcelChart chart) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.FillGet">
            <summary>设置 ExcelChartLegend.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.FontGet">
            <summary>设置 ExcelChartLegend.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.OverlayGet">
            <summary>设置 ExcelChartLegend.get_Overlay() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.OverlaySetBoolean">
            <summary>设置 ExcelChartLegend.set_Overlay(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.PositionGet">
            <summary>设置 ExcelChartLegend.get_Position() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.PositionSeteLegendPosition">
            <summary>设置 ExcelChartLegend.set_Position(eLegendPosition value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.Remove">
            <summary>设置 ExcelChartLegend.Remove() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.AllInstances.Add">
            <summary>设置 ExcelChartLegend.Add() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.AllInstances.BorderGet">
            <summary>设置 ExcelChartLegend.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.AllInstances.FillGet">
            <summary>设置 ExcelChartLegend.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.AllInstances.FontGet">
            <summary>设置 ExcelChartLegend.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.AllInstances.OverlayGet">
            <summary>设置 ExcelChartLegend.get_Overlay() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.AllInstances.OverlaySetBoolean">
            <summary>设置 ExcelChartLegend.set_Overlay(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.AllInstances.PositionGet">
            <summary>设置 ExcelChartLegend.get_Position() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.AllInstances.PositionSeteLegendPosition">
            <summary>设置 ExcelChartLegend.set_Position(eLegendPosition value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartLegend.AllInstances.Remove">
            <summary>设置 ExcelChartLegend.Remove() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartPlotArea">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartPlotArea.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartPlotArea.#ctor(OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartPlotArea.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartPlotArea.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartPlotArea.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartPlotArea.BorderGet">
            <summary>设置 ExcelChartPlotArea.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartPlotArea.ChartTypesGet">
            <summary>设置 ExcelChartPlotArea.get_ChartTypes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartPlotArea.ConstructorXmlNamespaceManagerXmlNodeExcelChart">
            <summary>设置 ExcelChartPlotArea.ExcelChartPlotArea(XmlNamespaceManager ns, XmlNode node, ExcelChart firstChart) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartPlotArea.FillGet">
            <summary>设置 ExcelChartPlotArea.get_Fill() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartPlotArea.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartPlotArea.AllInstances.BorderGet">
            <summary>设置 ExcelChartPlotArea.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartPlotArea.AllInstances.ChartTypesGet">
            <summary>设置 ExcelChartPlotArea.get_ChartTypes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartPlotArea.AllInstances.FillGet">
            <summary>设置 ExcelChartPlotArea.get_Fill() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelChartSerie 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.#ctor(OfficeOpenXml.Drawing.Chart.ExcelChartSerie)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.Cleartx">
            <summary>设置 ExcelChartSerie.Cleartx() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.ConstructorExcelChartSeriesXmlNamespaceManagerXmlNodeBoolean">
            <summary>设置 ExcelChartSerie.ExcelChartSerie(ExcelChartSeries chartSeries, XmlNamespaceManager ns, XmlNode node, Boolean isPivot) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.HeaderAddressGet">
            <summary>设置 ExcelChartSerie.get_HeaderAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.HeaderAddressSetExcelAddressBase">
            <summary>设置 ExcelChartSerie.set_HeaderAddress(ExcelAddressBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.HeaderGet">
            <summary>设置 ExcelChartSerie.get_Header() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.HeaderSetString">
            <summary>设置 ExcelChartSerie.set_Header(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.SeriesGet">
            <summary>设置 ExcelChartSerie.get_Series() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.SeriesSetString">
            <summary>设置 ExcelChartSerie.set_Series(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.SetIDString">
            <summary>设置 ExcelChartSerie.SetID(String id) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.TrendLinesGet">
            <summary>设置 ExcelChartSerie.get_TrendLines() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.XSeriesGet">
            <summary>设置 ExcelChartSerie.get_XSeries() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.XSeriesSetString">
            <summary>设置 ExcelChartSerie.set_XSeries(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.AllInstances.Cleartx">
            <summary>设置 ExcelChartSerie.Cleartx() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.AllInstances.HeaderAddressGet">
            <summary>设置 ExcelChartSerie.get_HeaderAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.AllInstances.HeaderAddressSetExcelAddressBase">
            <summary>设置 ExcelChartSerie.set_HeaderAddress(ExcelAddressBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.AllInstances.HeaderGet">
            <summary>设置 ExcelChartSerie.get_Header() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.AllInstances.HeaderSetString">
            <summary>设置 ExcelChartSerie.set_Header(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.AllInstances.SeriesGet">
            <summary>设置 ExcelChartSerie.get_Series() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.AllInstances.SeriesSetString">
            <summary>设置 ExcelChartSerie.set_Series(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.AllInstances.SetIDString">
            <summary>设置 ExcelChartSerie.SetID(String id) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.AllInstances.TrendLinesGet">
            <summary>设置 ExcelChartSerie.get_TrendLines() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.AllInstances.XSeriesGet">
            <summary>设置 ExcelChartSerie.get_XSeries() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerie.AllInstances.XSeriesSetString">
            <summary>设置 ExcelChartSerie.set_XSeries(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelChartSerieDataLabel 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.#ctor(OfficeOpenXml.Drawing.Chart.ExcelChartSerieDataLabel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.BorderGet">
            <summary>设置 ExcelChartSerieDataLabel.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelChartSerieDataLabel.ExcelChartSerieDataLabel(XmlNamespaceManager ns, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.FillGet">
            <summary>设置 ExcelChartSerieDataLabel.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.FontGet">
            <summary>设置 ExcelChartSerieDataLabel.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.PositionGet">
            <summary>设置 ExcelChartSerieDataLabel.get_Position() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.PositionSeteLabelPosition">
            <summary>设置 ExcelChartSerieDataLabel.set_Position(eLabelPosition value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.AllInstances.BorderGet">
            <summary>设置 ExcelChartSerieDataLabel.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.AllInstances.FillGet">
            <summary>设置 ExcelChartSerieDataLabel.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.AllInstances.FontGet">
            <summary>设置 ExcelChartSerieDataLabel.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.AllInstances.PositionGet">
            <summary>设置 ExcelChartSerieDataLabel.get_Position() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSerieDataLabel.AllInstances.PositionSeteLabelPosition">
            <summary>设置 ExcelChartSerieDataLabel.set_Position(eLabelPosition value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelChartSeries 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.#ctor(OfficeOpenXml.Drawing.Chart.ExcelChartSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AddAxisNodeseChartType">
            <summary>设置 ExcelChartSeries.AddAxisNodes(eChartType chartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AddExcelRangeBaseExcelRangeBase">
            <summary>设置 ExcelChartSeries.Add(ExcelRangeBase Serie, ExcelRangeBase XSerie) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AddExplosioneChartType">
            <summary>设置 ExcelChartSeries.AddExplosion(eChartType chartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AddMarkereChartType">
            <summary>设置 ExcelChartSeries.AddMarker(eChartType chartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AddPivotSerieExcelPivotTable">
            <summary>设置 ExcelChartSeries.AddPivotSerie(ExcelPivotTable pivotTableSource) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AddScatterPointeChartType">
            <summary>设置 ExcelChartSeries.AddScatterPoint(eChartType chartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AddSeriesStringString">
            <summary>设置 ExcelChartSeries.AddSeries(String SeriesAddress, String XSeriesAddress) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AddSmootheChartType">
            <summary>设置 ExcelChartSeries.AddSmooth(eChartType chartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AddStringString">
            <summary>设置 ExcelChartSeries.Add(String SerieAddress, String XSerieAddress) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.ChartGet">
            <summary>设置 ExcelChartSeries.get_Chart() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.ConstructorExcelChartXmlNamespaceManagerXmlNodeBoolean">
            <summary>设置 ExcelChartSeries.ExcelChartSeries(ExcelChart chart, XmlNamespaceManager ns, XmlNode node, Boolean isPivot) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.CountGet">
            <summary>设置 ExcelChartSeries.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.DeleteInt32">
            <summary>设置 ExcelChartSeries.Delete(Int32 PositionID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.FindIndex">
            <summary>设置 ExcelChartSeries.FindIndex() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.GetEnumerator">
            <summary>设置 ExcelChartSeries.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.ItemGetInt32">
            <summary>设置 ExcelChartSeries.get_Item(Int32 PositionID) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.AddAxisNodeseChartType">
            <summary>设置 ExcelChartSeries.AddAxisNodes(eChartType chartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.AddExcelRangeBaseExcelRangeBase">
            <summary>设置 ExcelChartSeries.Add(ExcelRangeBase Serie, ExcelRangeBase XSerie) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.AddExplosioneChartType">
            <summary>设置 ExcelChartSeries.AddExplosion(eChartType chartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.AddMarkereChartType">
            <summary>设置 ExcelChartSeries.AddMarker(eChartType chartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.AddPivotSerieExcelPivotTable">
            <summary>设置 ExcelChartSeries.AddPivotSerie(ExcelPivotTable pivotTableSource) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.AddScatterPointeChartType">
            <summary>设置 ExcelChartSeries.AddScatterPoint(eChartType chartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.AddSeriesStringString">
            <summary>设置 ExcelChartSeries.AddSeries(String SeriesAddress, String XSeriesAddress) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.AddSmootheChartType">
            <summary>设置 ExcelChartSeries.AddSmooth(eChartType chartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.AddStringString">
            <summary>设置 ExcelChartSeries.Add(String SerieAddress, String XSerieAddress) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.ChartGet">
            <summary>设置 ExcelChartSeries.get_Chart() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.CountGet">
            <summary>设置 ExcelChartSeries.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.DeleteInt32">
            <summary>设置 ExcelChartSeries.Delete(Int32 PositionID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.FindIndex">
            <summary>设置 ExcelChartSeries.FindIndex() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.GetEnumerator">
            <summary>设置 ExcelChartSeries.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartSeries.AllInstances.ItemGetInt32">
            <summary>设置 ExcelChartSeries.get_Item(Int32 PositionID) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelChartTitle 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.#ctor(OfficeOpenXml.Drawing.Chart.ExcelChartTitle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AnchorCtrGet">
            <summary>设置 ExcelChartTitle.get_AnchorCtr() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AnchorCtrSetBoolean">
            <summary>设置 ExcelChartTitle.set_AnchorCtr(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AnchorGet">
            <summary>设置 ExcelChartTitle.get_Anchor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AnchorSeteTextAnchoringType">
            <summary>设置 ExcelChartTitle.set_Anchor(eTextAnchoringType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.BorderGet">
            <summary>设置 ExcelChartTitle.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelChartTitle.ExcelChartTitle(XmlNamespaceManager nameSpaceManager, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.FillGet">
            <summary>设置 ExcelChartTitle.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.FontGet">
            <summary>设置 ExcelChartTitle.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.OverlayGet">
            <summary>设置 ExcelChartTitle.get_Overlay() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.OverlaySetBoolean">
            <summary>设置 ExcelChartTitle.set_Overlay(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.RichTextGet">
            <summary>设置 ExcelChartTitle.get_RichText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.RotationGet">
            <summary>设置 ExcelChartTitle.get_Rotation() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.RotationSetDouble">
            <summary>设置 ExcelChartTitle.set_Rotation(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.TextGet">
            <summary>设置 ExcelChartTitle.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.TextSetString">
            <summary>设置 ExcelChartTitle.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.TextVerticalGet">
            <summary>设置 ExcelChartTitle.get_TextVertical() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.TextVerticalSeteTextVerticalType">
            <summary>设置 ExcelChartTitle.set_TextVertical(eTextVerticalType value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.AnchorCtrGet">
            <summary>设置 ExcelChartTitle.get_AnchorCtr() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.AnchorCtrSetBoolean">
            <summary>设置 ExcelChartTitle.set_AnchorCtr(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.AnchorGet">
            <summary>设置 ExcelChartTitle.get_Anchor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.AnchorSeteTextAnchoringType">
            <summary>设置 ExcelChartTitle.set_Anchor(eTextAnchoringType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.BorderGet">
            <summary>设置 ExcelChartTitle.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.FillGet">
            <summary>设置 ExcelChartTitle.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.FontGet">
            <summary>设置 ExcelChartTitle.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.OverlayGet">
            <summary>设置 ExcelChartTitle.get_Overlay() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.OverlaySetBoolean">
            <summary>设置 ExcelChartTitle.set_Overlay(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.RichTextGet">
            <summary>设置 ExcelChartTitle.get_RichText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.RotationGet">
            <summary>设置 ExcelChartTitle.get_Rotation() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.RotationSetDouble">
            <summary>设置 ExcelChartTitle.set_Rotation(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.TextGet">
            <summary>设置 ExcelChartTitle.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.TextSetString">
            <summary>设置 ExcelChartTitle.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.TextVerticalGet">
            <summary>设置 ExcelChartTitle.get_TextVertical() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTitle.AllInstances.TextVerticalSeteTextVerticalType">
            <summary>设置 ExcelChartTitle.set_TextVertical(eTextVerticalType value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelChartTrendline 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.#ctor(OfficeOpenXml.Drawing.Chart.ExcelChartTrendline)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.BackwardGet">
            <summary>设置 ExcelChartTrendline.get_Backward() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.BackwardSetDecimal">
            <summary>设置 ExcelChartTrendline.set_Backward(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelChartTrendline.ExcelChartTrendline(XmlNamespaceManager namespaceManager, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.DisplayEquationGet">
            <summary>设置 ExcelChartTrendline.get_DisplayEquation() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.DisplayEquationSetBoolean">
            <summary>设置 ExcelChartTrendline.set_DisplayEquation(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.DisplayRSquaredValueGet">
            <summary>设置 ExcelChartTrendline.get_DisplayRSquaredValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.DisplayRSquaredValueSetBoolean">
            <summary>设置 ExcelChartTrendline.set_DisplayRSquaredValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.ForwardGet">
            <summary>设置 ExcelChartTrendline.get_Forward() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.ForwardSetDecimal">
            <summary>设置 ExcelChartTrendline.set_Forward(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.InterceptGet">
            <summary>设置 ExcelChartTrendline.get_Intercept() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.InterceptSetDecimal">
            <summary>设置 ExcelChartTrendline.set_Intercept(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.NameGet">
            <summary>设置 ExcelChartTrendline.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.NameSetString">
            <summary>设置 ExcelChartTrendline.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.OrderGet">
            <summary>设置 ExcelChartTrendline.get_Order() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.OrderSetDecimal">
            <summary>设置 ExcelChartTrendline.set_Order(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.PeriodGet">
            <summary>设置 ExcelChartTrendline.get_Period() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.PeriodSetDecimal">
            <summary>设置 ExcelChartTrendline.set_Period(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.TypeGet">
            <summary>设置 ExcelChartTrendline.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.TypeSeteTrendLine">
            <summary>设置 ExcelChartTrendline.set_Type(eTrendLine value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.BackwardGet">
            <summary>设置 ExcelChartTrendline.get_Backward() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.BackwardSetDecimal">
            <summary>设置 ExcelChartTrendline.set_Backward(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.DisplayEquationGet">
            <summary>设置 ExcelChartTrendline.get_DisplayEquation() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.DisplayEquationSetBoolean">
            <summary>设置 ExcelChartTrendline.set_DisplayEquation(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.DisplayRSquaredValueGet">
            <summary>设置 ExcelChartTrendline.get_DisplayRSquaredValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.DisplayRSquaredValueSetBoolean">
            <summary>设置 ExcelChartTrendline.set_DisplayRSquaredValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.ForwardGet">
            <summary>设置 ExcelChartTrendline.get_Forward() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.ForwardSetDecimal">
            <summary>设置 ExcelChartTrendline.set_Forward(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.InterceptGet">
            <summary>设置 ExcelChartTrendline.get_Intercept() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.InterceptSetDecimal">
            <summary>设置 ExcelChartTrendline.set_Intercept(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.NameGet">
            <summary>设置 ExcelChartTrendline.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.NameSetString">
            <summary>设置 ExcelChartTrendline.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.OrderGet">
            <summary>设置 ExcelChartTrendline.get_Order() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.OrderSetDecimal">
            <summary>设置 ExcelChartTrendline.set_Order(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.PeriodGet">
            <summary>设置 ExcelChartTrendline.get_Period() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.PeriodSetDecimal">
            <summary>设置 ExcelChartTrendline.set_Period(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.TypeGet">
            <summary>设置 ExcelChartTrendline.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendline.AllInstances.TypeSeteTrendLine">
            <summary>设置 ExcelChartTrendline.set_Type(eTrendLine value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelChartTrendlineCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.#ctor(OfficeOpenXml.Drawing.Chart.ExcelChartTrendlineCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.Drawing.Chart.ExcelChartTrendline})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.AddeTrendLine">
            <summary>设置 ExcelChartTrendlineCollection.Add(eTrendLine Type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.ConstructorExcelChartSerie">
            <summary>设置 ExcelChartTrendlineCollection.ExcelChartTrendlineCollection(ExcelChartSerie serie) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.SystemCollectionsGenericIEnumerableOfficeOpenXmlDrawingChartExcelChartTrendlineGetEnumerator">
            <summary>设置 ExcelChartTrendlineCollection.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.Drawing.Chart.ExcelChartTrendline&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelChartTrendlineCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.AllInstances.AddeTrendLine">
            <summary>设置 ExcelChartTrendlineCollection.Add(eTrendLine Type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.AllInstances.SystemCollectionsGenericIEnumerableOfficeOpenXmlDrawingChartExcelChartTrendlineGetEnumerator">
            <summary>设置 ExcelChartTrendlineCollection.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.Drawing.Chart.ExcelChartTrendline&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelChartTrendlineCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelChartTrendlineCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelDoughnutChart 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.#ctor(OfficeOpenXml.Drawing.Chart.ExcelDoughnutChart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.ConstructorExcelChartXmlNode">
            <summary>设置 ExcelDoughnutChart.ExcelDoughnutChart(ExcelChart topChart, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.ConstructorExcelDrawingsXmlNodeUriPackagePartXmlDocumentXmlNode">
            <summary>设置 ExcelDoughnutChart.ExcelDoughnutChart(ExcelDrawings drawings, XmlNode node, Uri uriChart, PackagePart part, XmlDocument chartXml, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.ConstructorExcelDrawingsXmlNodeeChartTypeBoolean">
            <summary>设置 ExcelDoughnutChart.ExcelDoughnutChart(ExcelDrawings drawings, XmlNode node, eChartType type, Boolean isPivot) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.ConstructorExcelDrawingsXmlNodeeChartTypeExcelChartExcelPivotTable">
            <summary>设置 ExcelDoughnutChart.ExcelDoughnutChart(ExcelDrawings drawings, XmlNode node, eChartType type, ExcelChart topChart, ExcelPivotTable PivotTableSource) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.FirstSliceAngleGet">
            <summary>设置 ExcelDoughnutChart.get_FirstSliceAngle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.FirstSliceAngleSetDecimal">
            <summary>设置 ExcelDoughnutChart.set_FirstSliceAngle(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.GetChartTypeString">
            <summary>设置 ExcelDoughnutChart.GetChartType(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.HoleSizeGet">
            <summary>设置 ExcelDoughnutChart.get_HoleSize() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.HoleSizeSetDecimal">
            <summary>设置 ExcelDoughnutChart.set_HoleSize(Decimal value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.AllInstances.FirstSliceAngleGet">
            <summary>设置 ExcelDoughnutChart.get_FirstSliceAngle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.AllInstances.FirstSliceAngleSetDecimal">
            <summary>设置 ExcelDoughnutChart.set_FirstSliceAngle(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.AllInstances.GetChartTypeString">
            <summary>设置 ExcelDoughnutChart.GetChartType(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.AllInstances.HoleSizeGet">
            <summary>设置 ExcelDoughnutChart.get_HoleSize() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelDoughnutChart.AllInstances.HoleSizeSetDecimal">
            <summary>设置 ExcelDoughnutChart.set_HoleSize(Decimal value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelLineChart 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.#ctor(OfficeOpenXml.Drawing.Chart.ExcelLineChart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.ConstructorExcelChartXmlNode">
            <summary>设置 ExcelLineChart.ExcelLineChart(ExcelChart topChart, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.ConstructorExcelDrawingsXmlNodeUriPackagePartXmlDocumentXmlNode">
            <summary>设置 ExcelLineChart.ExcelLineChart(ExcelDrawings drawings, XmlNode node, Uri uriChart, PackagePart part, XmlDocument chartXml, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.ConstructorExcelDrawingsXmlNodeeChartTypeExcelChartExcelPivotTable">
            <summary>设置 ExcelLineChart.ExcelLineChart(ExcelDrawings drawings, XmlNode node, eChartType type, ExcelChart topChart, ExcelPivotTable PivotTableSource) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.DataLabelGet">
            <summary>设置 ExcelLineChart.get_DataLabel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.GetChartTypeString">
            <summary>设置 ExcelLineChart.GetChartType(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.MarkerGet">
            <summary>设置 ExcelLineChart.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.MarkerSetBoolean">
            <summary>设置 ExcelLineChart.set_Marker(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.SmoothGet">
            <summary>设置 ExcelLineChart.get_Smooth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.SmoothSetBoolean">
            <summary>设置 ExcelLineChart.set_Smooth(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.AllInstances.DataLabelGet">
            <summary>设置 ExcelLineChart.get_DataLabel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.AllInstances.GetChartTypeString">
            <summary>设置 ExcelLineChart.GetChartType(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.AllInstances.MarkerGet">
            <summary>设置 ExcelLineChart.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.AllInstances.MarkerSetBoolean">
            <summary>设置 ExcelLineChart.set_Marker(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.AllInstances.SmoothGet">
            <summary>设置 ExcelLineChart.get_Smooth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChart.AllInstances.SmoothSetBoolean">
            <summary>设置 ExcelLineChart.set_Smooth(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelLineChartSerie 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.#ctor(OfficeOpenXml.Drawing.Chart.ExcelLineChartSerie)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.ConstructorExcelChartSeriesXmlNamespaceManagerXmlNodeBoolean">
            <summary>设置 ExcelLineChartSerie.ExcelLineChartSerie(ExcelChartSeries chartSeries, XmlNamespaceManager ns, XmlNode node, Boolean isPivot) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.DataLabelGet">
            <summary>设置 ExcelLineChartSerie.get_DataLabel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.MarkerGet">
            <summary>设置 ExcelLineChartSerie.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.MarkerSeteMarkerStyle">
            <summary>设置 ExcelLineChartSerie.set_Marker(eMarkerStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.SmoothGet">
            <summary>设置 ExcelLineChartSerie.get_Smooth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.SmoothSetBoolean">
            <summary>设置 ExcelLineChartSerie.set_Smooth(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.AllInstances.DataLabelGet">
            <summary>设置 ExcelLineChartSerie.get_DataLabel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.AllInstances.MarkerGet">
            <summary>设置 ExcelLineChartSerie.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.AllInstances.MarkerSeteMarkerStyle">
            <summary>设置 ExcelLineChartSerie.set_Marker(eMarkerStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.AllInstances.SmoothGet">
            <summary>设置 ExcelLineChartSerie.get_Smooth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelLineChartSerie.AllInstances.SmoothSetBoolean">
            <summary>设置 ExcelLineChartSerie.set_Smooth(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelOfPieChart 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.#ctor(OfficeOpenXml.Drawing.Chart.ExcelOfPieChart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.ConstructorExcelDrawingsXmlNodeUriPackagePartXmlDocumentXmlNode">
            <summary>设置 ExcelOfPieChart.ExcelOfPieChart(ExcelDrawings drawings, XmlNode node, Uri uriChart, PackagePart part, XmlDocument chartXml, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.ConstructorExcelDrawingsXmlNodeeChartTypeBoolean">
            <summary>设置 ExcelOfPieChart.ExcelOfPieChart(ExcelDrawings drawings, XmlNode node, eChartType type, Boolean isPivot) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.ConstructorExcelDrawingsXmlNodeeChartTypeExcelChartExcelPivotTable">
            <summary>设置 ExcelOfPieChart.ExcelOfPieChart(ExcelDrawings drawings, XmlNode node, eChartType type, ExcelChart topChart, ExcelPivotTable PivotTableSource) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.GetChartTypeString">
            <summary>设置 ExcelOfPieChart.GetChartType(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.OfPieTypeGet">
            <summary>设置 ExcelOfPieChart.get_OfPieType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.OfPieTypeSetePieType">
            <summary>设置 ExcelOfPieChart.set_OfPieType(ePieType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.SetTypeProperties">
            <summary>设置 ExcelOfPieChart.SetTypeProperties() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.AllInstances.GetChartTypeString">
            <summary>设置 ExcelOfPieChart.GetChartType(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.AllInstances.OfPieTypeGet">
            <summary>设置 ExcelOfPieChart.get_OfPieType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.AllInstances.OfPieTypeSetePieType">
            <summary>设置 ExcelOfPieChart.set_OfPieType(ePieType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelOfPieChart.AllInstances.SetTypeProperties">
            <summary>设置 ExcelOfPieChart.SetTypeProperties() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelPieChart 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart.#ctor(OfficeOpenXml.Drawing.Chart.ExcelPieChart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart.ConstructorExcelChartXmlNode">
            <summary>设置 ExcelPieChart.ExcelPieChart(ExcelChart topChart, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart.ConstructorExcelDrawingsXmlNodeUriPackagePartXmlDocumentXmlNode">
            <summary>设置 ExcelPieChart.ExcelPieChart(ExcelDrawings drawings, XmlNode node, Uri uriChart, PackagePart part, XmlDocument chartXml, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart.ConstructorExcelDrawingsXmlNodeeChartTypeBoolean">
            <summary>设置 ExcelPieChart.ExcelPieChart(ExcelDrawings drawings, XmlNode node, eChartType type, Boolean isPivot) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart.ConstructorExcelDrawingsXmlNodeeChartTypeExcelChartExcelPivotTable">
            <summary>设置 ExcelPieChart.ExcelPieChart(ExcelDrawings drawings, XmlNode node, eChartType type, ExcelChart topChart, ExcelPivotTable PivotTableSource) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart.DataLabelGet">
            <summary>设置 ExcelPieChart.get_DataLabel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart.GetChartTypeString">
            <summary>设置 ExcelPieChart.GetChartType(String name) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart.AllInstances.DataLabelGet">
            <summary>设置 ExcelPieChart.get_DataLabel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChart.AllInstances.GetChartTypeString">
            <summary>设置 ExcelPieChart.GetChartType(String name) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChartSerie">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelPieChartSerie 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChartSerie.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChartSerie.#ctor(OfficeOpenXml.Drawing.Chart.ExcelPieChartSerie)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChartSerie.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChartSerie.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChartSerie.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChartSerie.ConstructorExcelChartSeriesXmlNamespaceManagerXmlNodeBoolean">
            <summary>设置 ExcelPieChartSerie.ExcelPieChartSerie(ExcelChartSeries chartSeries, XmlNamespaceManager ns, XmlNode node, Boolean isPivot) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChartSerie.DataLabelGet">
            <summary>设置 ExcelPieChartSerie.get_DataLabel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChartSerie.ExplosionGet">
            <summary>设置 ExcelPieChartSerie.get_Explosion() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChartSerie.ExplosionSetInt32">
            <summary>设置 ExcelPieChartSerie.set_Explosion(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChartSerie.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChartSerie.AllInstances.DataLabelGet">
            <summary>设置 ExcelPieChartSerie.get_DataLabel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChartSerie.AllInstances.ExplosionGet">
            <summary>设置 ExcelPieChartSerie.get_Explosion() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelPieChartSerie.AllInstances.ExplosionSetInt32">
            <summary>设置 ExcelPieChartSerie.set_Explosion(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelScatterChart 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.#ctor(OfficeOpenXml.Drawing.Chart.ExcelScatterChart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.ConstructorExcelChartXmlNode">
            <summary>设置 ExcelScatterChart.ExcelScatterChart(ExcelChart topChart, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.ConstructorExcelDrawingsXmlNodeUriPackagePartXmlDocumentXmlNode">
            <summary>设置 ExcelScatterChart.ExcelScatterChart(ExcelDrawings drawings, XmlNode node, Uri uriChart, PackagePart part, XmlDocument chartXml, XmlNode chartNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.ConstructorExcelDrawingsXmlNodeeChartTypeExcelChartExcelPivotTable">
            <summary>设置 ExcelScatterChart.ExcelScatterChart(ExcelDrawings drawings, XmlNode node, eChartType type, ExcelChart topChart, ExcelPivotTable PivotTableSource) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.GetChartTypeString">
            <summary>设置 ExcelScatterChart.GetChartType(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.GetScatterEnumString">
            <summary>设置 ExcelScatterChart.GetScatterEnum(String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.GetScatterTexteScatterStyle">
            <summary>设置 ExcelScatterChart.GetScatterText(eScatterStyle shatterStyle) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.MarkerGet">
            <summary>设置 ExcelScatterChart.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.MarkerSetBoolean">
            <summary>设置 ExcelScatterChart.set_Marker(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.ScatterStyleGet">
            <summary>设置 ExcelScatterChart.get_ScatterStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.ScatterStyleSeteScatterStyle">
            <summary>设置 ExcelScatterChart.set_ScatterStyle(eScatterStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.SetTypeProperties">
            <summary>设置 ExcelScatterChart.SetTypeProperties() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.AllInstances.GetChartTypeString">
            <summary>设置 ExcelScatterChart.GetChartType(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.AllInstances.GetScatterEnumString">
            <summary>设置 ExcelScatterChart.GetScatterEnum(String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.AllInstances.GetScatterTexteScatterStyle">
            <summary>设置 ExcelScatterChart.GetScatterText(eScatterStyle shatterStyle) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.AllInstances.MarkerGet">
            <summary>设置 ExcelScatterChart.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.AllInstances.MarkerSetBoolean">
            <summary>设置 ExcelScatterChart.set_Marker(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.AllInstances.ScatterStyleGet">
            <summary>设置 ExcelScatterChart.get_ScatterStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.AllInstances.ScatterStyleSeteScatterStyle">
            <summary>设置 ExcelScatterChart.set_ScatterStyle(eScatterStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChart.AllInstances.SetTypeProperties">
            <summary>设置 ExcelScatterChart.SetTypeProperties() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie">
            <summary>OfficeOpenXml.Drawing.Chart.ExcelScatterChartSerie 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.#ctor(OfficeOpenXml.Drawing.Chart.ExcelScatterChartSerie)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.ConstructorExcelChartSeriesXmlNamespaceManagerXmlNodeBoolean">
            <summary>设置 ExcelScatterChartSerie.ExcelScatterChartSerie(ExcelChartSeries chartSeries, XmlNamespaceManager ns, XmlNode node, Boolean isPivot) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.DataLabelGet">
            <summary>设置 ExcelScatterChartSerie.get_DataLabel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.MarkerGet">
            <summary>设置 ExcelScatterChartSerie.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.MarkerSeteMarkerStyle">
            <summary>设置 ExcelScatterChartSerie.set_Marker(eMarkerStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.SmoothGet">
            <summary>设置 ExcelScatterChartSerie.get_Smooth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.SmoothSetInt32">
            <summary>设置 ExcelScatterChartSerie.set_Smooth(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.AllInstances.DataLabelGet">
            <summary>设置 ExcelScatterChartSerie.get_DataLabel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.AllInstances.MarkerGet">
            <summary>设置 ExcelScatterChartSerie.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.AllInstances.MarkerSeteMarkerStyle">
            <summary>设置 ExcelScatterChartSerie.set_Marker(eMarkerStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.AllInstances.SmoothGet">
            <summary>设置 ExcelScatterChartSerie.get_Smooth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Chart.Fakes.ShimExcelScatterChartSerie.AllInstances.SmoothSetInt32">
            <summary>设置 ExcelScatterChartSerie.set_Smooth(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing">
            <summary>OfficeOpenXml.Drawing.ExcelDrawing 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.#ctor(OfficeOpenXml.Drawing.ExcelDrawing)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ConstructorExcelDrawingsXmlNodeString">
            <summary>设置 ExcelDrawing.ExcelDrawing(ExcelDrawings drawings, XmlNode node, String nameXPath) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelDrawing.ExcelDrawing(XmlNamespaceManager nameSpaceManager, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.DeleteMe">
            <summary>设置 ExcelDrawing.DeleteMe() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.EditAsGet">
            <summary>设置 ExcelDrawing.get_EditAs() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.EditAsSeteEditAs">
            <summary>设置 ExcelDrawing.set_EditAs(eEditAs value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.FromGet">
            <summary>设置 ExcelDrawing.get_From() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.FromSetExcelDrawingExcelPosition">
            <summary>设置 ExcelDrawing.set_From(ExcelPosition value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.GetColumnWidthInt32">
            <summary>设置 ExcelDrawing.GetColumnWidth(Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.GetDrawingExcelDrawingsXmlNode">
            <summary>设置 ExcelDrawing.GetDrawing(ExcelDrawings drawings, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.GetPixelHeight">
            <summary>设置 ExcelDrawing.GetPixelHeight() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.GetPixelLeft">
            <summary>设置 ExcelDrawing.GetPixelLeft() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.GetPixelTop">
            <summary>设置 ExcelDrawing.GetPixelTop() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.GetPixelWidth">
            <summary>设置 ExcelDrawing.GetPixelWidth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.GetRowWidthInt32">
            <summary>设置 ExcelDrawing.GetRowWidth(Int32 row) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.GetTextAchoringEnumString">
            <summary>设置 ExcelDrawing.GetTextAchoringEnum(String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.GetTextAchoringTexteTextAnchoringType">
            <summary>设置 ExcelDrawing.GetTextAchoringText(eTextAnchoringType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.GetTextVerticalEnumString">
            <summary>设置 ExcelDrawing.GetTextVerticalEnum(String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.GetTextVerticalTexteTextVerticalType">
            <summary>设置 ExcelDrawing.GetTextVerticalText(eTextVerticalType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.IdGet">
            <summary>设置 ExcelDrawing.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.LockedGet">
            <summary>设置 ExcelDrawing.get_Locked() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.LockedSetBoolean">
            <summary>设置 ExcelDrawing.set_Locked(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.NameGet">
            <summary>设置 ExcelDrawing.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.NameSetString">
            <summary>设置 ExcelDrawing.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.PrintGet">
            <summary>设置 ExcelDrawing.get_Print() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.PrintSetBoolean">
            <summary>设置 ExcelDrawing.set_Print(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.SetPixelHeightInt32">
            <summary>设置 ExcelDrawing.SetPixelHeight(Int32 pixels) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.SetPixelHeightInt32Single">
            <summary>设置 ExcelDrawing.SetPixelHeight(Int32 pixels, Single dpi) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.SetPixelLeftInt32">
            <summary>设置 ExcelDrawing.SetPixelLeft(Int32 pixels) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.SetPixelTopInt32">
            <summary>设置 ExcelDrawing.SetPixelTop(Int32 pixels) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.SetPixelWidthInt32">
            <summary>设置 ExcelDrawing.SetPixelWidth(Int32 pixels) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.SetPixelWidthInt32Single">
            <summary>设置 ExcelDrawing.SetPixelWidth(Int32 pixels, Single dpi) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.SetPositionInt32Int32">
            <summary>设置 ExcelDrawing.SetPosition(Int32 PixelTop, Int32 PixelLeft) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.SetPositionInt32Int32Int32Int32">
            <summary>设置 ExcelDrawing.SetPosition(Int32 Row, Int32 RowOffsetPixels, Int32 Column, Int32 ColumnOffsetPixels) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.SetSizeInt32">
            <summary>设置 ExcelDrawing.SetSize(Int32 Percent) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.SetSizeInt32Int32">
            <summary>设置 ExcelDrawing.SetSize(Int32 PixelWidth, Int32 PixelHeight) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ToGet">
            <summary>设置 ExcelDrawing.get_To() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ToSetExcelDrawingExcelPosition">
            <summary>设置 ExcelDrawing.set_To(ExcelPosition value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.DeleteMe">
            <summary>设置 ExcelDrawing.DeleteMe() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.EditAsGet">
            <summary>设置 ExcelDrawing.get_EditAs() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.EditAsSeteEditAs">
            <summary>设置 ExcelDrawing.set_EditAs(eEditAs value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.FromGet">
            <summary>设置 ExcelDrawing.get_From() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.FromSetExcelDrawingExcelPosition">
            <summary>设置 ExcelDrawing.set_From(ExcelPosition value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.GetColumnWidthInt32">
            <summary>设置 ExcelDrawing.GetColumnWidth(Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.GetPixelHeight">
            <summary>设置 ExcelDrawing.GetPixelHeight() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.GetPixelLeft">
            <summary>设置 ExcelDrawing.GetPixelLeft() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.GetPixelTop">
            <summary>设置 ExcelDrawing.GetPixelTop() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.GetPixelWidth">
            <summary>设置 ExcelDrawing.GetPixelWidth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.GetRowWidthInt32">
            <summary>设置 ExcelDrawing.GetRowWidth(Int32 row) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.IdGet">
            <summary>设置 ExcelDrawing.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.LockedGet">
            <summary>设置 ExcelDrawing.get_Locked() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.LockedSetBoolean">
            <summary>设置 ExcelDrawing.set_Locked(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.NameGet">
            <summary>设置 ExcelDrawing.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.NameSetString">
            <summary>设置 ExcelDrawing.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.PrintGet">
            <summary>设置 ExcelDrawing.get_Print() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.PrintSetBoolean">
            <summary>设置 ExcelDrawing.set_Print(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.SetPixelHeightInt32">
            <summary>设置 ExcelDrawing.SetPixelHeight(Int32 pixels) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.SetPixelHeightInt32Single">
            <summary>设置 ExcelDrawing.SetPixelHeight(Int32 pixels, Single dpi) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.SetPixelLeftInt32">
            <summary>设置 ExcelDrawing.SetPixelLeft(Int32 pixels) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.SetPixelTopInt32">
            <summary>设置 ExcelDrawing.SetPixelTop(Int32 pixels) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.SetPixelWidthInt32">
            <summary>设置 ExcelDrawing.SetPixelWidth(Int32 pixels) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.SetPixelWidthInt32Single">
            <summary>设置 ExcelDrawing.SetPixelWidth(Int32 pixels, Single dpi) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.SetPositionInt32Int32">
            <summary>设置 ExcelDrawing.SetPosition(Int32 PixelTop, Int32 PixelLeft) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.SetPositionInt32Int32Int32Int32">
            <summary>设置 ExcelDrawing.SetPosition(Int32 Row, Int32 RowOffsetPixels, Int32 Column, Int32 ColumnOffsetPixels) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.SetSizeInt32">
            <summary>设置 ExcelDrawing.SetSize(Int32 Percent) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.SetSizeInt32Int32">
            <summary>设置 ExcelDrawing.SetSize(Int32 PixelWidth, Int32 PixelHeight) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.ToGet">
            <summary>设置 ExcelDrawing.get_To() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.AllInstances.ToSetExcelDrawingExcelPosition">
            <summary>设置 ExcelDrawing.set_To(ExcelPosition value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition">
            <summary>OfficeOpenXml.Drawing.ExcelDrawing+ExcelPosition 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.#ctor(OfficeOpenXml.Drawing.ExcelDrawing.ExcelPosition)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.ColumnGet">
            <summary>设置 ExcelPosition.get_Column() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.ColumnOffGet">
            <summary>设置 ExcelPosition.get_ColumnOff() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.ColumnOffSetInt32">
            <summary>设置 ExcelPosition.set_ColumnOff(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.ColumnSetInt32">
            <summary>设置 ExcelPosition.set_Column(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelPosition.ExcelPosition(XmlNamespaceManager ns, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.RowGet">
            <summary>设置 ExcelPosition.get_Row() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.RowOffGet">
            <summary>设置 ExcelPosition.get_RowOff() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.RowOffSetInt32">
            <summary>设置 ExcelPosition.set_RowOff(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.RowSetInt32">
            <summary>设置 ExcelPosition.set_Row(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.AllInstances.ColumnGet">
            <summary>设置 ExcelPosition.get_Column() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.AllInstances.ColumnOffGet">
            <summary>设置 ExcelPosition.get_ColumnOff() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.AllInstances.ColumnOffSetInt32">
            <summary>设置 ExcelPosition.set_ColumnOff(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.AllInstances.ColumnSetInt32">
            <summary>设置 ExcelPosition.set_Column(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.AllInstances.RowGet">
            <summary>设置 ExcelPosition.get_Row() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.AllInstances.RowOffGet">
            <summary>设置 ExcelPosition.get_RowOff() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.AllInstances.RowOffSetInt32">
            <summary>设置 ExcelPosition.set_RowOff(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawing.ShimExcelPosition.AllInstances.RowSetInt32">
            <summary>设置 ExcelPosition.set_Row(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder">
            <summary>OfficeOpenXml.Drawing.ExcelDrawingBorder 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.#ctor(OfficeOpenXml.Drawing.ExcelDrawingBorder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.ConstructorXmlNamespaceManagerXmlNodeString">
            <summary>设置 ExcelDrawingBorder.ExcelDrawingBorder(XmlNamespaceManager nameSpaceManager, XmlNode topNode, String linePath) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.FillGet">
            <summary>设置 ExcelDrawingBorder.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.LineCapGet">
            <summary>设置 ExcelDrawingBorder.get_LineCap() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.LineCapSeteLineCap">
            <summary>设置 ExcelDrawingBorder.set_LineCap(eLineCap value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.LineStyleGet">
            <summary>设置 ExcelDrawingBorder.get_LineStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.LineStyleSeteLineStyle">
            <summary>设置 ExcelDrawingBorder.set_LineStyle(eLineStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.TranslateLineCapString">
            <summary>设置 ExcelDrawingBorder.TranslateLineCap(String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.TranslateLineCapTexteLineCap">
            <summary>设置 ExcelDrawingBorder.TranslateLineCapText(eLineCap value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.TranslateLineStyleString">
            <summary>设置 ExcelDrawingBorder.TranslateLineStyle(String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.TranslateLineStyleTexteLineStyle">
            <summary>设置 ExcelDrawingBorder.TranslateLineStyleText(eLineStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.WidthGet">
            <summary>设置 ExcelDrawingBorder.get_Width() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.WidthSetInt32">
            <summary>设置 ExcelDrawingBorder.set_Width(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.AllInstances.FillGet">
            <summary>设置 ExcelDrawingBorder.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.AllInstances.LineCapGet">
            <summary>设置 ExcelDrawingBorder.get_LineCap() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.AllInstances.LineCapSeteLineCap">
            <summary>设置 ExcelDrawingBorder.set_LineCap(eLineCap value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.AllInstances.LineStyleGet">
            <summary>设置 ExcelDrawingBorder.get_LineStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.AllInstances.LineStyleSeteLineStyle">
            <summary>设置 ExcelDrawingBorder.set_LineStyle(eLineStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.AllInstances.TranslateLineCapString">
            <summary>设置 ExcelDrawingBorder.TranslateLineCap(String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.AllInstances.TranslateLineCapTexteLineCap">
            <summary>设置 ExcelDrawingBorder.TranslateLineCapText(eLineCap value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.AllInstances.TranslateLineStyleString">
            <summary>设置 ExcelDrawingBorder.TranslateLineStyle(String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.AllInstances.TranslateLineStyleTexteLineStyle">
            <summary>设置 ExcelDrawingBorder.TranslateLineStyleText(eLineStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.AllInstances.WidthGet">
            <summary>设置 ExcelDrawingBorder.get_Width() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingBorder.AllInstances.WidthSetInt32">
            <summary>设置 ExcelDrawingBorder.set_Width(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill">
            <summary>OfficeOpenXml.Drawing.ExcelDrawingFill 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.#ctor(OfficeOpenXml.Drawing.ExcelDrawingFill)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.ColorGet">
            <summary>设置 ExcelDrawingFill.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.ColorSetColor">
            <summary>设置 ExcelDrawingFill.set_Color(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.ConstructorXmlNamespaceManagerXmlNodeString">
            <summary>设置 ExcelDrawingFill.ExcelDrawingFill(XmlNamespaceManager nameSpaceManager, XmlNode topNode, String fillPath) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.CreateFillTopNodeeFillStyle">
            <summary>设置 ExcelDrawingFill.CreateFillTopNode(eFillStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.GetStyleEnumString">
            <summary>设置 ExcelDrawingFill.GetStyleEnum(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.GetStyleTexteFillStyle">
            <summary>设置 ExcelDrawingFill.GetStyleText(eFillStyle style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.StyleGet">
            <summary>设置 ExcelDrawingFill.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.StyleSeteFillStyle">
            <summary>设置 ExcelDrawingFill.set_Style(eFillStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.TransparancyGet">
            <summary>设置 ExcelDrawingFill.get_Transparancy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.TransparancySetInt32">
            <summary>设置 ExcelDrawingFill.set_Transparancy(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.AllInstances.ColorGet">
            <summary>设置 ExcelDrawingFill.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.AllInstances.ColorSetColor">
            <summary>设置 ExcelDrawingFill.set_Color(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.AllInstances.CreateFillTopNodeeFillStyle">
            <summary>设置 ExcelDrawingFill.CreateFillTopNode(eFillStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.AllInstances.GetStyleEnumString">
            <summary>设置 ExcelDrawingFill.GetStyleEnum(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.AllInstances.GetStyleTexteFillStyle">
            <summary>设置 ExcelDrawingFill.GetStyleText(eFillStyle style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.AllInstances.StyleGet">
            <summary>设置 ExcelDrawingFill.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.AllInstances.StyleSeteFillStyle">
            <summary>设置 ExcelDrawingFill.set_Style(eFillStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.AllInstances.TransparancyGet">
            <summary>设置 ExcelDrawingFill.get_Transparancy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawingFill.AllInstances.TransparancySetInt32">
            <summary>设置 ExcelDrawingFill.set_Transparancy(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings">
            <summary>OfficeOpenXml.Drawing.ExcelDrawings 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.#ctor(OfficeOpenXml.Drawing.ExcelDrawings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.Drawing.ExcelDrawing})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AddChartStringeChartType">
            <summary>设置 ExcelDrawings.AddChart(String Name, eChartType ChartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AddChartStringeChartTypeExcelPivotTable">
            <summary>设置 ExcelDrawings.AddChart(String Name, eChartType ChartType, ExcelPivotTable PivotTableSource) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AddDrawings">
            <summary>设置 ExcelDrawings.AddDrawings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AddPictureStringFileInfo">
            <summary>设置 ExcelDrawings.AddPicture(String Name, FileInfo ImageFile) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AddPictureStringFileInfoUri">
            <summary>设置 ExcelDrawings.AddPicture(String Name, FileInfo ImageFile, Uri Hyperlink) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AddPictureStringImage">
            <summary>设置 ExcelDrawings.AddPicture(String Name, Image image) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AddPictureStringImageUri">
            <summary>设置 ExcelDrawings.AddPicture(String Name, Image image, Uri Hyperlink) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AddShapeStringeShapeStyle">
            <summary>设置 ExcelDrawings.AddShape(String Name, eShapeStyle Style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AdjustHeightInt32MdArray2">
            <summary>设置 ExcelDrawings.AdjustHeight(Int32[,] pos) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AdjustWidthInt32MdArray2">
            <summary>设置 ExcelDrawings.AdjustWidth(Int32[,] pos) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.Clear">
            <summary>设置 ExcelDrawings.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.ConstructorExcelPackageExcelWorksheet">
            <summary>设置 ExcelDrawings.ExcelDrawings(ExcelPackage xlPackage, ExcelWorksheet sheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.CountGet">
            <summary>设置 ExcelDrawings.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.CreateDrawingXml">
            <summary>设置 ExcelDrawings.CreateDrawingXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.CreateNSM">
            <summary>设置 ExcelDrawings.CreateNSM() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.DrawingXmlGet">
            <summary>设置 ExcelDrawings.get_DrawingXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.GetDrawingHeight">
            <summary>设置 ExcelDrawings.GetDrawingHeight() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.GetDrawingWidths">
            <summary>设置 ExcelDrawings.GetDrawingWidths() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.GetEnumerator">
            <summary>设置 ExcelDrawings.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.ItemGetInt32">
            <summary>设置 ExcelDrawings.get_Item(Int32 PositionID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.ItemGetString">
            <summary>设置 ExcelDrawings.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.NameSpaceManagerGet">
            <summary>设置 ExcelDrawings.get_NameSpaceManager() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.PartGet">
            <summary>设置 ExcelDrawings.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.RemoveExcelDrawing">
            <summary>设置 ExcelDrawings.Remove(ExcelDrawing Drawing) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.RemoveInt32">
            <summary>设置 ExcelDrawings.Remove(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.RemoveString">
            <summary>设置 ExcelDrawings.Remove(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.SystemCollectionsGenericIEnumerableOfficeOpenXmlDrawingExcelDrawingGetEnumerator">
            <summary>设置 ExcelDrawings.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.Drawing.ExcelDrawing&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.UriDrawingGet">
            <summary>设置 ExcelDrawings.get_UriDrawing() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.WorksheetGet">
            <summary>设置 ExcelDrawings.get_Worksheet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.WorksheetSetExcelWorksheet">
            <summary>设置 ExcelDrawings.set_Worksheet(ExcelWorksheet value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.AddChartStringeChartType">
            <summary>设置 ExcelDrawings.AddChart(String Name, eChartType ChartType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.AddChartStringeChartTypeExcelPivotTable">
            <summary>设置 ExcelDrawings.AddChart(String Name, eChartType ChartType, ExcelPivotTable PivotTableSource) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.AddDrawings">
            <summary>设置 ExcelDrawings.AddDrawings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.AddPictureStringFileInfo">
            <summary>设置 ExcelDrawings.AddPicture(String Name, FileInfo ImageFile) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.AddPictureStringFileInfoUri">
            <summary>设置 ExcelDrawings.AddPicture(String Name, FileInfo ImageFile, Uri Hyperlink) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.AddPictureStringImage">
            <summary>设置 ExcelDrawings.AddPicture(String Name, Image image) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.AddPictureStringImageUri">
            <summary>设置 ExcelDrawings.AddPicture(String Name, Image image, Uri Hyperlink) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.AddShapeStringeShapeStyle">
            <summary>设置 ExcelDrawings.AddShape(String Name, eShapeStyle Style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.AdjustHeightInt32MdArray2">
            <summary>设置 ExcelDrawings.AdjustHeight(Int32[,] pos) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.AdjustWidthInt32MdArray2">
            <summary>设置 ExcelDrawings.AdjustWidth(Int32[,] pos) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.Clear">
            <summary>设置 ExcelDrawings.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.CountGet">
            <summary>设置 ExcelDrawings.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.CreateDrawingXml">
            <summary>设置 ExcelDrawings.CreateDrawingXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.CreateNSM">
            <summary>设置 ExcelDrawings.CreateNSM() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.DrawingXmlGet">
            <summary>设置 ExcelDrawings.get_DrawingXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.GetDrawingHeight">
            <summary>设置 ExcelDrawings.GetDrawingHeight() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.GetDrawingWidths">
            <summary>设置 ExcelDrawings.GetDrawingWidths() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.GetEnumerator">
            <summary>设置 ExcelDrawings.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.ItemGetInt32">
            <summary>设置 ExcelDrawings.get_Item(Int32 PositionID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.ItemGetString">
            <summary>设置 ExcelDrawings.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.NameSpaceManagerGet">
            <summary>设置 ExcelDrawings.get_NameSpaceManager() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.PartGet">
            <summary>设置 ExcelDrawings.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.RemoveExcelDrawing">
            <summary>设置 ExcelDrawings.Remove(ExcelDrawing Drawing) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.RemoveInt32">
            <summary>设置 ExcelDrawings.Remove(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.RemoveString">
            <summary>设置 ExcelDrawings.Remove(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.SystemCollectionsGenericIEnumerableOfficeOpenXmlDrawingExcelDrawingGetEnumerator">
            <summary>设置 ExcelDrawings.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.Drawing.ExcelDrawing&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.UriDrawingGet">
            <summary>设置 ExcelDrawings.get_UriDrawing() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.WorksheetGet">
            <summary>设置 ExcelDrawings.get_Worksheet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelDrawings.AllInstances.WorksheetSetExcelWorksheet">
            <summary>设置 ExcelDrawings.set_Worksheet(ExcelWorksheet value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture">
            <summary>OfficeOpenXml.Drawing.ExcelPicture 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.#ctor(OfficeOpenXml.Drawing.ExcelPicture)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AddNewPictureByteArrayString">
            <summary>设置 ExcelPicture.AddNewPicture(Byte[] img, String relID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.BorderGet">
            <summary>设置 ExcelPicture.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.ConstructorExcelDrawingsXmlNode">
            <summary>设置 ExcelPicture.ExcelPicture(ExcelDrawings drawings, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.ConstructorExcelDrawingsXmlNodeFileInfo">
            <summary>设置 ExcelPicture.ExcelPicture(ExcelDrawings drawings, XmlNode node, FileInfo imageFile) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.ConstructorExcelDrawingsXmlNodeFileInfoUri">
            <summary>设置 ExcelPicture.ExcelPicture(ExcelDrawings drawings, XmlNode node, FileInfo imageFile, Uri hyperlink) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.ConstructorExcelDrawingsXmlNodeImage">
            <summary>设置 ExcelPicture.ExcelPicture(ExcelDrawings drawings, XmlNode node, Image image) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.ConstructorExcelDrawingsXmlNodeImageUri">
            <summary>设置 ExcelPicture.ExcelPicture(ExcelDrawings drawings, XmlNode node, Image image, Uri hyperlink) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.ContentTypeGet">
            <summary>设置 ExcelPicture.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.ContentTypeSetString">
            <summary>设置 ExcelPicture.set_ContentType(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.DeleteMe">
            <summary>设置 ExcelPicture.DeleteMe() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.FillGet">
            <summary>设置 ExcelPicture.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.GetContentTypeString">
            <summary>设置 ExcelPicture.GetContentType(String extension) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.HypRelGet">
            <summary>设置 ExcelPicture.get_HypRel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.HypRelSetPackageRelationship">
            <summary>设置 ExcelPicture.set_HypRel(PackageRelationship value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.HyperlinkGet">
            <summary>设置 ExcelPicture.get_Hyperlink() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.IdGet">
            <summary>设置 ExcelPicture.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.ImageFormatGet">
            <summary>设置 ExcelPicture.get_ImageFormat() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.ImageFormatSetImageFormat">
            <summary>设置 ExcelPicture.set_ImageFormat(ImageFormat value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.ImageGet">
            <summary>设置 ExcelPicture.get_Image() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.ImageHashGet">
            <summary>设置 ExcelPicture.get_ImageHash() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.ImageHashSetString">
            <summary>设置 ExcelPicture.set_ImageHash(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.ImageSetImage">
            <summary>设置 ExcelPicture.set_Image(Image value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.PicStartXml">
            <summary>设置 ExcelPicture.PicStartXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.RelPicGet">
            <summary>设置 ExcelPicture.get_RelPic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.RelPicSetPackageRelationship">
            <summary>设置 ExcelPicture.set_RelPic(PackageRelationship value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.SavePictureImage">
            <summary>设置 ExcelPicture.SavePicture(Image image) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.SetPosDefaultsImage">
            <summary>设置 ExcelPicture.SetPosDefaults(Image image) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.SetSizeInt32">
            <summary>设置 ExcelPicture.SetSize(Int32 Percent) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.UriPicGet">
            <summary>设置 ExcelPicture.get_UriPic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.UriPicSetUri">
            <summary>设置 ExcelPicture.set_UriPic(Uri value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.AddNewPictureByteArrayString">
            <summary>设置 ExcelPicture.AddNewPicture(Byte[] img, String relID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.BorderGet">
            <summary>设置 ExcelPicture.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.ContentTypeGet">
            <summary>设置 ExcelPicture.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.ContentTypeSetString">
            <summary>设置 ExcelPicture.set_ContentType(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.DeleteMe">
            <summary>设置 ExcelPicture.DeleteMe() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.FillGet">
            <summary>设置 ExcelPicture.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.HypRelGet">
            <summary>设置 ExcelPicture.get_HypRel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.HypRelSetPackageRelationship">
            <summary>设置 ExcelPicture.set_HypRel(PackageRelationship value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.HyperlinkGet">
            <summary>设置 ExcelPicture.get_Hyperlink() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.IdGet">
            <summary>设置 ExcelPicture.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.ImageFormatGet">
            <summary>设置 ExcelPicture.get_ImageFormat() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.ImageFormatSetImageFormat">
            <summary>设置 ExcelPicture.set_ImageFormat(ImageFormat value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.ImageGet">
            <summary>设置 ExcelPicture.get_Image() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.ImageHashGet">
            <summary>设置 ExcelPicture.get_ImageHash() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.ImageHashSetString">
            <summary>设置 ExcelPicture.set_ImageHash(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.ImageSetImage">
            <summary>设置 ExcelPicture.set_Image(Image value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.PicStartXml">
            <summary>设置 ExcelPicture.PicStartXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.RelPicGet">
            <summary>设置 ExcelPicture.get_RelPic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.RelPicSetPackageRelationship">
            <summary>设置 ExcelPicture.set_RelPic(PackageRelationship value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.SavePictureImage">
            <summary>设置 ExcelPicture.SavePicture(Image image) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.SetPosDefaultsImage">
            <summary>设置 ExcelPicture.SetPosDefaults(Image image) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.SetSizeInt32">
            <summary>设置 ExcelPicture.SetSize(Int32 Percent) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.UriPicGet">
            <summary>设置 ExcelPicture.get_UriPic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelPicture.AllInstances.UriPicSetUri">
            <summary>设置 ExcelPicture.set_UriPic(Uri value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelShape">
            <summary>OfficeOpenXml.Drawing.ExcelShape 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.#ctor(OfficeOpenXml.Drawing.ExcelShape)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.BorderGet">
            <summary>设置 ExcelShape.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.ConstructorExcelDrawingsXmlNode">
            <summary>设置 ExcelShape.ExcelShape(ExcelDrawings drawings, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.ConstructorExcelDrawingsXmlNodeeShapeStyle">
            <summary>设置 ExcelShape.ExcelShape(ExcelDrawings drawings, XmlNode node, eShapeStyle style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.FillGet">
            <summary>设置 ExcelShape.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.FontGet">
            <summary>设置 ExcelShape.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.IdGet">
            <summary>设置 ExcelShape.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.IndentGet">
            <summary>设置 ExcelShape.get_Indent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.IndentSetInt32">
            <summary>设置 ExcelShape.set_Indent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.LockTextGet">
            <summary>设置 ExcelShape.get_LockText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.LockTextSetBoolean">
            <summary>设置 ExcelShape.set_LockText(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.RichTextGet">
            <summary>设置 ExcelShape.get_RichText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.ShapeStartXml">
            <summary>设置 ExcelShape.ShapeStartXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.StyleGet">
            <summary>设置 ExcelShape.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.StyleSeteShapeStyle">
            <summary>设置 ExcelShape.set_Style(eShapeStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.TextAlignmentGet">
            <summary>设置 ExcelShape.get_TextAlignment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.TextAlignmentSeteTextAlignment">
            <summary>设置 ExcelShape.set_TextAlignment(eTextAlignment value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.TextAnchoringControlGet">
            <summary>设置 ExcelShape.get_TextAnchoringControl() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.TextAnchoringControlSetBoolean">
            <summary>设置 ExcelShape.set_TextAnchoringControl(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.TextAnchoringGet">
            <summary>设置 ExcelShape.get_TextAnchoring() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.TextAnchoringSeteTextAnchoringType">
            <summary>设置 ExcelShape.set_TextAnchoring(eTextAnchoringType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.TextGet">
            <summary>设置 ExcelShape.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.TextSetString">
            <summary>设置 ExcelShape.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.TextVerticalGet">
            <summary>设置 ExcelShape.get_TextVertical() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.TextVerticalSeteTextVerticalType">
            <summary>设置 ExcelShape.set_TextVertical(eTextVerticalType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.init">
            <summary>设置 ExcelShape.init() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.BorderGet">
            <summary>设置 ExcelShape.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.FillGet">
            <summary>设置 ExcelShape.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.FontGet">
            <summary>设置 ExcelShape.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.IdGet">
            <summary>设置 ExcelShape.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.IndentGet">
            <summary>设置 ExcelShape.get_Indent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.IndentSetInt32">
            <summary>设置 ExcelShape.set_Indent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.LockTextGet">
            <summary>设置 ExcelShape.get_LockText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.LockTextSetBoolean">
            <summary>设置 ExcelShape.set_LockText(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.RichTextGet">
            <summary>设置 ExcelShape.get_RichText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.ShapeStartXml">
            <summary>设置 ExcelShape.ShapeStartXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.StyleGet">
            <summary>设置 ExcelShape.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.StyleSeteShapeStyle">
            <summary>设置 ExcelShape.set_Style(eShapeStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.TextAlignmentGet">
            <summary>设置 ExcelShape.get_TextAlignment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.TextAlignmentSeteTextAlignment">
            <summary>设置 ExcelShape.set_TextAlignment(eTextAlignment value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.TextAnchoringControlGet">
            <summary>设置 ExcelShape.get_TextAnchoringControl() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.TextAnchoringControlSetBoolean">
            <summary>设置 ExcelShape.set_TextAnchoringControl(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.TextAnchoringGet">
            <summary>设置 ExcelShape.get_TextAnchoring() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.TextAnchoringSeteTextAnchoringType">
            <summary>设置 ExcelShape.set_TextAnchoring(eTextAnchoringType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.TextGet">
            <summary>设置 ExcelShape.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.TextSetString">
            <summary>设置 ExcelShape.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.TextVerticalGet">
            <summary>设置 ExcelShape.get_TextVertical() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.TextVerticalSeteTextVerticalType">
            <summary>设置 ExcelShape.set_TextVertical(eTextVerticalType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelShape.AllInstances.init">
            <summary>设置 ExcelShape.init() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D">
            <summary>OfficeOpenXml.Drawing.ExcelView3D 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.#ctor(OfficeOpenXml.Drawing.ExcelView3D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelView3D.ExcelView3D(XmlNamespaceManager ns, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.DepthPercentGet">
            <summary>设置 ExcelView3D.get_DepthPercent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.DepthPercentSetInt32">
            <summary>设置 ExcelView3D.set_DepthPercent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.HeightPercentGet">
            <summary>设置 ExcelView3D.get_HeightPercent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.HeightPercentSetInt32">
            <summary>设置 ExcelView3D.set_HeightPercent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.PerspectiveGet">
            <summary>设置 ExcelView3D.get_Perspective() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.PerspectiveSetDecimal">
            <summary>设置 ExcelView3D.set_Perspective(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.RightAngleAxesGet">
            <summary>设置 ExcelView3D.get_RightAngleAxes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.RightAngleAxesSetBoolean">
            <summary>设置 ExcelView3D.set_RightAngleAxes(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.RotXGet">
            <summary>设置 ExcelView3D.get_RotX() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.RotXSetDecimal">
            <summary>设置 ExcelView3D.set_RotX(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.RotYGet">
            <summary>设置 ExcelView3D.get_RotY() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.RotYSetDecimal">
            <summary>设置 ExcelView3D.set_RotY(Decimal value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.AllInstances.DepthPercentGet">
            <summary>设置 ExcelView3D.get_DepthPercent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.AllInstances.DepthPercentSetInt32">
            <summary>设置 ExcelView3D.set_DepthPercent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.AllInstances.HeightPercentGet">
            <summary>设置 ExcelView3D.get_HeightPercent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.AllInstances.HeightPercentSetInt32">
            <summary>设置 ExcelView3D.set_HeightPercent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.AllInstances.PerspectiveGet">
            <summary>设置 ExcelView3D.get_Perspective() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.AllInstances.PerspectiveSetDecimal">
            <summary>设置 ExcelView3D.set_Perspective(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.AllInstances.RightAngleAxesGet">
            <summary>设置 ExcelView3D.get_RightAngleAxes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.AllInstances.RightAngleAxesSetBoolean">
            <summary>设置 ExcelView3D.set_RightAngleAxes(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.AllInstances.RotXGet">
            <summary>设置 ExcelView3D.get_RotX() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.AllInstances.RotXSetDecimal">
            <summary>设置 ExcelView3D.set_RotX(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.AllInstances.RotYGet">
            <summary>设置 ExcelView3D.get_RotY() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Fakes.ShimExcelView3D.AllInstances.RotYSetDecimal">
            <summary>设置 ExcelView3D.set_RotY(Decimal value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase">
            <summary>OfficeOpenXml.Drawing.Vml.ExcelVmlDrawingBase 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.#ctor(OfficeOpenXml.Drawing.Vml.ExcelVmlDrawingBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.ConstructorXmlNodeXmlNamespaceManager">
            <summary>设置 ExcelVmlDrawingBase.ExcelVmlDrawingBase(XmlNode topNode, XmlNamespaceManager ns) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.GetStyleStringStringStringOut">
            <summary>设置 ExcelVmlDrawingBase.GetStyle(String style, String key, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.IdGet">
            <summary>设置 ExcelVmlDrawingBase.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.IdSetString">
            <summary>设置 ExcelVmlDrawingBase.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.SetStyleStringStringString">
            <summary>设置 ExcelVmlDrawingBase.SetStyle(String style, String key, String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.AllInstances.GetStyleStringStringStringOut">
            <summary>设置 ExcelVmlDrawingBase.GetStyle(String style, String key, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.AllInstances.IdGet">
            <summary>设置 ExcelVmlDrawingBase.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.AllInstances.IdSetString">
            <summary>设置 ExcelVmlDrawingBase.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBase.AllInstances.SetStyleStringStringString">
            <summary>设置 ExcelVmlDrawingBase.SetStyle(String style, String key, String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection">
            <summary>OfficeOpenXml.Drawing.Vml.ExcelVmlDrawingBaseCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.#ctor(OfficeOpenXml.Drawing.Vml.ExcelVmlDrawingBaseCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.ConstructorExcelPackageExcelWorksheetUri">
            <summary>设置 ExcelVmlDrawingBaseCollection.ExcelVmlDrawingBaseCollection(ExcelPackage pck, ExcelWorksheet ws, Uri uri) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.NameSpaceManagerGet">
            <summary>设置 ExcelVmlDrawingBaseCollection.get_NameSpaceManager() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.NameSpaceManagerSetXmlNamespaceManager">
            <summary>设置 ExcelVmlDrawingBaseCollection.set_NameSpaceManager(XmlNamespaceManager value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.PartGet">
            <summary>设置 ExcelVmlDrawingBaseCollection.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.PartSetPackagePart">
            <summary>设置 ExcelVmlDrawingBaseCollection.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.RelIdGet">
            <summary>设置 ExcelVmlDrawingBaseCollection.get_RelId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.RelIdSetString">
            <summary>设置 ExcelVmlDrawingBaseCollection.set_RelId(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.UriGet">
            <summary>设置 ExcelVmlDrawingBaseCollection.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.UriSetUri">
            <summary>设置 ExcelVmlDrawingBaseCollection.set_Uri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.VmlDrawingXmlGet">
            <summary>设置 ExcelVmlDrawingBaseCollection.get_VmlDrawingXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.VmlDrawingXmlSetXmlDocument">
            <summary>设置 ExcelVmlDrawingBaseCollection.set_VmlDrawingXml(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.AllInstances.NameSpaceManagerGet">
            <summary>设置 ExcelVmlDrawingBaseCollection.get_NameSpaceManager() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.AllInstances.NameSpaceManagerSetXmlNamespaceManager">
            <summary>设置 ExcelVmlDrawingBaseCollection.set_NameSpaceManager(XmlNamespaceManager value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.AllInstances.PartGet">
            <summary>设置 ExcelVmlDrawingBaseCollection.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.AllInstances.PartSetPackagePart">
            <summary>设置 ExcelVmlDrawingBaseCollection.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.AllInstances.RelIdGet">
            <summary>设置 ExcelVmlDrawingBaseCollection.get_RelId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.AllInstances.RelIdSetString">
            <summary>设置 ExcelVmlDrawingBaseCollection.set_RelId(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.AllInstances.UriGet">
            <summary>设置 ExcelVmlDrawingBaseCollection.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.AllInstances.UriSetUri">
            <summary>设置 ExcelVmlDrawingBaseCollection.set_Uri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.AllInstances.VmlDrawingXmlGet">
            <summary>设置 ExcelVmlDrawingBaseCollection.get_VmlDrawingXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingBaseCollection.AllInstances.VmlDrawingXmlSetXmlDocument">
            <summary>设置 ExcelVmlDrawingBaseCollection.set_VmlDrawingXml(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment">
            <summary>OfficeOpenXml.Drawing.Vml.ExcelVmlDrawingComment 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.#ctor(OfficeOpenXml.Drawing.Vml.ExcelVmlDrawingComment)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AutoFitGet">
            <summary>设置 ExcelVmlDrawingComment.get_AutoFit() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AutoFitSetBoolean">
            <summary>设置 ExcelVmlDrawingComment.set_AutoFit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.BackgroundColorGet">
            <summary>设置 ExcelVmlDrawingComment.get_BackgroundColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.BackgroundColorSetColor">
            <summary>设置 ExcelVmlDrawingComment.set_BackgroundColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.ConstructorXmlNodeExcelRangeBaseXmlNamespaceManager">
            <summary>设置 ExcelVmlDrawingComment.ExcelVmlDrawingComment(XmlNode topNode, ExcelRangeBase range, XmlNamespaceManager ns) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.FromGet">
            <summary>设置 ExcelVmlDrawingComment.get_From() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.HorizontalAlignmentGet">
            <summary>设置 ExcelVmlDrawingComment.get_HorizontalAlignment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.HorizontalAlignmentSeteTextAlignHorizontalVml">
            <summary>设置 ExcelVmlDrawingComment.set_HorizontalAlignment(eTextAlignHorizontalVml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.LineColorGet">
            <summary>设置 ExcelVmlDrawingComment.get_LineColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.LineColorSetColor">
            <summary>设置 ExcelVmlDrawingComment.set_LineColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.LineStyleGet">
            <summary>设置 ExcelVmlDrawingComment.get_LineStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.LineStyleSeteLineStyleVml">
            <summary>设置 ExcelVmlDrawingComment.set_LineStyle(eLineStyleVml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.LineWidthGet">
            <summary>设置 ExcelVmlDrawingComment.get_LineWidth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.LineWidthSetSingle">
            <summary>设置 ExcelVmlDrawingComment.set_LineWidth(Single value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.LockTextGet">
            <summary>设置 ExcelVmlDrawingComment.get_LockText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.LockTextSetBoolean">
            <summary>设置 ExcelVmlDrawingComment.set_LockText(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.LockedGet">
            <summary>设置 ExcelVmlDrawingComment.get_Locked() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.LockedSetBoolean">
            <summary>设置 ExcelVmlDrawingComment.set_Locked(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.RangeGet">
            <summary>设置 ExcelVmlDrawingComment.get_Range() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.RangeIDOfficeOpenXmlIRangeIDget">
            <summary>设置 ExcelVmlDrawingComment.OfficeOpenXml.IRangeID.get_RangeID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.RangeIDOfficeOpenXmlIRangeIDsetUInt64">
            <summary>设置 ExcelVmlDrawingComment.OfficeOpenXml.IRangeID.set_RangeID(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.RangeSetExcelRangeBase">
            <summary>设置 ExcelVmlDrawingComment.set_Range(ExcelRangeBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.StyleGet">
            <summary>设置 ExcelVmlDrawingComment.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.StyleSetString">
            <summary>设置 ExcelVmlDrawingComment.set_Style(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.ToGet">
            <summary>设置 ExcelVmlDrawingComment.get_To() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.VerticalAlignmentGet">
            <summary>设置 ExcelVmlDrawingComment.get_VerticalAlignment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.VerticalAlignmentSeteTextAlignVerticalVml">
            <summary>设置 ExcelVmlDrawingComment.set_VerticalAlignment(eTextAlignVerticalVml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.VisibleGet">
            <summary>设置 ExcelVmlDrawingComment.get_Visible() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.VisibleSetBoolean">
            <summary>设置 ExcelVmlDrawingComment.set_Visible(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.AutoFitGet">
            <summary>设置 ExcelVmlDrawingComment.get_AutoFit() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.AutoFitSetBoolean">
            <summary>设置 ExcelVmlDrawingComment.set_AutoFit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.BackgroundColorGet">
            <summary>设置 ExcelVmlDrawingComment.get_BackgroundColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.BackgroundColorSetColor">
            <summary>设置 ExcelVmlDrawingComment.set_BackgroundColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.FromGet">
            <summary>设置 ExcelVmlDrawingComment.get_From() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.HorizontalAlignmentGet">
            <summary>设置 ExcelVmlDrawingComment.get_HorizontalAlignment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.HorizontalAlignmentSeteTextAlignHorizontalVml">
            <summary>设置 ExcelVmlDrawingComment.set_HorizontalAlignment(eTextAlignHorizontalVml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.LineColorGet">
            <summary>设置 ExcelVmlDrawingComment.get_LineColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.LineColorSetColor">
            <summary>设置 ExcelVmlDrawingComment.set_LineColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.LineStyleGet">
            <summary>设置 ExcelVmlDrawingComment.get_LineStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.LineStyleSeteLineStyleVml">
            <summary>设置 ExcelVmlDrawingComment.set_LineStyle(eLineStyleVml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.LineWidthGet">
            <summary>设置 ExcelVmlDrawingComment.get_LineWidth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.LineWidthSetSingle">
            <summary>设置 ExcelVmlDrawingComment.set_LineWidth(Single value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.LockTextGet">
            <summary>设置 ExcelVmlDrawingComment.get_LockText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.LockTextSetBoolean">
            <summary>设置 ExcelVmlDrawingComment.set_LockText(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.LockedGet">
            <summary>设置 ExcelVmlDrawingComment.get_Locked() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.LockedSetBoolean">
            <summary>设置 ExcelVmlDrawingComment.set_Locked(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.RangeGet">
            <summary>设置 ExcelVmlDrawingComment.get_Range() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.RangeIDOfficeOpenXmlIRangeIDget">
            <summary>设置 ExcelVmlDrawingComment.OfficeOpenXml.IRangeID.get_RangeID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.RangeIDOfficeOpenXmlIRangeIDsetUInt64">
            <summary>设置 ExcelVmlDrawingComment.OfficeOpenXml.IRangeID.set_RangeID(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.RangeSetExcelRangeBase">
            <summary>设置 ExcelVmlDrawingComment.set_Range(ExcelRangeBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.StyleGet">
            <summary>设置 ExcelVmlDrawingComment.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.StyleSetString">
            <summary>设置 ExcelVmlDrawingComment.set_Style(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.ToGet">
            <summary>设置 ExcelVmlDrawingComment.get_To() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.VerticalAlignmentGet">
            <summary>设置 ExcelVmlDrawingComment.get_VerticalAlignment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.VerticalAlignmentSeteTextAlignVerticalVml">
            <summary>设置 ExcelVmlDrawingComment.set_VerticalAlignment(eTextAlignVerticalVml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.VisibleGet">
            <summary>设置 ExcelVmlDrawingComment.get_Visible() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingComment.AllInstances.VisibleSetBoolean">
            <summary>设置 ExcelVmlDrawingComment.set_Visible(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture">
            <summary>OfficeOpenXml.Drawing.Vml.ExcelVmlDrawingPicture 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.#ctor(OfficeOpenXml.Drawing.Vml.ExcelVmlDrawingPicture)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.BiLevelGet">
            <summary>设置 ExcelVmlDrawingPicture.get_BiLevel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.BiLevelSetBoolean">
            <summary>设置 ExcelVmlDrawingPicture.set_BiLevel(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.BlackLevelGet">
            <summary>设置 ExcelVmlDrawingPicture.get_BlackLevel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.BlackLevelSetDouble">
            <summary>设置 ExcelVmlDrawingPicture.set_BlackLevel(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.ConstructorXmlNodeXmlNamespaceManagerExcelWorksheet">
            <summary>设置 ExcelVmlDrawingPicture.ExcelVmlDrawingPicture(XmlNode topNode, XmlNamespaceManager ns, ExcelWorksheet ws) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.GainGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Gain() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.GainSetDouble">
            <summary>设置 ExcelVmlDrawingPicture.set_Gain(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.GammaGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Gamma() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.GammaSetDouble">
            <summary>设置 ExcelVmlDrawingPicture.set_Gamma(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.GetFracDTStringDouble">
            <summary>设置 ExcelVmlDrawingPicture.GetFracDT(String v, Double def) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.GetStylePropString">
            <summary>设置 ExcelVmlDrawingPicture.GetStyleProp(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.GrayScaleGet">
            <summary>设置 ExcelVmlDrawingPicture.get_GrayScale() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.GrayScaleSetBoolean">
            <summary>设置 ExcelVmlDrawingPicture.set_GrayScale(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.HeightGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Height() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.HeightSetDouble">
            <summary>设置 ExcelVmlDrawingPicture.set_Height(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.ImageGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Image() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.ImageUriGet">
            <summary>设置 ExcelVmlDrawingPicture.get_ImageUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.ImageUriSetUri">
            <summary>设置 ExcelVmlDrawingPicture.set_ImageUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.LeftGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Left() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.LeftSetDouble">
            <summary>设置 ExcelVmlDrawingPicture.set_Left(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.PositionGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Position() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.RelIdGet">
            <summary>设置 ExcelVmlDrawingPicture.get_RelId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.RelIdSetString">
            <summary>设置 ExcelVmlDrawingPicture.set_RelId(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.SetStylePropStringString">
            <summary>设置 ExcelVmlDrawingPicture.SetStyleProp(String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.TitleGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Title() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.TitleSetString">
            <summary>设置 ExcelVmlDrawingPicture.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.TopGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Top() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.TopSetDouble">
            <summary>设置 ExcelVmlDrawingPicture.set_Top(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.WidthGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Width() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.WidthSetDouble">
            <summary>设置 ExcelVmlDrawingPicture.set_Width(Double value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.BiLevelGet">
            <summary>设置 ExcelVmlDrawingPicture.get_BiLevel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.BiLevelSetBoolean">
            <summary>设置 ExcelVmlDrawingPicture.set_BiLevel(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.BlackLevelGet">
            <summary>设置 ExcelVmlDrawingPicture.get_BlackLevel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.BlackLevelSetDouble">
            <summary>设置 ExcelVmlDrawingPicture.set_BlackLevel(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.GainGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Gain() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.GainSetDouble">
            <summary>设置 ExcelVmlDrawingPicture.set_Gain(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.GammaGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Gamma() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.GammaSetDouble">
            <summary>设置 ExcelVmlDrawingPicture.set_Gamma(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.GetFracDTStringDouble">
            <summary>设置 ExcelVmlDrawingPicture.GetFracDT(String v, Double def) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.GetStylePropString">
            <summary>设置 ExcelVmlDrawingPicture.GetStyleProp(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.GrayScaleGet">
            <summary>设置 ExcelVmlDrawingPicture.get_GrayScale() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.GrayScaleSetBoolean">
            <summary>设置 ExcelVmlDrawingPicture.set_GrayScale(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.HeightGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Height() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.HeightSetDouble">
            <summary>设置 ExcelVmlDrawingPicture.set_Height(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.ImageGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Image() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.ImageUriGet">
            <summary>设置 ExcelVmlDrawingPicture.get_ImageUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.ImageUriSetUri">
            <summary>设置 ExcelVmlDrawingPicture.set_ImageUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.LeftGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Left() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.LeftSetDouble">
            <summary>设置 ExcelVmlDrawingPicture.set_Left(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.PositionGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Position() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.RelIdGet">
            <summary>设置 ExcelVmlDrawingPicture.get_RelId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.RelIdSetString">
            <summary>设置 ExcelVmlDrawingPicture.set_RelId(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.SetStylePropStringString">
            <summary>设置 ExcelVmlDrawingPicture.SetStyleProp(String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.TitleGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Title() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.TitleSetString">
            <summary>设置 ExcelVmlDrawingPicture.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.TopGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Top() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.TopSetDouble">
            <summary>设置 ExcelVmlDrawingPicture.set_Top(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.WidthGet">
            <summary>设置 ExcelVmlDrawingPicture.get_Width() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPicture.AllInstances.WidthSetDouble">
            <summary>设置 ExcelVmlDrawingPicture.set_Width(Double value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection">
            <summary>OfficeOpenXml.Drawing.Vml.ExcelVmlDrawingPictureCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.#ctor(OfficeOpenXml.Drawing.Vml.ExcelVmlDrawingPictureCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.AddDrawingsFromXml">
            <summary>设置 ExcelVmlDrawingPictureCollection.AddDrawingsFromXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.AddImageStringUriStringDoubleDouble">
            <summary>设置 ExcelVmlDrawingPictureCollection.AddImage(String id, Uri targeUri, String Name, Double width, Double height) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.AddStringUriStringDoubleDouble">
            <summary>设置 ExcelVmlDrawingPictureCollection.Add(String id, Uri uri, String name, Double width, Double height) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.ConstructorExcelPackageExcelWorksheetUri">
            <summary>设置 ExcelVmlDrawingPictureCollection.ExcelVmlDrawingPictureCollection(ExcelPackage pck, ExcelWorksheet ws, Uri uri) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.CountGet">
            <summary>设置 ExcelVmlDrawingPictureCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.CreateVmlDrawings">
            <summary>设置 ExcelVmlDrawingPictureCollection.CreateVmlDrawings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.GetNewId">
            <summary>设置 ExcelVmlDrawingPictureCollection.GetNewId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.ItemGetInt32">
            <summary>设置 ExcelVmlDrawingPictureCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelVmlDrawingPictureCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.AllInstances.AddDrawingsFromXml">
            <summary>设置 ExcelVmlDrawingPictureCollection.AddDrawingsFromXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.AllInstances.AddImageStringUriStringDoubleDouble">
            <summary>设置 ExcelVmlDrawingPictureCollection.AddImage(String id, Uri targeUri, String Name, Double width, Double height) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.AllInstances.AddStringUriStringDoubleDouble">
            <summary>设置 ExcelVmlDrawingPictureCollection.Add(String id, Uri uri, String name, Double width, Double height) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.AllInstances.CountGet">
            <summary>设置 ExcelVmlDrawingPictureCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.AllInstances.CreateVmlDrawings">
            <summary>设置 ExcelVmlDrawingPictureCollection.CreateVmlDrawings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.AllInstances.GetNewId">
            <summary>设置 ExcelVmlDrawingPictureCollection.GetNewId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.AllInstances.ItemGetInt32">
            <summary>设置 ExcelVmlDrawingPictureCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPictureCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelVmlDrawingPictureCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition">
            <summary>OfficeOpenXml.Drawing.Vml.ExcelVmlDrawingPosition 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.#ctor(OfficeOpenXml.Drawing.Vml.ExcelVmlDrawingPosition)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.ColumnGet">
            <summary>设置 ExcelVmlDrawingPosition.get_Column() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.ColumnOffsetGet">
            <summary>设置 ExcelVmlDrawingPosition.get_ColumnOffset() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.ColumnOffsetSetInt32">
            <summary>设置 ExcelVmlDrawingPosition.set_ColumnOffset(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.ColumnSetInt32">
            <summary>设置 ExcelVmlDrawingPosition.set_Column(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.ConstructorXmlNamespaceManagerXmlNodeInt32">
            <summary>设置 ExcelVmlDrawingPosition.ExcelVmlDrawingPosition(XmlNamespaceManager ns, XmlNode topNode, Int32 startPos) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.GetNumberInt32">
            <summary>设置 ExcelVmlDrawingPosition.GetNumber(Int32 pos) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.RowGet">
            <summary>设置 ExcelVmlDrawingPosition.get_Row() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.RowOffsetGet">
            <summary>设置 ExcelVmlDrawingPosition.get_RowOffset() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.RowOffsetSetInt32">
            <summary>设置 ExcelVmlDrawingPosition.set_RowOffset(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.RowSetInt32">
            <summary>设置 ExcelVmlDrawingPosition.set_Row(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.SetNumberInt32Int32">
            <summary>设置 ExcelVmlDrawingPosition.SetNumber(Int32 pos, Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.AllInstances.ColumnGet">
            <summary>设置 ExcelVmlDrawingPosition.get_Column() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.AllInstances.ColumnOffsetGet">
            <summary>设置 ExcelVmlDrawingPosition.get_ColumnOffset() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.AllInstances.ColumnOffsetSetInt32">
            <summary>设置 ExcelVmlDrawingPosition.set_ColumnOffset(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.AllInstances.ColumnSetInt32">
            <summary>设置 ExcelVmlDrawingPosition.set_Column(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.AllInstances.GetNumberInt32">
            <summary>设置 ExcelVmlDrawingPosition.GetNumber(Int32 pos) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.AllInstances.RowGet">
            <summary>设置 ExcelVmlDrawingPosition.get_Row() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.AllInstances.RowOffsetGet">
            <summary>设置 ExcelVmlDrawingPosition.get_RowOffset() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.AllInstances.RowOffsetSetInt32">
            <summary>设置 ExcelVmlDrawingPosition.set_RowOffset(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.AllInstances.RowSetInt32">
            <summary>设置 ExcelVmlDrawingPosition.set_Row(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Drawing.Vml.Fakes.ShimExcelVmlDrawingPosition.AllInstances.SetNumberInt32Int32">
            <summary>设置 ExcelVmlDrawingPosition.SetNumber(Int32 pos, Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelAddress">
            <summary>OfficeOpenXml.ExcelAddress 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelAddress.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelAddress.#ctor(OfficeOpenXml.ExcelAddress)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelAddress.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelAddress.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddress.AddressGet">
            <summary>设置 ExcelAddress.get_Address() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddress.AddressSetString">
            <summary>设置 ExcelAddress.set_Address(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddress.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddress.Constructor">
            <summary>设置 ExcelAddress.ExcelAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddress.ConstructorInt32Int32Int32Int32">
            <summary>设置 ExcelAddress.ExcelAddress(Int32 fromRow, Int32 fromCol, Int32 toRow, Int32 toColumn) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddress.ConstructorString">
            <summary>设置 ExcelAddress.ExcelAddress(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddress.ConstructorStringString">
            <summary>设置 ExcelAddress.ExcelAddress(String ws, String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddress.ConstructorStringStringBoolean">
            <summary>设置 ExcelAddress.ExcelAddress(String ws, String address, Boolean isName) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelAddress.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddress.AllInstances.AddressGet">
            <summary>设置 ExcelAddress.get_Address() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddress.AllInstances.AddressSetString">
            <summary>设置 ExcelAddress.set_Address(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelAddressBase">
            <summary>OfficeOpenXml.ExcelAddressBase 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelAddressBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelAddressBase.#ctor(OfficeOpenXml.ExcelAddressBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelAddressBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelAddressBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AddColumnInt32Int32">
            <summary>设置 ExcelAddressBase.AddColumn(Int32 col, Int32 cols) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AddRowInt32Int32">
            <summary>设置 ExcelAddressBase.AddRow(Int32 row, Int32 rows) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AddressChangeAddEventHandler">
            <summary>设置 ExcelAddressBase.add_AddressChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AddressChangeRemoveEventHandler">
            <summary>设置 ExcelAddressBase.remove_AddressChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AddressGet">
            <summary>设置 ExcelAddressBase.get_Address() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AddressSpaceSeparatedGet">
            <summary>设置 ExcelAddressBase.get_AddressSpaceSeparated() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AddressesGet">
            <summary>设置 ExcelAddressBase.get_Addresses() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.ChangeAddress">
            <summary>设置 ExcelAddressBase.ChangeAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.Constructor">
            <summary>设置 ExcelAddressBase.ExcelAddressBase() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.ConstructorInt32Int32Int32Int32">
            <summary>设置 ExcelAddressBase.ExcelAddressBase(Int32 fromRow, Int32 fromCol, Int32 toRow, Int32 toColumn) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.ConstructorString">
            <summary>设置 ExcelAddressBase.ExcelAddressBase(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.ConstructorStringBoolean">
            <summary>设置 ExcelAddressBase.ExcelAddressBase(String address, Boolean isName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.DeleteColumnInt32Int32">
            <summary>设置 ExcelAddressBase.DeleteColumn(Int32 col, Int32 cols) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.DeleteRowInt32Int32">
            <summary>设置 ExcelAddressBase.DeleteRow(Int32 row, Int32 rows) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.EndGet">
            <summary>设置 ExcelAddressBase.get_End() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.ExtractAddressString">
            <summary>设置 ExcelAddressBase.ExtractAddress(String fullAddress) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.FirstAddressGet">
            <summary>设置 ExcelAddressBase.get_FirstAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.IsNameGet">
            <summary>设置 ExcelAddressBase.get_IsName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.IsValidNameString">
            <summary>设置 ExcelAddressBase.IsValidName(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.SetAddressString">
            <summary>设置 ExcelAddressBase.SetAddress(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.SetWbWsString">
            <summary>设置 ExcelAddressBase.SetWbWs(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.StartGet">
            <summary>设置 ExcelAddressBase.get_Start() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.ToString">
            <summary>设置 ExcelAddressBase.ToString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.Validate">
            <summary>设置 ExcelAddressBase.Validate() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.WorkSheetGet">
            <summary>设置 ExcelAddressBase.get_WorkSheet() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.AddColumnInt32Int32">
            <summary>设置 ExcelAddressBase.AddColumn(Int32 col, Int32 cols) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.AddRowInt32Int32">
            <summary>设置 ExcelAddressBase.AddRow(Int32 row, Int32 rows) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.AddressChangeAddEventHandler">
            <summary>设置 ExcelAddressBase.add_AddressChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.AddressChangeRemoveEventHandler">
            <summary>设置 ExcelAddressBase.remove_AddressChange(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.AddressGet">
            <summary>设置 ExcelAddressBase.get_Address() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.AddressSpaceSeparatedGet">
            <summary>设置 ExcelAddressBase.get_AddressSpaceSeparated() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.AddressesGet">
            <summary>设置 ExcelAddressBase.get_Addresses() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.ChangeAddress">
            <summary>设置 ExcelAddressBase.ChangeAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.DeleteColumnInt32Int32">
            <summary>设置 ExcelAddressBase.DeleteColumn(Int32 col, Int32 cols) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.DeleteRowInt32Int32">
            <summary>设置 ExcelAddressBase.DeleteRow(Int32 row, Int32 rows) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.EndGet">
            <summary>设置 ExcelAddressBase.get_End() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.ExtractAddressString">
            <summary>设置 ExcelAddressBase.ExtractAddress(String fullAddress) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.FirstAddressGet">
            <summary>设置 ExcelAddressBase.get_FirstAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.IsNameGet">
            <summary>设置 ExcelAddressBase.get_IsName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.SetAddressString">
            <summary>设置 ExcelAddressBase.SetAddress(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.SetWbWsString">
            <summary>设置 ExcelAddressBase.SetWbWs(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.StartGet">
            <summary>设置 ExcelAddressBase.get_Start() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.ToString01">
            <summary>设置 ExcelAddressBase.ToString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.Validate">
            <summary>设置 ExcelAddressBase.Validate() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelAddressBase.AllInstances.WorkSheetGet">
            <summary>设置 ExcelAddressBase.get_WorkSheet() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelBackgroundImage">
            <summary>OfficeOpenXml.ExcelBackgroundImage 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.#ctor(OfficeOpenXml.ExcelBackgroundImage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.ConstructorXmlNamespaceManagerXmlNodeExcelWorksheet">
            <summary>设置 ExcelBackgroundImage.ExcelBackgroundImage(XmlNamespaceManager nsm, XmlNode topNode, ExcelWorksheet workSheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.DeletePrevImage">
            <summary>设置 ExcelBackgroundImage.DeletePrevImage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.ImageGet">
            <summary>设置 ExcelBackgroundImage.get_Image() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.ImageSetImage">
            <summary>设置 ExcelBackgroundImage.set_Image(Image value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.SetFromFileFileInfo">
            <summary>设置 ExcelBackgroundImage.SetFromFile(FileInfo PictureFile) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.AllInstances.DeletePrevImage">
            <summary>设置 ExcelBackgroundImage.DeletePrevImage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.AllInstances.ImageGet">
            <summary>设置 ExcelBackgroundImage.get_Image() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.AllInstances.ImageSetImage">
            <summary>设置 ExcelBackgroundImage.set_Image(Image value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelBackgroundImage.AllInstances.SetFromFileFileInfo">
            <summary>设置 ExcelBackgroundImage.SetFromFile(FileInfo PictureFile) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelCellAddress">
            <summary>OfficeOpenXml.ExcelCellAddress 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelCellAddress.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelCellAddress.#ctor(OfficeOpenXml.ExcelCellAddress)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelCellAddress.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelCellAddress.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.AddressGet">
            <summary>设置 ExcelCellAddress.get_Address() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.AddressSetString">
            <summary>设置 ExcelCellAddress.set_Address(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.ColumnGet">
            <summary>设置 ExcelCellAddress.get_Column() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.ColumnSetInt32">
            <summary>设置 ExcelCellAddress.set_Column(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.Constructor">
            <summary>设置 ExcelCellAddress.ExcelCellAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.ConstructorInt32Int32">
            <summary>设置 ExcelCellAddress.ExcelCellAddress(Int32 row, Int32 column) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.ConstructorString">
            <summary>设置 ExcelCellAddress.ExcelCellAddress(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.IsRefGet">
            <summary>设置 ExcelCellAddress.get_IsRef() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.RowGet">
            <summary>设置 ExcelCellAddress.get_Row() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.RowSetInt32">
            <summary>设置 ExcelCellAddress.set_Row(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelCellAddress.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.AllInstances.AddressGet">
            <summary>设置 ExcelCellAddress.get_Address() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.AllInstances.AddressSetString">
            <summary>设置 ExcelCellAddress.set_Address(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.AllInstances.ColumnGet">
            <summary>设置 ExcelCellAddress.get_Column() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.AllInstances.ColumnSetInt32">
            <summary>设置 ExcelCellAddress.set_Column(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.AllInstances.IsRefGet">
            <summary>设置 ExcelCellAddress.get_IsRef() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.AllInstances.RowGet">
            <summary>设置 ExcelCellAddress.get_Row() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellAddress.AllInstances.RowSetInt32">
            <summary>设置 ExcelCellAddress.set_Row(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelCellBase">
            <summary>OfficeOpenXml.ExcelCellBase 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelCellBase.#ctor(OfficeOpenXml.ExcelCellBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelCellBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelCellBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.AddToRowColumnTranslatorStringInt32Int32Int32Int32">
            <summary>设置 ExcelCellBase.AddToRowColumnTranslator(String Address, Int32 row, Int32 col, Int32 rowIncr, Int32 colIncr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.Constructor">
            <summary>设置 ExcelCellBase.ExcelCellBase() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.GetAddressInt32BooleanInt32Boolean">
            <summary>设置 ExcelCellBase.GetAddress(Int32 Row, Boolean AbsoluteRow, Int32 Column, Boolean AbsoluteCol) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.GetAddressInt32Int32">
            <summary>设置 ExcelCellBase.GetAddress(Int32 Row, Int32 Column) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.GetAddressInt32Int32Boolean">
            <summary>设置 ExcelCellBase.GetAddress(Int32 Row, Int32 Column, Boolean Absolute) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.GetAddressInt32Int32Int32Int32">
            <summary>设置 ExcelCellBase.GetAddress(Int32 FromRow, Int32 FromColumn, Int32 ToRow, Int32 ToColumn) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.GetAddressInt32Int32Int32Int32Boolean">
            <summary>设置 ExcelCellBase.GetAddress(Int32 FromRow, Int32 FromColumn, Int32 ToRow, Int32 ToColumn, Boolean Absolute) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.GetCellIDInt32Int32Int32">
            <summary>设置 ExcelCellBase.GetCellID(Int32 SheetID, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.GetColumnLetterInt32">
            <summary>设置 ExcelCellBase.GetColumnLetter(Int32 iColumnNumber) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.GetFullAddressStringString">
            <summary>设置 ExcelCellBase.GetFullAddress(String worksheetName, String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.GetFullAddressStringStringBoolean">
            <summary>设置 ExcelCellBase.GetFullAddress(String worksheetName, String address, Boolean fullRowCol) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.GetRCFmtInt32">
            <summary>设置 ExcelCellBase.GetRCFmt(Int32 v) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.GetRCStringInt32BooleanOut">
            <summary>设置 ExcelCellBase.GetRC(String value, Int32 OffsetValue, Boolean&amp; fixedAddr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.GetRowColFromAddressStringInt32OutInt32Out">
            <summary>设置 ExcelCellBase.GetRowColFromAddress(String CellAddress, Int32&amp; Row, Int32&amp; Column) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.GetRowColFromAddressStringInt32OutInt32OutInt32OutInt32Out">
            <summary>设置 ExcelCellBase.GetRowColFromAddress(String CellAddress, Int32&amp; FromRow, Int32&amp; FromColumn, Int32&amp; ToRow, Int32&amp; ToColumn) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.GetRowColStringInt32OutInt32OutBoolean">
            <summary>设置 ExcelCellBase.GetRowCol(String address, Int32&amp; row, Int32&amp; col, Boolean throwException) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.IsValidCellAddressString">
            <summary>设置 ExcelCellBase.IsValidCellAddress(String cellAddress) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.SplitCellIDUInt64Int32OutInt32OutInt32Out">
            <summary>设置 ExcelCellBase.SplitCellID(UInt64 cellID, Int32&amp; sheet, Int32&amp; row, Int32&amp; col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.ToAbsStringInt32Int32Int32Int32">
            <summary>设置 ExcelCellBase.ToAbs(String part, Int32 row, Int32 col, Int32 rowIncr, Int32 colIncr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.ToR1C1StringInt32Int32Int32Int32">
            <summary>设置 ExcelCellBase.ToR1C1(String part, Int32 row, Int32 col, Int32 rowIncr, Int32 colIncr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.TranslateFromR1C1StringInt32Int32">
            <summary>设置 ExcelCellBase.TranslateFromR1C1(String value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.TranslateToR1C1StringInt32Int32">
            <summary>设置 ExcelCellBase.TranslateToR1C1(String value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCellBase.UpdateFormulaReferencesStringInt32Int32Int32Int32">
            <summary>设置 ExcelCellBase.UpdateFormulaReferences(String Formula, Int32 rowIncrement, Int32 colIncrement, Int32 afterRow, Int32 afterColumn) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelCellBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelColumn">
            <summary>OfficeOpenXml.ExcelColumn 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelColumn.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelColumn.#ctor(OfficeOpenXml.ExcelColumn)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelColumn.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelColumn.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AutoFit">
            <summary>设置 ExcelColumn.AutoFit() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AutoFitDouble">
            <summary>设置 ExcelColumn.AutoFit(Double MinimumWidth) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AutoFitDoubleDouble">
            <summary>设置 ExcelColumn.AutoFit(Double MinimumWidth, Double MaximumWidth) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.BestFitGet">
            <summary>设置 ExcelColumn.get_BestFit() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.BestFitSetBoolean">
            <summary>设置 ExcelColumn.set_BestFit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.CloneExcelWorksheet">
            <summary>设置 ExcelColumn.Clone(ExcelWorksheet added) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.CollapsedGet">
            <summary>设置 ExcelColumn.get_Collapsed() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.CollapsedSetBoolean">
            <summary>设置 ExcelColumn.set_Collapsed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.ColumnIDGet">
            <summary>设置 ExcelColumn.get_ColumnID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.ColumnMaxGet">
            <summary>设置 ExcelColumn.get_ColumnMax() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.ColumnMaxSetInt32">
            <summary>设置 ExcelColumn.set_ColumnMax(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.ColumnMinGet">
            <summary>设置 ExcelColumn.get_ColumnMin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.ConstructorExcelWorksheetInt32">
            <summary>设置 ExcelColumn.ExcelColumn(ExcelWorksheet Worksheet, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.GetColumnIDInt32Int32">
            <summary>设置 ExcelColumn.GetColumnID(Int32 sheetID, Int32 column) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.HiddenGet">
            <summary>设置 ExcelColumn.get_Hidden() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.HiddenSetBoolean">
            <summary>设置 ExcelColumn.set_Hidden(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.OutlineLevelGet">
            <summary>设置 ExcelColumn.get_OutlineLevel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.OutlineLevelSetInt32">
            <summary>设置 ExcelColumn.set_OutlineLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.PageBreakGet">
            <summary>设置 ExcelColumn.get_PageBreak() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.PageBreakSetBoolean">
            <summary>设置 ExcelColumn.set_PageBreak(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.PhoneticGet">
            <summary>设置 ExcelColumn.get_Phonetic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.PhoneticSetBoolean">
            <summary>设置 ExcelColumn.set_Phonetic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.RangeIDOfficeOpenXmlIRangeIDget">
            <summary>设置 ExcelColumn.OfficeOpenXml.IRangeID.get_RangeID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.RangeIDOfficeOpenXmlIRangeIDsetUInt64">
            <summary>设置 ExcelColumn.OfficeOpenXml.IRangeID.set_RangeID(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.StyleGet">
            <summary>设置 ExcelColumn.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.StyleIDGet">
            <summary>设置 ExcelColumn.get_StyleID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.StyleIDSetInt32">
            <summary>设置 ExcelColumn.set_StyleID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.StyleNameGet">
            <summary>设置 ExcelColumn.get_StyleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.StyleNameSetString">
            <summary>设置 ExcelColumn.set_StyleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.ToString">
            <summary>设置 ExcelColumn.ToString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.VisualWidthGet">
            <summary>设置 ExcelColumn.get_VisualWidth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.WidthGet">
            <summary>设置 ExcelColumn.get_Width() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.WidthSetDouble">
            <summary>设置 ExcelColumn.set_Width(Double value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.AutoFit">
            <summary>设置 ExcelColumn.AutoFit() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.AutoFitDouble">
            <summary>设置 ExcelColumn.AutoFit(Double MinimumWidth) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.AutoFitDoubleDouble">
            <summary>设置 ExcelColumn.AutoFit(Double MinimumWidth, Double MaximumWidth) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.BestFitGet">
            <summary>设置 ExcelColumn.get_BestFit() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.BestFitSetBoolean">
            <summary>设置 ExcelColumn.set_BestFit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.CloneExcelWorksheet">
            <summary>设置 ExcelColumn.Clone(ExcelWorksheet added) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.CollapsedGet">
            <summary>设置 ExcelColumn.get_Collapsed() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.CollapsedSetBoolean">
            <summary>设置 ExcelColumn.set_Collapsed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.ColumnIDGet">
            <summary>设置 ExcelColumn.get_ColumnID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.ColumnMaxGet">
            <summary>设置 ExcelColumn.get_ColumnMax() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.ColumnMaxSetInt32">
            <summary>设置 ExcelColumn.set_ColumnMax(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.ColumnMinGet">
            <summary>设置 ExcelColumn.get_ColumnMin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.HiddenGet">
            <summary>设置 ExcelColumn.get_Hidden() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.HiddenSetBoolean">
            <summary>设置 ExcelColumn.set_Hidden(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.OutlineLevelGet">
            <summary>设置 ExcelColumn.get_OutlineLevel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.OutlineLevelSetInt32">
            <summary>设置 ExcelColumn.set_OutlineLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.PageBreakGet">
            <summary>设置 ExcelColumn.get_PageBreak() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.PageBreakSetBoolean">
            <summary>设置 ExcelColumn.set_PageBreak(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.PhoneticGet">
            <summary>设置 ExcelColumn.get_Phonetic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.PhoneticSetBoolean">
            <summary>设置 ExcelColumn.set_Phonetic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.RangeIDOfficeOpenXmlIRangeIDget">
            <summary>设置 ExcelColumn.OfficeOpenXml.IRangeID.get_RangeID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.RangeIDOfficeOpenXmlIRangeIDsetUInt64">
            <summary>设置 ExcelColumn.OfficeOpenXml.IRangeID.set_RangeID(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.StyleGet">
            <summary>设置 ExcelColumn.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.StyleIDGet">
            <summary>设置 ExcelColumn.get_StyleID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.StyleIDSetInt32">
            <summary>设置 ExcelColumn.set_StyleID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.StyleNameGet">
            <summary>设置 ExcelColumn.get_StyleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.StyleNameSetString">
            <summary>设置 ExcelColumn.set_StyleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.ToString01">
            <summary>设置 ExcelColumn.ToString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.VisualWidthGet">
            <summary>设置 ExcelColumn.get_VisualWidth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.WidthGet">
            <summary>设置 ExcelColumn.get_Width() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelColumn.AllInstances.WidthSetDouble">
            <summary>设置 ExcelColumn.set_Width(Double value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelComment">
            <summary>OfficeOpenXml.ExcelComment 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelComment.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelComment.#ctor(OfficeOpenXml.ExcelComment)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelComment.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelComment.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.AuthorGet">
            <summary>设置 ExcelComment.get_Author() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.AuthorSetString">
            <summary>设置 ExcelComment.set_Author(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.ConstructorXmlNamespaceManagerXmlNodeExcelRangeBase">
            <summary>设置 ExcelComment.ExcelComment(XmlNamespaceManager ns, XmlNode commentTopNode, ExcelRangeBase cell) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.FontGet">
            <summary>设置 ExcelComment.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.GetAuthorString">
            <summary>设置 ExcelComment.GetAuthor(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.RichTextGet">
            <summary>设置 ExcelComment.get_RichText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.RichTextSetExcelRichTextCollection">
            <summary>设置 ExcelComment.set_RichText(ExcelRichTextCollection value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.TextGet">
            <summary>设置 ExcelComment.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.TextSetString">
            <summary>设置 ExcelComment.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelComment.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.AllInstances.AuthorGet">
            <summary>设置 ExcelComment.get_Author() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.AllInstances.AuthorSetString">
            <summary>设置 ExcelComment.set_Author(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.AllInstances.FontGet">
            <summary>设置 ExcelComment.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.AllInstances.GetAuthorString">
            <summary>设置 ExcelComment.GetAuthor(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.AllInstances.RichTextGet">
            <summary>设置 ExcelComment.get_RichText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.AllInstances.RichTextSetExcelRichTextCollection">
            <summary>设置 ExcelComment.set_RichText(ExcelRichTextCollection value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.AllInstances.TextGet">
            <summary>设置 ExcelComment.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelComment.AllInstances.TextSetString">
            <summary>设置 ExcelComment.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelCommentCollection">
            <summary>OfficeOpenXml.ExcelCommentCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelCommentCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelCommentCollection.#ctor(OfficeOpenXml.ExcelCommentCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelCommentCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelCommentCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelCommentCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AddCommentsFromXml">
            <summary>设置 ExcelCommentCollection.AddCommentsFromXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AddExcelRangeBaseStringString">
            <summary>设置 ExcelCommentCollection.Add(ExcelRangeBase cell, String Text, String author) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.CommentXmlGet">
            <summary>设置 ExcelCommentCollection.get_CommentXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.CommentXmlSetXmlDocument">
            <summary>设置 ExcelCommentCollection.set_CommentXml(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.ConstructorExcelPackageExcelWorksheetXmlNamespaceManager">
            <summary>设置 ExcelCommentCollection.ExcelCommentCollection(ExcelPackage pck, ExcelWorksheet ws, XmlNamespaceManager ns) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.CountGet">
            <summary>设置 ExcelCommentCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.CreateXmlExcelPackage">
            <summary>设置 ExcelCommentCollection.CreateXml(ExcelPackage pck) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.ItemGetExcelCellAddress">
            <summary>设置 ExcelCommentCollection.get_Item(ExcelCellAddress cell) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.ItemGetInt32">
            <summary>设置 ExcelCommentCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.NameSpaceManagerGet">
            <summary>设置 ExcelCommentCollection.get_NameSpaceManager() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.NameSpaceManagerSetXmlNamespaceManager">
            <summary>设置 ExcelCommentCollection.set_NameSpaceManager(XmlNamespaceManager value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.PartGet">
            <summary>设置 ExcelCommentCollection.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.PartSetPackagePart">
            <summary>设置 ExcelCommentCollection.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.RelIdGet">
            <summary>设置 ExcelCommentCollection.get_RelId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.RelIdSetString">
            <summary>设置 ExcelCommentCollection.set_RelId(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.RemoveAtInt32">
            <summary>设置 ExcelCommentCollection.RemoveAt(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.RemoveExcelComment">
            <summary>设置 ExcelCommentCollection.Remove(ExcelComment comment) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelCommentCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.UriGet">
            <summary>设置 ExcelCommentCollection.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.UriSetUri">
            <summary>设置 ExcelCommentCollection.set_Uri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.WorksheetGet">
            <summary>设置 ExcelCommentCollection.get_Worksheet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.WorksheetSetExcelWorksheet">
            <summary>设置 ExcelCommentCollection.set_Worksheet(ExcelWorksheet value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.AddCommentsFromXml">
            <summary>设置 ExcelCommentCollection.AddCommentsFromXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.AddExcelRangeBaseStringString">
            <summary>设置 ExcelCommentCollection.Add(ExcelRangeBase cell, String Text, String author) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.CommentXmlGet">
            <summary>设置 ExcelCommentCollection.get_CommentXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.CommentXmlSetXmlDocument">
            <summary>设置 ExcelCommentCollection.set_CommentXml(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.CountGet">
            <summary>设置 ExcelCommentCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.CreateXmlExcelPackage">
            <summary>设置 ExcelCommentCollection.CreateXml(ExcelPackage pck) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.ItemGetExcelCellAddress">
            <summary>设置 ExcelCommentCollection.get_Item(ExcelCellAddress cell) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.ItemGetInt32">
            <summary>设置 ExcelCommentCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.NameSpaceManagerGet">
            <summary>设置 ExcelCommentCollection.get_NameSpaceManager() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.NameSpaceManagerSetXmlNamespaceManager">
            <summary>设置 ExcelCommentCollection.set_NameSpaceManager(XmlNamespaceManager value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.PartGet">
            <summary>设置 ExcelCommentCollection.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.PartSetPackagePart">
            <summary>设置 ExcelCommentCollection.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.RelIdGet">
            <summary>设置 ExcelCommentCollection.get_RelId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.RelIdSetString">
            <summary>设置 ExcelCommentCollection.set_RelId(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.RemoveAtInt32">
            <summary>设置 ExcelCommentCollection.RemoveAt(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.RemoveExcelComment">
            <summary>设置 ExcelCommentCollection.Remove(ExcelComment comment) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelCommentCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.UriGet">
            <summary>设置 ExcelCommentCollection.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.UriSetUri">
            <summary>设置 ExcelCommentCollection.set_Uri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.WorksheetGet">
            <summary>设置 ExcelCommentCollection.get_Worksheet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelCommentCollection.AllInstances.WorksheetSetExcelWorksheet">
            <summary>设置 ExcelCommentCollection.set_Worksheet(ExcelWorksheet value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelEncryption">
            <summary>OfficeOpenXml.ExcelEncryption 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelEncryption.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelEncryption.#ctor(OfficeOpenXml.ExcelEncryption)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelEncryption.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelEncryption.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.AlgorithmGet">
            <summary>设置 ExcelEncryption.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.AlgorithmSetEncryptionAlgorithm">
            <summary>设置 ExcelEncryption.set_Algorithm(EncryptionAlgorithm value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.Constructor">
            <summary>设置 ExcelEncryption.ExcelEncryption() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.ConstructorEncryptionAlgorithm">
            <summary>设置 ExcelEncryption.ExcelEncryption(EncryptionAlgorithm encryptionAlgorithm) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.IsEncryptedGet">
            <summary>设置 ExcelEncryption.get_IsEncrypted() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.IsEncryptedSetBoolean">
            <summary>设置 ExcelEncryption.set_IsEncrypted(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.PasswordGet">
            <summary>设置 ExcelEncryption.get_Password() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.PasswordSetString">
            <summary>设置 ExcelEncryption.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelEncryption.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.AllInstances.AlgorithmGet">
            <summary>设置 ExcelEncryption.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.AllInstances.AlgorithmSetEncryptionAlgorithm">
            <summary>设置 ExcelEncryption.set_Algorithm(EncryptionAlgorithm value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.AllInstances.IsEncryptedGet">
            <summary>设置 ExcelEncryption.get_IsEncrypted() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.AllInstances.IsEncryptedSetBoolean">
            <summary>设置 ExcelEncryption.set_IsEncrypted(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.AllInstances.PasswordGet">
            <summary>设置 ExcelEncryption.get_Password() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelEncryption.AllInstances.PasswordSetString">
            <summary>设置 ExcelEncryption.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelHeaderFooter">
            <summary>OfficeOpenXml.ExcelHeaderFooter 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.#ctor(OfficeOpenXml.ExcelHeaderFooter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AlignWithMarginsGet">
            <summary>设置 ExcelHeaderFooter.get_AlignWithMargins() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AlignWithMarginsSetBoolean">
            <summary>设置 ExcelHeaderFooter.set_AlignWithMargins(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.ConstructorXmlNamespaceManagerXmlNodeExcelWorksheet">
            <summary>设置 ExcelHeaderFooter.ExcelHeaderFooter(XmlNamespaceManager nameSpaceManager, XmlNode topNode, ExcelWorksheet ws) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.EvenFooterGet">
            <summary>设置 ExcelHeaderFooter.get_EvenFooter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.EvenHeaderGet">
            <summary>设置 ExcelHeaderFooter.get_EvenHeader() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.FirstFooterGet">
            <summary>设置 ExcelHeaderFooter.get_FirstFooter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.FirstHeaderGet">
            <summary>设置 ExcelHeaderFooter.get_FirstHeader() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.GetTextExcelHeaderFooterText">
            <summary>设置 ExcelHeaderFooter.GetText(ExcelHeaderFooterText headerFooter) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.OddFooterGet">
            <summary>设置 ExcelHeaderFooter.get_OddFooter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.OddHeaderGet">
            <summary>设置 ExcelHeaderFooter.get_OddHeader() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.PicturesGet">
            <summary>设置 ExcelHeaderFooter.get_Pictures() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.Save">
            <summary>设置 ExcelHeaderFooter.Save() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.SaveHeaderFooterImages">
            <summary>设置 ExcelHeaderFooter.SaveHeaderFooterImages() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.differentFirstGet">
            <summary>设置 ExcelHeaderFooter.get_differentFirst() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.differentFirstSetBoolean">
            <summary>设置 ExcelHeaderFooter.set_differentFirst(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.differentOddEvenGet">
            <summary>设置 ExcelHeaderFooter.get_differentOddEven() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.differentOddEvenSetBoolean">
            <summary>设置 ExcelHeaderFooter.set_differentOddEven(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.AlignWithMarginsGet">
            <summary>设置 ExcelHeaderFooter.get_AlignWithMargins() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.AlignWithMarginsSetBoolean">
            <summary>设置 ExcelHeaderFooter.set_AlignWithMargins(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.EvenFooterGet">
            <summary>设置 ExcelHeaderFooter.get_EvenFooter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.EvenHeaderGet">
            <summary>设置 ExcelHeaderFooter.get_EvenHeader() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.FirstFooterGet">
            <summary>设置 ExcelHeaderFooter.get_FirstFooter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.FirstHeaderGet">
            <summary>设置 ExcelHeaderFooter.get_FirstHeader() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.GetTextExcelHeaderFooterText">
            <summary>设置 ExcelHeaderFooter.GetText(ExcelHeaderFooterText headerFooter) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.OddFooterGet">
            <summary>设置 ExcelHeaderFooter.get_OddFooter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.OddHeaderGet">
            <summary>设置 ExcelHeaderFooter.get_OddHeader() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.PicturesGet">
            <summary>设置 ExcelHeaderFooter.get_Pictures() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.Save">
            <summary>设置 ExcelHeaderFooter.Save() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.SaveHeaderFooterImages">
            <summary>设置 ExcelHeaderFooter.SaveHeaderFooterImages() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.differentFirstGet">
            <summary>设置 ExcelHeaderFooter.get_differentFirst() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.differentFirstSetBoolean">
            <summary>设置 ExcelHeaderFooter.set_differentFirst(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.differentOddEvenGet">
            <summary>设置 ExcelHeaderFooter.get_differentOddEven() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooter.AllInstances.differentOddEvenSetBoolean">
            <summary>设置 ExcelHeaderFooter.set_differentOddEven(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText">
            <summary>OfficeOpenXml.ExcelHeaderFooterText 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.#ctor(OfficeOpenXml.ExcelHeaderFooterText)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.ConstructorXmlNodeExcelWorksheetString">
            <summary>设置 ExcelHeaderFooterText.ExcelHeaderFooterText(XmlNode TextNode, ExcelWorksheet ws, String hf) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.InsertPictureFileInfoPictureAlignment">
            <summary>设置 ExcelHeaderFooterText.InsertPicture(FileInfo PictureFile, PictureAlignment Alignment) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.InsertPictureImagePictureAlignment">
            <summary>设置 ExcelHeaderFooterText.InsertPicture(Image Picture, PictureAlignment Alignment) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.SetTextStringString">
            <summary>设置 ExcelHeaderFooterText.SetText(String code, String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.ValidateImagePictureAlignment">
            <summary>设置 ExcelHeaderFooterText.ValidateImage(PictureAlignment Alignment) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.AllInstances.InsertPictureFileInfoPictureAlignment">
            <summary>设置 ExcelHeaderFooterText.InsertPicture(FileInfo PictureFile, PictureAlignment Alignment) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.AllInstances.InsertPictureImagePictureAlignment">
            <summary>设置 ExcelHeaderFooterText.InsertPicture(Image Picture, PictureAlignment Alignment) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.AllInstances.SetTextStringString">
            <summary>设置 ExcelHeaderFooterText.SetText(String code, String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHeaderFooterText.AllInstances.ValidateImagePictureAlignment">
            <summary>设置 ExcelHeaderFooterText.ValidateImage(PictureAlignment Alignment) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelHyperLink">
            <summary>OfficeOpenXml.ExcelHyperLink 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelHyperLink.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelHyperLink.#ctor(OfficeOpenXml.ExcelHyperLink)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelHyperLink.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelHyperLink.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelHyperLink.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.ColSpannGet">
            <summary>设置 ExcelHyperLink.get_ColSpann() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.ColSpannSetInt32">
            <summary>设置 ExcelHyperLink.set_ColSpann(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.ConstructorString">
            <summary>设置 ExcelHyperLink.ExcelHyperLink(String uriString) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.ConstructorStringBoolean">
            <summary>设置 ExcelHyperLink.ExcelHyperLink(String uriString, Boolean dontEscape) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.ConstructorStringString">
            <summary>设置 ExcelHyperLink.ExcelHyperLink(String referenceAddress, String display) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.ConstructorStringUriKind">
            <summary>设置 ExcelHyperLink.ExcelHyperLink(String uriString, UriKind uriKind) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.DisplayGet">
            <summary>设置 ExcelHyperLink.get_Display() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.DisplaySetString">
            <summary>设置 ExcelHyperLink.set_Display(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.OriginalUriGet">
            <summary>设置 ExcelHyperLink.get_OriginalUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.OriginalUriSetUri">
            <summary>设置 ExcelHyperLink.set_OriginalUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.ReferenceAddressGet">
            <summary>设置 ExcelHyperLink.get_ReferenceAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.ReferenceAddressSetString">
            <summary>设置 ExcelHyperLink.set_ReferenceAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.RowSpannGet">
            <summary>设置 ExcelHyperLink.get_RowSpann() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.RowSpannSetInt32">
            <summary>设置 ExcelHyperLink.set_RowSpann(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.ToolTipGet">
            <summary>设置 ExcelHyperLink.get_ToolTip() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.ToolTipSetString">
            <summary>设置 ExcelHyperLink.set_ToolTip(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelHyperLink.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.AllInstances.ColSpannGet">
            <summary>设置 ExcelHyperLink.get_ColSpann() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.AllInstances.ColSpannSetInt32">
            <summary>设置 ExcelHyperLink.set_ColSpann(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.AllInstances.DisplayGet">
            <summary>设置 ExcelHyperLink.get_Display() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.AllInstances.DisplaySetString">
            <summary>设置 ExcelHyperLink.set_Display(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.AllInstances.OriginalUriGet">
            <summary>设置 ExcelHyperLink.get_OriginalUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.AllInstances.OriginalUriSetUri">
            <summary>设置 ExcelHyperLink.set_OriginalUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.AllInstances.ReferenceAddressGet">
            <summary>设置 ExcelHyperLink.get_ReferenceAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.AllInstances.ReferenceAddressSetString">
            <summary>设置 ExcelHyperLink.set_ReferenceAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.AllInstances.RowSpannGet">
            <summary>设置 ExcelHyperLink.get_RowSpann() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.AllInstances.RowSpannSetInt32">
            <summary>设置 ExcelHyperLink.set_RowSpann(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.AllInstances.ToolTipGet">
            <summary>设置 ExcelHyperLink.get_ToolTip() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelHyperLink.AllInstances.ToolTipSetString">
            <summary>设置 ExcelHyperLink.set_ToolTip(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelNamedRange">
            <summary>OfficeOpenXml.ExcelNamedRange 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRange.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRange.#ctor(OfficeOpenXml.ExcelNamedRange)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRange.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRange.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRange.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRange.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRange.Bind(System.Collections.IEnumerator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRange.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.ExcelRangeBase})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRange.Bind(System.Collections.Generic.IEnumerator{OfficeOpenXml.ExcelRangeBase})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.ConstructorStringExcelWorkbookExcelWorksheet">
            <summary>设置 ExcelNamedRange.ExcelNamedRange(String name, ExcelWorkbook wb, ExcelWorksheet nameSheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.ConstructorStringExcelWorksheetExcelWorksheetString">
            <summary>设置 ExcelNamedRange.ExcelNamedRange(String name, ExcelWorksheet nameSheet, ExcelWorksheet sheet, String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.IsNameHiddenGet">
            <summary>设置 ExcelNamedRange.get_IsNameHidden() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.IsNameHiddenSetBoolean">
            <summary>设置 ExcelNamedRange.set_IsNameHidden(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.LocalSheetIdGet">
            <summary>设置 ExcelNamedRange.get_LocalSheetId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.NameCommentGet">
            <summary>设置 ExcelNamedRange.get_NameComment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.NameCommentSetString">
            <summary>设置 ExcelNamedRange.set_NameComment(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.NameFormulaGet">
            <summary>设置 ExcelNamedRange.get_NameFormula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.NameFormulaSetString">
            <summary>设置 ExcelNamedRange.set_NameFormula(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.NameGet">
            <summary>设置 ExcelNamedRange.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.NameSetString">
            <summary>设置 ExcelNamedRange.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.NameValueGet">
            <summary>设置 ExcelNamedRange.get_NameValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.NameValueSetObject">
            <summary>设置 ExcelNamedRange.set_NameValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.ToString">
            <summary>设置 ExcelNamedRange.ToString() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelNamedRange.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.AllInstances.IsNameHiddenGet">
            <summary>设置 ExcelNamedRange.get_IsNameHidden() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.AllInstances.IsNameHiddenSetBoolean">
            <summary>设置 ExcelNamedRange.set_IsNameHidden(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.AllInstances.LocalSheetIdGet">
            <summary>设置 ExcelNamedRange.get_LocalSheetId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.AllInstances.NameCommentGet">
            <summary>设置 ExcelNamedRange.get_NameComment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.AllInstances.NameCommentSetString">
            <summary>设置 ExcelNamedRange.set_NameComment(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.AllInstances.NameFormulaGet">
            <summary>设置 ExcelNamedRange.get_NameFormula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.AllInstances.NameFormulaSetString">
            <summary>设置 ExcelNamedRange.set_NameFormula(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.AllInstances.NameGet">
            <summary>设置 ExcelNamedRange.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.AllInstances.NameSetString">
            <summary>设置 ExcelNamedRange.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.AllInstances.NameValueGet">
            <summary>设置 ExcelNamedRange.get_NameValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.AllInstances.NameValueSetObject">
            <summary>设置 ExcelNamedRange.set_NameValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRange.AllInstances.ToString01">
            <summary>设置 ExcelNamedRange.ToString() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection">
            <summary>OfficeOpenXml.ExcelNamedRangeCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.#ctor(OfficeOpenXml.ExcelNamedRangeCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.ExcelNamedRange})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AddFormlaStringString">
            <summary>设置 ExcelNamedRangeCollection.AddFormla(String Name, String Formula) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AddFormulaStringString">
            <summary>设置 ExcelNamedRangeCollection.AddFormula(String Name, String Formula) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AddStringExcelRangeBase">
            <summary>设置 ExcelNamedRangeCollection.Add(String Name, ExcelRangeBase Range) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AddValueStringObject">
            <summary>设置 ExcelNamedRangeCollection.AddValue(String Name, Object value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.ConstructorExcelWorkbook">
            <summary>设置 ExcelNamedRangeCollection.ExcelNamedRangeCollection(ExcelWorkbook wb) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.ConstructorExcelWorkbookExcelWorksheet">
            <summary>设置 ExcelNamedRangeCollection.ExcelNamedRangeCollection(ExcelWorkbook wb, ExcelWorksheet ws) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.ContainsKeyString">
            <summary>设置 ExcelNamedRangeCollection.ContainsKey(String key) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.CountGet">
            <summary>设置 ExcelNamedRangeCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.GetEnumerator">
            <summary>设置 ExcelNamedRangeCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.ItemGetString">
            <summary>设置 ExcelNamedRangeCollection.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.RemoveString">
            <summary>设置 ExcelNamedRangeCollection.Remove(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelNamedRangeCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AllInstances.AddFormlaStringString">
            <summary>设置 ExcelNamedRangeCollection.AddFormla(String Name, String Formula) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AllInstances.AddFormulaStringString">
            <summary>设置 ExcelNamedRangeCollection.AddFormula(String Name, String Formula) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AllInstances.AddStringExcelRangeBase">
            <summary>设置 ExcelNamedRangeCollection.Add(String Name, ExcelRangeBase Range) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AllInstances.AddValueStringObject">
            <summary>设置 ExcelNamedRangeCollection.AddValue(String Name, Object value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AllInstances.ContainsKeyString">
            <summary>设置 ExcelNamedRangeCollection.ContainsKey(String key) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AllInstances.CountGet">
            <summary>设置 ExcelNamedRangeCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AllInstances.GetEnumerator">
            <summary>设置 ExcelNamedRangeCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AllInstances.ItemGetString">
            <summary>设置 ExcelNamedRangeCollection.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AllInstances.RemoveString">
            <summary>设置 ExcelNamedRangeCollection.Remove(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelNamedRangeCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelNamedRangeCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelPackage">
            <summary>OfficeOpenXml.ExcelPackage 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelPackage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelPackage.#ctor(OfficeOpenXml.ExcelPackage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelPackage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelPackage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelPackage.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.CompressionGet">
            <summary>设置 ExcelPackage.get_Compression() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.CompressionSetCompressionOption">
            <summary>设置 ExcelPackage.set_Compression(CompressionOption value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.ConstructNewFileStreamString">
            <summary>设置 ExcelPackage.ConstructNewFile(Stream stream, String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.Constructor">
            <summary>设置 ExcelPackage.ExcelPackage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.ConstructorFileInfo">
            <summary>设置 ExcelPackage.ExcelPackage(FileInfo newFile) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.ConstructorFileInfoBoolean">
            <summary>设置 ExcelPackage.ExcelPackage(FileInfo template, Boolean useStream) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.ConstructorFileInfoBooleanString">
            <summary>设置 ExcelPackage.ExcelPackage(FileInfo template, Boolean useStream, String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.ConstructorFileInfoFileInfo">
            <summary>设置 ExcelPackage.ExcelPackage(FileInfo newFile, FileInfo template) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.ConstructorFileInfoFileInfoString">
            <summary>设置 ExcelPackage.ExcelPackage(FileInfo newFile, FileInfo template, String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.ConstructorFileInfoString">
            <summary>设置 ExcelPackage.ExcelPackage(FileInfo newFile, String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.ConstructorStream">
            <summary>设置 ExcelPackage.ExcelPackage(Stream newStream) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.ConstructorStreamStream">
            <summary>设置 ExcelPackage.ExcelPackage(Stream newStream, Stream templateStream) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.ConstructorStreamStreamString">
            <summary>设置 ExcelPackage.ExcelPackage(Stream newStream, Stream templateStream, String Password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.ConstructorStreamString">
            <summary>设置 ExcelPackage.ExcelPackage(Stream newStream, String Password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.CopyStreamStreamStreamRef">
            <summary>设置 ExcelPackage.CopyStream(Stream inputStream, Stream&amp; outputStream) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.CreateBlankWb">
            <summary>设置 ExcelPackage.CreateBlankWb() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.CreateDefaultNSM">
            <summary>设置 ExcelPackage.CreateDefaultNSM() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.CreateFromTemplateFileInfoString">
            <summary>设置 ExcelPackage.CreateFromTemplate(FileInfo template, String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.Dispose">
            <summary>设置 ExcelPackage.Dispose() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.DoAdjustDrawingsGet">
            <summary>设置 ExcelPackage.get_DoAdjustDrawings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.DoAdjustDrawingsSetBoolean">
            <summary>设置 ExcelPackage.set_DoAdjustDrawings(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.EncryptionGet">
            <summary>设置 ExcelPackage.get_Encryption() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.FileGet">
            <summary>设置 ExcelPackage.get_File() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.FileSetFileInfo">
            <summary>设置 ExcelPackage.set_File(FileInfo value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.GetAsByteArray">
            <summary>设置 ExcelPackage.GetAsByteArray() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.GetAsByteArrayBoolean">
            <summary>设置 ExcelPackage.GetAsByteArray(Boolean save) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.GetAsByteArrayString">
            <summary>设置 ExcelPackage.GetAsByteArray(String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.GetNewUriPackageString">
            <summary>设置 ExcelPackage.GetNewUri(Package package, String sUri) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.GetXmlFromUriUri">
            <summary>设置 ExcelPackage.GetXmlFromUri(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.Init">
            <summary>设置 ExcelPackage.Init() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.LoadStream">
            <summary>设置 ExcelPackage.Load(Stream input) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.LoadStreamStreamString">
            <summary>设置 ExcelPackage.Load(Stream input, Stream output, String Password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.LoadStreamString">
            <summary>设置 ExcelPackage.Load(Stream input, String Password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.PackageGet">
            <summary>设置 ExcelPackage.get_Package() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.ReadFile">
            <summary>设置 ExcelPackage.ReadFile() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.RemoveImageString">
            <summary>设置 ExcelPackage.RemoveImage(String hash) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.Save">
            <summary>设置 ExcelPackage.Save() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.SaveAsFileInfo">
            <summary>设置 ExcelPackage.SaveAs(FileInfo file) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.SaveAsFileInfoString">
            <summary>设置 ExcelPackage.SaveAs(FileInfo file, String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.SaveAsStream">
            <summary>设置 ExcelPackage.SaveAs(Stream OutputStream) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.SaveAsStreamString">
            <summary>设置 ExcelPackage.SaveAs(Stream OutputStream, String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.SavePartUriXmlDocument">
            <summary>设置 ExcelPackage.SavePart(Uri uri, XmlDocument xmlDoc) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.SaveString">
            <summary>设置 ExcelPackage.Save(String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.SaveWorkbookUriXmlDocument">
            <summary>设置 ExcelPackage.SaveWorkbook(Uri uri, XmlDocument xmlDoc) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.StreamGet">
            <summary>设置 ExcelPackage.get_Stream() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.WorkbookGet">
            <summary>设置 ExcelPackage.get_Workbook() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.CompressionGet">
            <summary>设置 ExcelPackage.get_Compression() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.CompressionSetCompressionOption">
            <summary>设置 ExcelPackage.set_Compression(CompressionOption value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.ConstructNewFileStreamString">
            <summary>设置 ExcelPackage.ConstructNewFile(Stream stream, String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.CreateBlankWb">
            <summary>设置 ExcelPackage.CreateBlankWb() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.CreateDefaultNSM">
            <summary>设置 ExcelPackage.CreateDefaultNSM() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.CreateFromTemplateFileInfoString">
            <summary>设置 ExcelPackage.CreateFromTemplate(FileInfo template, String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.Dispose">
            <summary>设置 ExcelPackage.Dispose() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.DoAdjustDrawingsGet">
            <summary>设置 ExcelPackage.get_DoAdjustDrawings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.DoAdjustDrawingsSetBoolean">
            <summary>设置 ExcelPackage.set_DoAdjustDrawings(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.EncryptionGet">
            <summary>设置 ExcelPackage.get_Encryption() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.FileGet">
            <summary>设置 ExcelPackage.get_File() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.FileSetFileInfo">
            <summary>设置 ExcelPackage.set_File(FileInfo value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.GetAsByteArray">
            <summary>设置 ExcelPackage.GetAsByteArray() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.GetAsByteArrayBoolean">
            <summary>设置 ExcelPackage.GetAsByteArray(Boolean save) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.GetAsByteArrayString">
            <summary>设置 ExcelPackage.GetAsByteArray(String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.GetNewUriPackageString">
            <summary>设置 ExcelPackage.GetNewUri(Package package, String sUri) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.GetXmlFromUriUri">
            <summary>设置 ExcelPackage.GetXmlFromUri(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.Init">
            <summary>设置 ExcelPackage.Init() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.LoadStream">
            <summary>设置 ExcelPackage.Load(Stream input) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.LoadStreamStreamString">
            <summary>设置 ExcelPackage.Load(Stream input, Stream output, String Password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.LoadStreamString">
            <summary>设置 ExcelPackage.Load(Stream input, String Password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.PackageGet">
            <summary>设置 ExcelPackage.get_Package() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.ReadFile">
            <summary>设置 ExcelPackage.ReadFile() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.RemoveImageString">
            <summary>设置 ExcelPackage.RemoveImage(String hash) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.Save">
            <summary>设置 ExcelPackage.Save() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.SaveAsFileInfo">
            <summary>设置 ExcelPackage.SaveAs(FileInfo file) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.SaveAsFileInfoString">
            <summary>设置 ExcelPackage.SaveAs(FileInfo file, String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.SaveAsStream">
            <summary>设置 ExcelPackage.SaveAs(Stream OutputStream) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.SaveAsStreamString">
            <summary>设置 ExcelPackage.SaveAs(Stream OutputStream, String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.SavePartUriXmlDocument">
            <summary>设置 ExcelPackage.SavePart(Uri uri, XmlDocument xmlDoc) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.SaveString">
            <summary>设置 ExcelPackage.Save(String password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.SaveWorkbookUriXmlDocument">
            <summary>设置 ExcelPackage.SaveWorkbook(Uri uri, XmlDocument xmlDoc) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.StreamGet">
            <summary>设置 ExcelPackage.get_Stream() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPackage.AllInstances.WorkbookGet">
            <summary>设置 ExcelPackage.get_Workbook() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelPrinterSettings">
            <summary>OfficeOpenXml.ExcelPrinterSettings 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.#ctor(OfficeOpenXml.ExcelPrinterSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.BlackAndWhiteGet">
            <summary>设置 ExcelPrinterSettings.get_BlackAndWhite() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.BlackAndWhiteSetBoolean">
            <summary>设置 ExcelPrinterSettings.set_BlackAndWhite(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.BottomMarginGet">
            <summary>设置 ExcelPrinterSettings.get_BottomMargin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.BottomMarginSetDecimal">
            <summary>设置 ExcelPrinterSettings.set_BottomMargin(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.ConstructorXmlNamespaceManagerXmlNodeExcelWorksheet">
            <summary>设置 ExcelPrinterSettings.ExcelPrinterSettings(XmlNamespaceManager ns, XmlNode topNode, ExcelWorksheet ws) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.CreateMargins">
            <summary>设置 ExcelPrinterSettings.CreateMargins() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.DraftGet">
            <summary>设置 ExcelPrinterSettings.get_Draft() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.DraftSetBoolean">
            <summary>设置 ExcelPrinterSettings.set_Draft(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.FitToHeightGet">
            <summary>设置 ExcelPrinterSettings.get_FitToHeight() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.FitToHeightSetInt32">
            <summary>设置 ExcelPrinterSettings.set_FitToHeight(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.FitToPageGet">
            <summary>设置 ExcelPrinterSettings.get_FitToPage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.FitToPageSetBoolean">
            <summary>设置 ExcelPrinterSettings.set_FitToPage(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.FitToWidthGet">
            <summary>设置 ExcelPrinterSettings.get_FitToWidth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.FitToWidthSetInt32">
            <summary>设置 ExcelPrinterSettings.set_FitToWidth(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.FooterMarginGet">
            <summary>设置 ExcelPrinterSettings.get_FooterMargin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.FooterMarginSetDecimal">
            <summary>设置 ExcelPrinterSettings.set_FooterMargin(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.HeaderMarginGet">
            <summary>设置 ExcelPrinterSettings.get_HeaderMargin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.HeaderMarginSetDecimal">
            <summary>设置 ExcelPrinterSettings.set_HeaderMargin(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.HorizontalCenteredGet">
            <summary>设置 ExcelPrinterSettings.get_HorizontalCentered() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.HorizontalCenteredSetBoolean">
            <summary>设置 ExcelPrinterSettings.set_HorizontalCentered(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.LeftMarginGet">
            <summary>设置 ExcelPrinterSettings.get_LeftMargin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.LeftMarginSetDecimal">
            <summary>设置 ExcelPrinterSettings.set_LeftMargin(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.OrientationGet">
            <summary>设置 ExcelPrinterSettings.get_Orientation() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.OrientationSeteOrientation">
            <summary>设置 ExcelPrinterSettings.set_Orientation(eOrientation value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.PageOrderGet">
            <summary>设置 ExcelPrinterSettings.get_PageOrder() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.PageOrderSetePageOrder">
            <summary>设置 ExcelPrinterSettings.set_PageOrder(ePageOrder value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.PaperSizeGet">
            <summary>设置 ExcelPrinterSettings.get_PaperSize() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.PaperSizeSetePaperSize">
            <summary>设置 ExcelPrinterSettings.set_PaperSize(ePaperSize value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.PrintAreaGet">
            <summary>设置 ExcelPrinterSettings.get_PrintArea() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.PrintAreaSetExcelRangeBase">
            <summary>设置 ExcelPrinterSettings.set_PrintArea(ExcelRangeBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.RepeatColumnsGet">
            <summary>设置 ExcelPrinterSettings.get_RepeatColumns() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.RepeatColumnsSetExcelAddress">
            <summary>设置 ExcelPrinterSettings.set_RepeatColumns(ExcelAddress value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.RepeatRowsGet">
            <summary>设置 ExcelPrinterSettings.get_RepeatRows() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.RepeatRowsSetExcelAddress">
            <summary>设置 ExcelPrinterSettings.set_RepeatRows(ExcelAddress value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.RightMarginGet">
            <summary>设置 ExcelPrinterSettings.get_RightMargin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.RightMarginSetDecimal">
            <summary>设置 ExcelPrinterSettings.set_RightMargin(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.ScaleGet">
            <summary>设置 ExcelPrinterSettings.get_Scale() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.ScaleSetInt32">
            <summary>设置 ExcelPrinterSettings.set_Scale(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.ShowGridLinesGet">
            <summary>设置 ExcelPrinterSettings.get_ShowGridLines() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.ShowGridLinesSetBoolean">
            <summary>设置 ExcelPrinterSettings.set_ShowGridLines(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.ShowHeadersGet">
            <summary>设置 ExcelPrinterSettings.get_ShowHeaders() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.ShowHeadersSetBoolean">
            <summary>设置 ExcelPrinterSettings.set_ShowHeaders(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.TopMarginGet">
            <summary>设置 ExcelPrinterSettings.get_TopMargin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.TopMarginSetDecimal">
            <summary>设置 ExcelPrinterSettings.set_TopMargin(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.VerticalCenteredGet">
            <summary>设置 ExcelPrinterSettings.get_VerticalCentered() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.VerticalCenteredSetBoolean">
            <summary>设置 ExcelPrinterSettings.set_VerticalCentered(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.BlackAndWhiteGet">
            <summary>设置 ExcelPrinterSettings.get_BlackAndWhite() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.BlackAndWhiteSetBoolean">
            <summary>设置 ExcelPrinterSettings.set_BlackAndWhite(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.BottomMarginGet">
            <summary>设置 ExcelPrinterSettings.get_BottomMargin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.BottomMarginSetDecimal">
            <summary>设置 ExcelPrinterSettings.set_BottomMargin(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.CreateMargins">
            <summary>设置 ExcelPrinterSettings.CreateMargins() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.DraftGet">
            <summary>设置 ExcelPrinterSettings.get_Draft() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.DraftSetBoolean">
            <summary>设置 ExcelPrinterSettings.set_Draft(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.FitToHeightGet">
            <summary>设置 ExcelPrinterSettings.get_FitToHeight() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.FitToHeightSetInt32">
            <summary>设置 ExcelPrinterSettings.set_FitToHeight(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.FitToPageGet">
            <summary>设置 ExcelPrinterSettings.get_FitToPage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.FitToPageSetBoolean">
            <summary>设置 ExcelPrinterSettings.set_FitToPage(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.FitToWidthGet">
            <summary>设置 ExcelPrinterSettings.get_FitToWidth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.FitToWidthSetInt32">
            <summary>设置 ExcelPrinterSettings.set_FitToWidth(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.FooterMarginGet">
            <summary>设置 ExcelPrinterSettings.get_FooterMargin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.FooterMarginSetDecimal">
            <summary>设置 ExcelPrinterSettings.set_FooterMargin(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.HeaderMarginGet">
            <summary>设置 ExcelPrinterSettings.get_HeaderMargin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.HeaderMarginSetDecimal">
            <summary>设置 ExcelPrinterSettings.set_HeaderMargin(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.HorizontalCenteredGet">
            <summary>设置 ExcelPrinterSettings.get_HorizontalCentered() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.HorizontalCenteredSetBoolean">
            <summary>设置 ExcelPrinterSettings.set_HorizontalCentered(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.LeftMarginGet">
            <summary>设置 ExcelPrinterSettings.get_LeftMargin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.LeftMarginSetDecimal">
            <summary>设置 ExcelPrinterSettings.set_LeftMargin(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.OrientationGet">
            <summary>设置 ExcelPrinterSettings.get_Orientation() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.OrientationSeteOrientation">
            <summary>设置 ExcelPrinterSettings.set_Orientation(eOrientation value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.PageOrderGet">
            <summary>设置 ExcelPrinterSettings.get_PageOrder() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.PageOrderSetePageOrder">
            <summary>设置 ExcelPrinterSettings.set_PageOrder(ePageOrder value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.PaperSizeGet">
            <summary>设置 ExcelPrinterSettings.get_PaperSize() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.PaperSizeSetePaperSize">
            <summary>设置 ExcelPrinterSettings.set_PaperSize(ePaperSize value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.PrintAreaGet">
            <summary>设置 ExcelPrinterSettings.get_PrintArea() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.PrintAreaSetExcelRangeBase">
            <summary>设置 ExcelPrinterSettings.set_PrintArea(ExcelRangeBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.RepeatColumnsGet">
            <summary>设置 ExcelPrinterSettings.get_RepeatColumns() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.RepeatColumnsSetExcelAddress">
            <summary>设置 ExcelPrinterSettings.set_RepeatColumns(ExcelAddress value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.RepeatRowsGet">
            <summary>设置 ExcelPrinterSettings.get_RepeatRows() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.RepeatRowsSetExcelAddress">
            <summary>设置 ExcelPrinterSettings.set_RepeatRows(ExcelAddress value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.RightMarginGet">
            <summary>设置 ExcelPrinterSettings.get_RightMargin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.RightMarginSetDecimal">
            <summary>设置 ExcelPrinterSettings.set_RightMargin(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.ScaleGet">
            <summary>设置 ExcelPrinterSettings.get_Scale() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.ScaleSetInt32">
            <summary>设置 ExcelPrinterSettings.set_Scale(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.ShowGridLinesGet">
            <summary>设置 ExcelPrinterSettings.get_ShowGridLines() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.ShowGridLinesSetBoolean">
            <summary>设置 ExcelPrinterSettings.set_ShowGridLines(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.ShowHeadersGet">
            <summary>设置 ExcelPrinterSettings.get_ShowHeaders() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.ShowHeadersSetBoolean">
            <summary>设置 ExcelPrinterSettings.set_ShowHeaders(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.TopMarginGet">
            <summary>设置 ExcelPrinterSettings.get_TopMargin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.TopMarginSetDecimal">
            <summary>设置 ExcelPrinterSettings.set_TopMargin(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.VerticalCenteredGet">
            <summary>设置 ExcelPrinterSettings.get_VerticalCentered() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelPrinterSettings.AllInstances.VerticalCenteredSetBoolean">
            <summary>设置 ExcelPrinterSettings.set_VerticalCentered(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelProtection">
            <summary>OfficeOpenXml.ExcelProtection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelProtection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelProtection.#ctor(OfficeOpenXml.ExcelProtection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelProtection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelProtection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.ConstructorXmlNamespaceManagerXmlNodeExcelWorkbook">
            <summary>设置 ExcelProtection.ExcelProtection(XmlNamespaceManager ns, XmlNode topNode, ExcelWorkbook wb) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.LockRevisionGet">
            <summary>设置 ExcelProtection.get_LockRevision() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.LockRevisionSetBoolean">
            <summary>设置 ExcelProtection.set_LockRevision(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.LockStructureGet">
            <summary>设置 ExcelProtection.get_LockStructure() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.LockStructureSetBoolean">
            <summary>设置 ExcelProtection.set_LockStructure(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.LockWindowsGet">
            <summary>设置 ExcelProtection.get_LockWindows() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.LockWindowsSetBoolean">
            <summary>设置 ExcelProtection.set_LockWindows(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.SetPasswordString">
            <summary>设置 ExcelProtection.SetPassword(String Password) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelProtection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.AllInstances.LockRevisionGet">
            <summary>设置 ExcelProtection.get_LockRevision() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.AllInstances.LockRevisionSetBoolean">
            <summary>设置 ExcelProtection.set_LockRevision(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.AllInstances.LockStructureGet">
            <summary>设置 ExcelProtection.get_LockStructure() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.AllInstances.LockStructureSetBoolean">
            <summary>设置 ExcelProtection.set_LockStructure(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.AllInstances.LockWindowsGet">
            <summary>设置 ExcelProtection.get_LockWindows() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.AllInstances.LockWindowsSetBoolean">
            <summary>设置 ExcelProtection.set_LockWindows(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelProtection.AllInstances.SetPasswordString">
            <summary>设置 ExcelProtection.SetPassword(String Password) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelRange">
            <summary>OfficeOpenXml.ExcelRange 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRange.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRange.#ctor(OfficeOpenXml.ExcelRange)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRange.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRange.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRange.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRange.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRange.Bind(System.Collections.IEnumerator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRange.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.ExcelRangeBase})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRange.Bind(System.Collections.Generic.IEnumerator{OfficeOpenXml.ExcelRangeBase})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRange.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRange.ConstructorExcelWorksheet">
            <summary>设置 ExcelRange.ExcelRange(ExcelWorksheet sheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRange.ConstructorExcelWorksheetInt32Int32Int32Int32">
            <summary>设置 ExcelRange.ExcelRange(ExcelWorksheet sheet, Int32 fromRow, Int32 fromCol, Int32 toRow, Int32 toCol) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRange.ConstructorExcelWorksheetString">
            <summary>设置 ExcelRange.ExcelRange(ExcelWorksheet sheet, String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRange.ItemGetInt32Int32">
            <summary>设置 ExcelRange.get_Item(Int32 Row, Int32 Col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRange.ItemGetInt32Int32Int32Int32">
            <summary>设置 ExcelRange.get_Item(Int32 FromRow, Int32 FromCol, Int32 ToRow, Int32 ToCol) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRange.ItemGetString">
            <summary>设置 ExcelRange.get_Item(String Address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRange.ValidateRowColInt32Int32">
            <summary>设置 ExcelRange.ValidateRowCol(Int32 Row, Int32 Col) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelRange.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRange.AllInstances.ItemGetInt32Int32">
            <summary>设置 ExcelRange.get_Item(Int32 Row, Int32 Col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRange.AllInstances.ItemGetInt32Int32Int32Int32">
            <summary>设置 ExcelRange.get_Item(Int32 FromRow, Int32 FromCol, Int32 ToRow, Int32 ToCol) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRange.AllInstances.ItemGetString">
            <summary>设置 ExcelRange.get_Item(String Address) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelRangeBase">
            <summary>OfficeOpenXml.ExcelRangeBase 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.#ctor(OfficeOpenXml.ExcelRangeBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.Bind(System.Collections.IEnumerator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.ExcelRangeBase})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.Bind(System.Collections.Generic.IEnumerator{OfficeOpenXml.ExcelRangeBase})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.GetValueOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 ExcelRangeBase.GetValue() 的 填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.LoadFromCollectionOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},OfficeOpenXml.ExcelRangeBase})">
            <summary>设置 ExcelRangeBase.LoadFromCollection(IEnumerable`1&lt;!!0&gt; Collection) 的 填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.LoadFromCollectionOf1IEnumerableOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Boolean,OfficeOpenXml.ExcelRangeBase})">
            <summary>设置 ExcelRangeBase.LoadFromCollection(IEnumerable`1&lt;!!0&gt; Collection, Boolean PrintHeaders) 的 填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.LoadFromCollectionOf1IEnumerableOfM0BooleanTableStyles``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Boolean,OfficeOpenXml.Table.TableStyles,OfficeOpenXml.ExcelRangeBase})">
            <summary>设置 ExcelRangeBase.LoadFromCollection(IEnumerable`1&lt;!!0&gt; Collection, Boolean PrintHeaders, TableStyles TableStyle) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AddCommentStringString">
            <summary>设置 ExcelRangeBase.AddComment(String Text, String Author) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AutoFilterGet">
            <summary>设置 ExcelRangeBase.get_AutoFilter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AutoFilterSetBoolean">
            <summary>设置 ExcelRangeBase.set_AutoFilter(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AutoFitColumns">
            <summary>设置 ExcelRangeBase.AutoFitColumns() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AutoFitColumnsDouble">
            <summary>设置 ExcelRangeBase.AutoFitColumns(Double MinimumWidth) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AutoFitColumnsDoubleDouble">
            <summary>设置 ExcelRangeBase.AutoFitColumns(Double MinimumWidth, Double MaximumWidth) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.CheckAndSplitSharedFormula">
            <summary>设置 ExcelRangeBase.CheckAndSplitSharedFormula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.CheckMergeDiffBooleanString">
            <summary>设置 ExcelRangeBase.CheckMergeDiff(Boolean startValue, String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.Clear">
            <summary>设置 ExcelRangeBase.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.CommentGet">
            <summary>设置 ExcelRangeBase.get_Comment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.ConditionalFormattingGet">
            <summary>设置 ExcelRangeBase.get_ConditionalFormatting() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.ConstructorExcelWorkbookExcelWorksheetStringBoolean">
            <summary>设置 ExcelRangeBase.ExcelRangeBase(ExcelWorkbook wb, ExcelWorksheet xlWorksheet, String address, Boolean isName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.ConstructorExcelWorksheet">
            <summary>设置 ExcelRangeBase.ExcelRangeBase(ExcelWorksheet xlWorksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.ConstructorExcelWorksheetString">
            <summary>设置 ExcelRangeBase.ExcelRangeBase(ExcelWorksheet xlWorksheet, String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.ConvertDataExcelTextFormatStringInt32Boolean">
            <summary>设置 ExcelRangeBase.ConvertData(ExcelTextFormat Format, String v, Int32 col, Boolean isText) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.CopyExcelRangeBase">
            <summary>设置 ExcelRangeBase.Copy(ExcelRangeBase Destination) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.CreateArrayFormulaString">
            <summary>设置 ExcelRangeBase.CreateArrayFormula(String ArrayFormula) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.CurrentGet">
            <summary>设置 ExcelRangeBase.get_Current() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.CurrentSystemCollectionsIEnumeratorget">
            <summary>设置 ExcelRangeBase.System.Collections.IEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.DataValidationGet">
            <summary>设置 ExcelRangeBase.get_DataValidation() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.DeleteCheckMergedCellsExcelAddressBase">
            <summary>设置 ExcelRangeBase.DeleteCheckMergedCells(ExcelAddressBase Range) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.DeleteExcelAddressBase">
            <summary>设置 ExcelRangeBase.Delete(ExcelAddressBase Range) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.Dispose">
            <summary>设置 ExcelRangeBase.Dispose() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.ExcelRangeBase_AddressChangeObjectEventArgs">
            <summary>设置 ExcelRangeBase.ExcelRangeBase_AddressChange(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.Exists_CommentObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Exists_Comment(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.FormulaGet">
            <summary>设置 ExcelRangeBase.get_Formula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.FormulaR1C1Get">
            <summary>设置 ExcelRangeBase.get_FormulaR1C1() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.FormulaR1C1SetString">
            <summary>设置 ExcelRangeBase.set_FormulaR1C1(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.FormulaSetString">
            <summary>设置 ExcelRangeBase.set_Formula(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.FullAddressAbsoluteGet">
            <summary>设置 ExcelRangeBase.get_FullAddressAbsolute() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.FullAddressAbsoluteNoFullRowColGet">
            <summary>设置 ExcelRangeBase.get_FullAddressAbsoluteNoFullRowCol() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.FullAddressGet">
            <summary>设置 ExcelRangeBase.get_FullAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.GetAddressDimExcelRangeBase">
            <summary>设置 ExcelRangeBase.GetAddressDim(ExcelRangeBase addr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.GetEnumerator">
            <summary>设置 ExcelRangeBase.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.GetFormatedTextBoolean">
            <summary>设置 ExcelRangeBase.GetFormatedText(Boolean forWidthCalc) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.GetNextIndexEnumInt32Int32Int32Int32">
            <summary>设置 ExcelRangeBase.GetNextIndexEnum(Int32 fromRow, Int32 fromCol, Int32 toRow, Int32 toCol) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.GetRichTextInt32Int32">
            <summary>设置 ExcelRangeBase.GetRichText(Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.GetSingleValue">
            <summary>设置 ExcelRangeBase.GetSingleValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.GetStartIndexEnumInt32Int32Int32Int32">
            <summary>设置 ExcelRangeBase.GetStartIndexEnum(Int32 fromRow, Int32 fromCol, Int32 toRow, Int32 toCol) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.GetValueArray">
            <summary>设置 ExcelRangeBase.GetValueArray() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.HyperlinkGet">
            <summary>设置 ExcelRangeBase.get_Hyperlink() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.HyperlinkSetUri">
            <summary>设置 ExcelRangeBase.set_Hyperlink(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.IsArrayFormulaGet">
            <summary>设置 ExcelRangeBase.get_IsArrayFormula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.IsInfinityValueObject">
            <summary>设置 ExcelRangeBase.IsInfinityValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.IsRangeValidString">
            <summary>设置 ExcelRangeBase.IsRangeValid(String type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.IsRichTextGet">
            <summary>设置 ExcelRangeBase.get_IsRichText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.IsRichTextSetBoolean">
            <summary>设置 ExcelRangeBase.set_IsRichText(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.LoadFromArraysIEnumerableOfObjectArray">
            <summary>设置 ExcelRangeBase.LoadFromArrays(IEnumerable`1&lt;Object[]&gt; Data) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.LoadFromDataTableDataTableBoolean">
            <summary>设置 ExcelRangeBase.LoadFromDataTable(DataTable Table, Boolean PrintHeaders) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.LoadFromDataTableDataTableBooleanTableStyles">
            <summary>设置 ExcelRangeBase.LoadFromDataTable(DataTable Table, Boolean PrintHeaders, TableStyles TableStyle) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.LoadFromTextFileInfo">
            <summary>设置 ExcelRangeBase.LoadFromText(FileInfo TextFile) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.LoadFromTextFileInfoExcelTextFormat">
            <summary>设置 ExcelRangeBase.LoadFromText(FileInfo TextFile, ExcelTextFormat Format) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.LoadFromTextFileInfoExcelTextFormatTableStylesBoolean">
            <summary>设置 ExcelRangeBase.LoadFromText(FileInfo TextFile, ExcelTextFormat Format, TableStyles TableStyle, Boolean FirstRowIsHeader) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.LoadFromTextString">
            <summary>设置 ExcelRangeBase.LoadFromText(String Text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.LoadFromTextStringExcelTextFormat">
            <summary>设置 ExcelRangeBase.LoadFromText(String Text, ExcelTextFormat Format) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.LoadFromTextStringExcelTextFormatTableStylesBoolean">
            <summary>设置 ExcelRangeBase.LoadFromText(String Text, ExcelTextFormat Format, TableStyles TableStyle, Boolean FirstRowIsHeader) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.MergeGet">
            <summary>设置 ExcelRangeBase.get_Merge() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.MergeSetBoolean">
            <summary>设置 ExcelRangeBase.set_Merge(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.MoveNext">
            <summary>设置 ExcelRangeBase.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.OffsetInt32Int32">
            <summary>设置 ExcelRangeBase.Offset(Int32 RowOffset, Int32 ColumnOffset) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.OffsetInt32Int32Int32Int32">
            <summary>设置 ExcelRangeBase.Offset(Int32 RowOffset, Int32 ColumnOffset, Int32 NumberOfRows, Int32 NumberOfColumns) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.RemoveFormulsExcelAddress">
            <summary>设置 ExcelRangeBase.RemoveFormuls(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.Reset">
            <summary>设置 ExcelRangeBase.Reset() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.RichTextGet">
            <summary>设置 ExcelRangeBase.get_RichText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.SetCellMergeBooleanString">
            <summary>设置 ExcelRangeBase.SetCellMerge(Boolean value, String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.SetDelegate">
            <summary>设置 ExcelRangeBase.SetDelegate() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.SetMergeBooleanString">
            <summary>设置 ExcelRangeBase.SetMerge(Boolean value, String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.SetSharedFormulaIDInt32">
            <summary>设置 ExcelRangeBase.SetSharedFormulaID(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.SetToSelectedRange">
            <summary>设置 ExcelRangeBase.SetToSelectedRange() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.SetValueRichTextObject">
            <summary>设置 ExcelRangeBase.SetValueRichText(Object value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.Set_CommentObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Set_Comment(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.Set_FormulaObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Set_Formula(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.Set_HyperLinkObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Set_HyperLink(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.Set_IsRichTextObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Set_IsRichText(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.Set_SharedFormulaStringExcelAddressBoolean">
            <summary>设置 ExcelRangeBase.Set_SharedFormula(String value, ExcelAddress address, Boolean IsArray) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.Set_StyleIDObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Set_StyleID(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.Set_StyleNameObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Set_StyleName(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.Set_ValueObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Set_Value(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.SplitFormulaInt32">
            <summary>设置 ExcelRangeBase.SplitFormula(Int32 ix) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.SplitFormulas">
            <summary>设置 ExcelRangeBase.SplitFormulas() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.StyleGet">
            <summary>设置 ExcelRangeBase.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.StyleIDGet">
            <summary>设置 ExcelRangeBase.get_StyleID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.StyleIDSetInt32">
            <summary>设置 ExcelRangeBase.set_StyleID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.StyleNameGet">
            <summary>设置 ExcelRangeBase.get_StyleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.StyleNameSetString">
            <summary>设置 ExcelRangeBase.set_StyleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelRangeBase.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.TextForWidthGet">
            <summary>设置 ExcelRangeBase.get_TextForWidth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.TextGet">
            <summary>设置 ExcelRangeBase.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.ValueGet">
            <summary>设置 ExcelRangeBase.get_Value() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.ValueSetObject">
            <summary>设置 ExcelRangeBase.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.WorksheetGet">
            <summary>设置 ExcelRangeBase.get_Worksheet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase._Copyb__0ExcelAddressBase">
            <summary>设置 ExcelRangeBase.&lt;Copy&gt;b__0(ExcelAddressBase r) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.GetValueOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{OfficeOpenXml.ExcelRangeBase,``0})">
            <summary>设置 ExcelRangeBase.GetValue() 的 填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.LoadFromCollectionOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{OfficeOpenXml.ExcelRangeBase,System.Collections.Generic.IEnumerable{``0},OfficeOpenXml.ExcelRangeBase})">
            <summary>设置 ExcelRangeBase.LoadFromCollection(IEnumerable`1&lt;!!0&gt; Collection) 的 填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.LoadFromCollectionOf1IEnumerableOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{OfficeOpenXml.ExcelRangeBase,System.Collections.Generic.IEnumerable{``0},System.Boolean,OfficeOpenXml.ExcelRangeBase})">
            <summary>设置 ExcelRangeBase.LoadFromCollection(IEnumerable`1&lt;!!0&gt; Collection, Boolean PrintHeaders) 的 填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.LoadFromCollectionOf1IEnumerableOfM0BooleanTableStyles``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{OfficeOpenXml.ExcelRangeBase,System.Collections.Generic.IEnumerable{``0},System.Boolean,OfficeOpenXml.Table.TableStyles,OfficeOpenXml.ExcelRangeBase})">
            <summary>设置 ExcelRangeBase.LoadFromCollection(IEnumerable`1&lt;!!0&gt; Collection, Boolean PrintHeaders, TableStyles TableStyle) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.AddCommentStringString">
            <summary>设置 ExcelRangeBase.AddComment(String Text, String Author) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.AutoFilterGet">
            <summary>设置 ExcelRangeBase.get_AutoFilter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.AutoFilterSetBoolean">
            <summary>设置 ExcelRangeBase.set_AutoFilter(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.AutoFitColumns">
            <summary>设置 ExcelRangeBase.AutoFitColumns() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.AutoFitColumnsDouble">
            <summary>设置 ExcelRangeBase.AutoFitColumns(Double MinimumWidth) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.AutoFitColumnsDoubleDouble">
            <summary>设置 ExcelRangeBase.AutoFitColumns(Double MinimumWidth, Double MaximumWidth) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.CheckAndSplitSharedFormula">
            <summary>设置 ExcelRangeBase.CheckAndSplitSharedFormula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.CheckMergeDiffBooleanString">
            <summary>设置 ExcelRangeBase.CheckMergeDiff(Boolean startValue, String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.Clear">
            <summary>设置 ExcelRangeBase.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.CommentGet">
            <summary>设置 ExcelRangeBase.get_Comment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.ConditionalFormattingGet">
            <summary>设置 ExcelRangeBase.get_ConditionalFormatting() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.ConvertDataExcelTextFormatStringInt32Boolean">
            <summary>设置 ExcelRangeBase.ConvertData(ExcelTextFormat Format, String v, Int32 col, Boolean isText) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.CopyExcelRangeBase">
            <summary>设置 ExcelRangeBase.Copy(ExcelRangeBase Destination) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.CreateArrayFormulaString">
            <summary>设置 ExcelRangeBase.CreateArrayFormula(String ArrayFormula) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.CurrentGet">
            <summary>设置 ExcelRangeBase.get_Current() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.CurrentSystemCollectionsIEnumeratorget">
            <summary>设置 ExcelRangeBase.System.Collections.IEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.DataValidationGet">
            <summary>设置 ExcelRangeBase.get_DataValidation() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.DeleteCheckMergedCellsExcelAddressBase">
            <summary>设置 ExcelRangeBase.DeleteCheckMergedCells(ExcelAddressBase Range) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.DeleteExcelAddressBase">
            <summary>设置 ExcelRangeBase.Delete(ExcelAddressBase Range) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.Dispose">
            <summary>设置 ExcelRangeBase.Dispose() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.ExcelRangeBase_AddressChangeObjectEventArgs">
            <summary>设置 ExcelRangeBase.ExcelRangeBase_AddressChange(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.Exists_CommentObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Exists_Comment(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.FormulaGet">
            <summary>设置 ExcelRangeBase.get_Formula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.FormulaR1C1Get">
            <summary>设置 ExcelRangeBase.get_FormulaR1C1() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.FormulaR1C1SetString">
            <summary>设置 ExcelRangeBase.set_FormulaR1C1(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.FormulaSetString">
            <summary>设置 ExcelRangeBase.set_Formula(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.FullAddressAbsoluteGet">
            <summary>设置 ExcelRangeBase.get_FullAddressAbsolute() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.FullAddressAbsoluteNoFullRowColGet">
            <summary>设置 ExcelRangeBase.get_FullAddressAbsoluteNoFullRowCol() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.FullAddressGet">
            <summary>设置 ExcelRangeBase.get_FullAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.GetAddressDimExcelRangeBase">
            <summary>设置 ExcelRangeBase.GetAddressDim(ExcelRangeBase addr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.GetEnumerator">
            <summary>设置 ExcelRangeBase.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.GetFormatedTextBoolean">
            <summary>设置 ExcelRangeBase.GetFormatedText(Boolean forWidthCalc) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.GetNextIndexEnumInt32Int32Int32Int32">
            <summary>设置 ExcelRangeBase.GetNextIndexEnum(Int32 fromRow, Int32 fromCol, Int32 toRow, Int32 toCol) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.GetRichTextInt32Int32">
            <summary>设置 ExcelRangeBase.GetRichText(Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.GetSingleValue">
            <summary>设置 ExcelRangeBase.GetSingleValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.GetStartIndexEnumInt32Int32Int32Int32">
            <summary>设置 ExcelRangeBase.GetStartIndexEnum(Int32 fromRow, Int32 fromCol, Int32 toRow, Int32 toCol) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.GetValueArray">
            <summary>设置 ExcelRangeBase.GetValueArray() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.HyperlinkGet">
            <summary>设置 ExcelRangeBase.get_Hyperlink() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.HyperlinkSetUri">
            <summary>设置 ExcelRangeBase.set_Hyperlink(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.IsArrayFormulaGet">
            <summary>设置 ExcelRangeBase.get_IsArrayFormula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.IsInfinityValueObject">
            <summary>设置 ExcelRangeBase.IsInfinityValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.IsRangeValidString">
            <summary>设置 ExcelRangeBase.IsRangeValid(String type) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.IsRichTextGet">
            <summary>设置 ExcelRangeBase.get_IsRichText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.IsRichTextSetBoolean">
            <summary>设置 ExcelRangeBase.set_IsRichText(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.LoadFromArraysIEnumerableOfObjectArray">
            <summary>设置 ExcelRangeBase.LoadFromArrays(IEnumerable`1&lt;Object[]&gt; Data) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.LoadFromDataTableDataTableBoolean">
            <summary>设置 ExcelRangeBase.LoadFromDataTable(DataTable Table, Boolean PrintHeaders) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.LoadFromDataTableDataTableBooleanTableStyles">
            <summary>设置 ExcelRangeBase.LoadFromDataTable(DataTable Table, Boolean PrintHeaders, TableStyles TableStyle) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.LoadFromTextFileInfo">
            <summary>设置 ExcelRangeBase.LoadFromText(FileInfo TextFile) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.LoadFromTextFileInfoExcelTextFormat">
            <summary>设置 ExcelRangeBase.LoadFromText(FileInfo TextFile, ExcelTextFormat Format) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.LoadFromTextFileInfoExcelTextFormatTableStylesBoolean">
            <summary>设置 ExcelRangeBase.LoadFromText(FileInfo TextFile, ExcelTextFormat Format, TableStyles TableStyle, Boolean FirstRowIsHeader) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.LoadFromTextString">
            <summary>设置 ExcelRangeBase.LoadFromText(String Text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.LoadFromTextStringExcelTextFormat">
            <summary>设置 ExcelRangeBase.LoadFromText(String Text, ExcelTextFormat Format) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.LoadFromTextStringExcelTextFormatTableStylesBoolean">
            <summary>设置 ExcelRangeBase.LoadFromText(String Text, ExcelTextFormat Format, TableStyles TableStyle, Boolean FirstRowIsHeader) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.MergeGet">
            <summary>设置 ExcelRangeBase.get_Merge() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.MergeSetBoolean">
            <summary>设置 ExcelRangeBase.set_Merge(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.MoveNext">
            <summary>设置 ExcelRangeBase.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.OffsetInt32Int32">
            <summary>设置 ExcelRangeBase.Offset(Int32 RowOffset, Int32 ColumnOffset) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.OffsetInt32Int32Int32Int32">
            <summary>设置 ExcelRangeBase.Offset(Int32 RowOffset, Int32 ColumnOffset, Int32 NumberOfRows, Int32 NumberOfColumns) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.RemoveFormulsExcelAddress">
            <summary>设置 ExcelRangeBase.RemoveFormuls(ExcelAddress address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.Reset">
            <summary>设置 ExcelRangeBase.Reset() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.RichTextGet">
            <summary>设置 ExcelRangeBase.get_RichText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.SetCellMergeBooleanString">
            <summary>设置 ExcelRangeBase.SetCellMerge(Boolean value, String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.SetDelegate">
            <summary>设置 ExcelRangeBase.SetDelegate() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.SetMergeBooleanString">
            <summary>设置 ExcelRangeBase.SetMerge(Boolean value, String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.SetSharedFormulaIDInt32">
            <summary>设置 ExcelRangeBase.SetSharedFormulaID(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.SetToSelectedRange">
            <summary>设置 ExcelRangeBase.SetToSelectedRange() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.SetValueRichTextObject">
            <summary>设置 ExcelRangeBase.SetValueRichText(Object value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.Set_CommentObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Set_Comment(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.Set_FormulaObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Set_Formula(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.Set_HyperLinkObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Set_HyperLink(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.Set_IsRichTextObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Set_IsRichText(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.Set_SharedFormulaStringExcelAddressBoolean">
            <summary>设置 ExcelRangeBase.Set_SharedFormula(String value, ExcelAddress address, Boolean IsArray) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.Set_StyleIDObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Set_StyleID(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.Set_StyleNameObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Set_StyleName(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.Set_ValueObjectInt32Int32">
            <summary>设置 ExcelRangeBase.Set_Value(Object value, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.SplitFormulaInt32">
            <summary>设置 ExcelRangeBase.SplitFormula(Int32 ix) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.SplitFormulas">
            <summary>设置 ExcelRangeBase.SplitFormulas() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.StyleGet">
            <summary>设置 ExcelRangeBase.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.StyleIDGet">
            <summary>设置 ExcelRangeBase.get_StyleID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.StyleIDSetInt32">
            <summary>设置 ExcelRangeBase.set_StyleID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.StyleNameGet">
            <summary>设置 ExcelRangeBase.get_StyleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.StyleNameSetString">
            <summary>设置 ExcelRangeBase.set_StyleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelRangeBase.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.TextForWidthGet">
            <summary>设置 ExcelRangeBase.get_TextForWidth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.TextGet">
            <summary>设置 ExcelRangeBase.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.ValueGet">
            <summary>设置 ExcelRangeBase.get_Value() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.ValueSetObject">
            <summary>设置 ExcelRangeBase.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRangeBase.AllInstances.WorksheetGet">
            <summary>设置 ExcelRangeBase.get_Worksheet() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelRow">
            <summary>OfficeOpenXml.ExcelRow 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRow.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRow.#ctor(OfficeOpenXml.ExcelRow)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRow.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelRow.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.CloneExcelWorksheet">
            <summary>设置 ExcelRow.Clone(ExcelWorksheet added) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.CollapsedGet">
            <summary>设置 ExcelRow.get_Collapsed() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.CollapsedSetBoolean">
            <summary>设置 ExcelRow.set_Collapsed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.ConstructorExcelWorksheetInt32">
            <summary>设置 ExcelRow.ExcelRow(ExcelWorksheet Worksheet, Int32 row) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.CustomHeightGet">
            <summary>设置 ExcelRow.get_CustomHeight() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.CustomHeightSetBoolean">
            <summary>设置 ExcelRow.set_CustomHeight(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.GetRowIDInt32Int32">
            <summary>设置 ExcelRow.GetRowID(Int32 sheetID, Int32 row) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.HeightGet">
            <summary>设置 ExcelRow.get_Height() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.HeightSetDouble">
            <summary>设置 ExcelRow.set_Height(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.HiddenGet">
            <summary>设置 ExcelRow.get_Hidden() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.HiddenSetBoolean">
            <summary>设置 ExcelRow.set_Hidden(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.NodeGet">
            <summary>设置 ExcelRow.get_Node() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.OutlineLevelGet">
            <summary>设置 ExcelRow.get_OutlineLevel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.OutlineLevelSetInt32">
            <summary>设置 ExcelRow.set_OutlineLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.PageBreakGet">
            <summary>设置 ExcelRow.get_PageBreak() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.PageBreakSetBoolean">
            <summary>设置 ExcelRow.set_PageBreak(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.PhoneticGet">
            <summary>设置 ExcelRow.get_Phonetic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.PhoneticSetBoolean">
            <summary>设置 ExcelRow.set_Phonetic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.RangeIDOfficeOpenXmlIRangeIDget">
            <summary>设置 ExcelRow.OfficeOpenXml.IRangeID.get_RangeID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.RangeIDOfficeOpenXmlIRangeIDsetUInt64">
            <summary>设置 ExcelRow.OfficeOpenXml.IRangeID.set_RangeID(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.RowGet">
            <summary>设置 ExcelRow.get_Row() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.RowIDGet">
            <summary>设置 ExcelRow.get_RowID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.RowSetInt32">
            <summary>设置 ExcelRow.set_Row(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.StyleGet">
            <summary>设置 ExcelRow.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.StyleIDGet">
            <summary>设置 ExcelRow.get_StyleID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.StyleIDSetInt32">
            <summary>设置 ExcelRow.set_StyleID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.StyleNameGet">
            <summary>设置 ExcelRow.get_StyleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.StyleNameSetString">
            <summary>设置 ExcelRow.set_StyleName(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.CloneExcelWorksheet">
            <summary>设置 ExcelRow.Clone(ExcelWorksheet added) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.CollapsedGet">
            <summary>设置 ExcelRow.get_Collapsed() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.CollapsedSetBoolean">
            <summary>设置 ExcelRow.set_Collapsed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.CustomHeightGet">
            <summary>设置 ExcelRow.get_CustomHeight() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.CustomHeightSetBoolean">
            <summary>设置 ExcelRow.set_CustomHeight(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.HeightGet">
            <summary>设置 ExcelRow.get_Height() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.HeightSetDouble">
            <summary>设置 ExcelRow.set_Height(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.HiddenGet">
            <summary>设置 ExcelRow.get_Hidden() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.HiddenSetBoolean">
            <summary>设置 ExcelRow.set_Hidden(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.NodeGet">
            <summary>设置 ExcelRow.get_Node() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.OutlineLevelGet">
            <summary>设置 ExcelRow.get_OutlineLevel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.OutlineLevelSetInt32">
            <summary>设置 ExcelRow.set_OutlineLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.PageBreakGet">
            <summary>设置 ExcelRow.get_PageBreak() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.PageBreakSetBoolean">
            <summary>设置 ExcelRow.set_PageBreak(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.PhoneticGet">
            <summary>设置 ExcelRow.get_Phonetic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.PhoneticSetBoolean">
            <summary>设置 ExcelRow.set_Phonetic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.RangeIDOfficeOpenXmlIRangeIDget">
            <summary>设置 ExcelRow.OfficeOpenXml.IRangeID.get_RangeID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.RangeIDOfficeOpenXmlIRangeIDsetUInt64">
            <summary>设置 ExcelRow.OfficeOpenXml.IRangeID.set_RangeID(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.RowGet">
            <summary>设置 ExcelRow.get_Row() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.RowIDGet">
            <summary>设置 ExcelRow.get_RowID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.RowSetInt32">
            <summary>设置 ExcelRow.set_Row(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.StyleGet">
            <summary>设置 ExcelRow.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.StyleIDGet">
            <summary>设置 ExcelRow.get_StyleID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.StyleIDSetInt32">
            <summary>设置 ExcelRow.set_StyleID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.StyleNameGet">
            <summary>设置 ExcelRow.get_StyleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelRow.AllInstances.StyleNameSetString">
            <summary>设置 ExcelRow.set_StyleName(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelSheetProtection">
            <summary>OfficeOpenXml.ExcelSheetProtection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelSheetProtection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelSheetProtection.#ctor(OfficeOpenXml.ExcelSheetProtection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelSheetProtection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelSheetProtection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowAutoFilterGet">
            <summary>设置 ExcelSheetProtection.get_AllowAutoFilter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowAutoFilterSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowAutoFilter(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowDeleteColumnsGet">
            <summary>设置 ExcelSheetProtection.get_AllowDeleteColumns() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowDeleteColumnsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowDeleteColumns(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowDeleteRowsGet">
            <summary>设置 ExcelSheetProtection.get_AllowDeleteRows() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowDeleteRowsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowDeleteRows(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowEditObjectGet">
            <summary>设置 ExcelSheetProtection.get_AllowEditObject() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowEditObjectSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowEditObject(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowEditScenariosGet">
            <summary>设置 ExcelSheetProtection.get_AllowEditScenarios() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowEditScenariosSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowEditScenarios(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowFormatCellsGet">
            <summary>设置 ExcelSheetProtection.get_AllowFormatCells() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowFormatCellsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowFormatCells(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowFormatColumnsGet">
            <summary>设置 ExcelSheetProtection.get_AllowFormatColumns() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowFormatColumnsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowFormatColumns(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowFormatRowsGet">
            <summary>设置 ExcelSheetProtection.get_AllowFormatRows() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowFormatRowsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowFormatRows(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowInsertColumnsGet">
            <summary>设置 ExcelSheetProtection.get_AllowInsertColumns() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowInsertColumnsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowInsertColumns(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowInsertHyperlinksGet">
            <summary>设置 ExcelSheetProtection.get_AllowInsertHyperlinks() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowInsertHyperlinksSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowInsertHyperlinks(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowInsertRowsGet">
            <summary>设置 ExcelSheetProtection.get_AllowInsertRows() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowInsertRowsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowInsertRows(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowPivotTablesGet">
            <summary>设置 ExcelSheetProtection.get_AllowPivotTables() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowPivotTablesSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowPivotTables(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowSelectLockedCellsGet">
            <summary>设置 ExcelSheetProtection.get_AllowSelectLockedCells() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowSelectLockedCellsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowSelectLockedCells(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowSelectUnlockedCellsGet">
            <summary>设置 ExcelSheetProtection.get_AllowSelectUnlockedCells() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowSelectUnlockedCellsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowSelectUnlockedCells(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowSortGet">
            <summary>设置 ExcelSheetProtection.get_AllowSort() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllowSortSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowSort(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.ConstructorXmlNamespaceManagerXmlNodeExcelWorksheet">
            <summary>设置 ExcelSheetProtection.ExcelSheetProtection(XmlNamespaceManager nsm, XmlNode topNode, ExcelWorksheet ws) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.IsProtectedGet">
            <summary>设置 ExcelSheetProtection.get_IsProtected() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.IsProtectedSetBoolean">
            <summary>设置 ExcelSheetProtection.set_IsProtected(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.SetPasswordString">
            <summary>设置 ExcelSheetProtection.SetPassword(String Password) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowAutoFilterGet">
            <summary>设置 ExcelSheetProtection.get_AllowAutoFilter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowAutoFilterSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowAutoFilter(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowDeleteColumnsGet">
            <summary>设置 ExcelSheetProtection.get_AllowDeleteColumns() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowDeleteColumnsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowDeleteColumns(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowDeleteRowsGet">
            <summary>设置 ExcelSheetProtection.get_AllowDeleteRows() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowDeleteRowsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowDeleteRows(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowEditObjectGet">
            <summary>设置 ExcelSheetProtection.get_AllowEditObject() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowEditObjectSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowEditObject(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowEditScenariosGet">
            <summary>设置 ExcelSheetProtection.get_AllowEditScenarios() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowEditScenariosSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowEditScenarios(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowFormatCellsGet">
            <summary>设置 ExcelSheetProtection.get_AllowFormatCells() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowFormatCellsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowFormatCells(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowFormatColumnsGet">
            <summary>设置 ExcelSheetProtection.get_AllowFormatColumns() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowFormatColumnsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowFormatColumns(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowFormatRowsGet">
            <summary>设置 ExcelSheetProtection.get_AllowFormatRows() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowFormatRowsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowFormatRows(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowInsertColumnsGet">
            <summary>设置 ExcelSheetProtection.get_AllowInsertColumns() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowInsertColumnsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowInsertColumns(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowInsertHyperlinksGet">
            <summary>设置 ExcelSheetProtection.get_AllowInsertHyperlinks() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowInsertHyperlinksSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowInsertHyperlinks(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowInsertRowsGet">
            <summary>设置 ExcelSheetProtection.get_AllowInsertRows() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowInsertRowsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowInsertRows(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowPivotTablesGet">
            <summary>设置 ExcelSheetProtection.get_AllowPivotTables() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowPivotTablesSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowPivotTables(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowSelectLockedCellsGet">
            <summary>设置 ExcelSheetProtection.get_AllowSelectLockedCells() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowSelectLockedCellsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowSelectLockedCells(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowSelectUnlockedCellsGet">
            <summary>设置 ExcelSheetProtection.get_AllowSelectUnlockedCells() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowSelectUnlockedCellsSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowSelectUnlockedCells(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowSortGet">
            <summary>设置 ExcelSheetProtection.get_AllowSort() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.AllowSortSetBoolean">
            <summary>设置 ExcelSheetProtection.set_AllowSort(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.IsProtectedGet">
            <summary>设置 ExcelSheetProtection.get_IsProtected() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.IsProtectedSetBoolean">
            <summary>设置 ExcelSheetProtection.set_IsProtected(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelSheetProtection.AllInstances.SetPasswordString">
            <summary>设置 ExcelSheetProtection.SetPassword(String Password) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1">
            <summary>OfficeOpenXml.ExcelStyleCollection`1 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.#ctor(OfficeOpenXml.ExcelStyleCollection{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.AddStringT0">
            <summary>设置 ExcelStyleCollection`1.Add(String key, !0 item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.Constructor">
            <summary>设置 ExcelStyleCollection`1.ExcelStyleCollection`1() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.ConstructorBoolean">
            <summary>设置 ExcelStyleCollection`1.ExcelStyleCollection`1(Boolean SetNextIdManual) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.CountGet">
            <summary>设置 ExcelStyleCollection`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.ExistsKeyString">
            <summary>设置 ExcelStyleCollection`1.ExistsKey(String key) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.FindByIDStringT0Ref">
            <summary>设置 ExcelStyleCollection`1.FindByID(String key, !0&amp; obj) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.FindIndexByIDString">
            <summary>设置 ExcelStyleCollection`1.FindIndexByID(String key) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.GetEnumerator">
            <summary>设置 ExcelStyleCollection`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.ItemGetInt32">
            <summary>设置 ExcelStyleCollection`1.get_Item(Int32 PositionID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.SortComparisonOfT0">
            <summary>设置 ExcelStyleCollection`1.Sort(Comparison`1&lt;!0&gt; c) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelStyleCollection`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.TopNodeGet">
            <summary>设置 ExcelStyleCollection`1.get_TopNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.TopNodeSetXmlNode">
            <summary>设置 ExcelStyleCollection`1.set_TopNode(XmlNode value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.AllInstances.AddStringT0">
            <summary>设置 ExcelStyleCollection`1.Add(String key, !0 item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.AllInstances.CountGet">
            <summary>设置 ExcelStyleCollection`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.AllInstances.ExistsKeyString">
            <summary>设置 ExcelStyleCollection`1.ExistsKey(String key) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.AllInstances.FindByIDStringT0Ref">
            <summary>设置 ExcelStyleCollection`1.FindByID(String key, !0&amp; obj) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.AllInstances.FindIndexByIDString">
            <summary>设置 ExcelStyleCollection`1.FindIndexByID(String key) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.AllInstances.GetEnumerator">
            <summary>设置 ExcelStyleCollection`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.AllInstances.ItemGetInt32">
            <summary>设置 ExcelStyleCollection`1.get_Item(Int32 PositionID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.AllInstances.SortComparisonOfT0">
            <summary>设置 ExcelStyleCollection`1.Sort(Comparison`1&lt;!0&gt; c) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelStyleCollection`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.AllInstances.TopNodeGet">
            <summary>设置 ExcelStyleCollection`1.get_TopNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyleCollection`1.AllInstances.TopNodeSetXmlNode">
            <summary>设置 ExcelStyleCollection`1.set_TopNode(XmlNode value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelStyles">
            <summary>OfficeOpenXml.ExcelStyles 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelStyles.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelStyles.#ctor(OfficeOpenXml.ExcelStyles)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelStyles.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelStyles.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AddNamedStyleInt32XmlNodeXmlNodeExcelNamedStyleXml">
            <summary>设置 ExcelStyles.AddNamedStyle(Int32 id, XmlNode styleXfsNode, XmlNode cellXfsNode, ExcelNamedStyleXml style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.CloneStyleExcelStylesInt32">
            <summary>设置 ExcelStyles.CloneStyle(ExcelStyles style, Int32 styleID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.CloneStyleExcelStylesInt32Boolean">
            <summary>设置 ExcelStyles.CloneStyle(ExcelStyles style, Int32 styleID, Boolean isNamedStyle) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.CloneStyleExcelStylesInt32BooleanBoolean">
            <summary>设置 ExcelStyles.CloneStyle(ExcelStyles style, Int32 styleID, Boolean isNamedStyle, Boolean allwaysAdd) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.ConstructorXmlNamespaceManagerXmlDocumentExcelWorkbook">
            <summary>设置 ExcelStyles.ExcelStyles(XmlNamespaceManager NameSpaceManager, XmlDocument xml, ExcelWorkbook wb) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.CreateNamedStyleString">
            <summary>设置 ExcelStyles.CreateNamedStyle(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.CreateNamedStyleStringExcelStyle">
            <summary>设置 ExcelStyles.CreateNamedStyle(String name, ExcelStyle Template) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.GetStyleIdFromNameString">
            <summary>设置 ExcelStyles.GetStyleIdFromName(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.GetStyleObjectInt32Int32String">
            <summary>设置 ExcelStyles.GetStyleObject(Int32 Id, Int32 PositionID, String Address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.GetXmlNodeIntXmlNode">
            <summary>设置 ExcelStyles.GetXmlNodeInt(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.GetXmlNodeXmlNode">
            <summary>设置 ExcelStyles.GetXmlNode(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.IdGet">
            <summary>设置 ExcelStyles.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.LoadFromDocument">
            <summary>设置 ExcelStyles.LoadFromDocument() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.RemoveUnusedStyles">
            <summary>设置 ExcelStyles.RemoveUnusedStyles() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.UpdateXml">
            <summary>设置 ExcelStyles.UpdateXml() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances.AddNamedStyleInt32XmlNodeXmlNodeExcelNamedStyleXml">
            <summary>设置 ExcelStyles.AddNamedStyle(Int32 id, XmlNode styleXfsNode, XmlNode cellXfsNode, ExcelNamedStyleXml style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances.CloneStyleExcelStylesInt32">
            <summary>设置 ExcelStyles.CloneStyle(ExcelStyles style, Int32 styleID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances.CloneStyleExcelStylesInt32Boolean">
            <summary>设置 ExcelStyles.CloneStyle(ExcelStyles style, Int32 styleID, Boolean isNamedStyle) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances.CloneStyleExcelStylesInt32BooleanBoolean">
            <summary>设置 ExcelStyles.CloneStyle(ExcelStyles style, Int32 styleID, Boolean isNamedStyle, Boolean allwaysAdd) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances.CreateNamedStyleString">
            <summary>设置 ExcelStyles.CreateNamedStyle(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances.CreateNamedStyleStringExcelStyle">
            <summary>设置 ExcelStyles.CreateNamedStyle(String name, ExcelStyle Template) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances.GetStyleIdFromNameString">
            <summary>设置 ExcelStyles.GetStyleIdFromName(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances.GetStyleObjectInt32Int32String">
            <summary>设置 ExcelStyles.GetStyleObject(Int32 Id, Int32 PositionID, String Address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances.GetXmlNodeIntXmlNode">
            <summary>设置 ExcelStyles.GetXmlNodeInt(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances.GetXmlNodeXmlNode">
            <summary>设置 ExcelStyles.GetXmlNode(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances.IdGet">
            <summary>设置 ExcelStyles.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances.LoadFromDocument">
            <summary>设置 ExcelStyles.LoadFromDocument() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances.RemoveUnusedStyles">
            <summary>设置 ExcelStyles.RemoveUnusedStyles() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelStyles.AllInstances.UpdateXml">
            <summary>设置 ExcelStyles.UpdateXml() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelTextFormat">
            <summary>OfficeOpenXml.ExcelTextFormat 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelTextFormat.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelTextFormat.#ctor(OfficeOpenXml.ExcelTextFormat)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelTextFormat.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelTextFormat.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.Constructor">
            <summary>设置 ExcelTextFormat.ExcelTextFormat() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.DataTypesGet">
            <summary>设置 ExcelTextFormat.get_DataTypes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.DataTypesSeteDataTypesArray">
            <summary>设置 ExcelTextFormat.set_DataTypes(eDataTypes[] value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.DelimiterGet">
            <summary>设置 ExcelTextFormat.get_Delimiter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.DelimiterSetChar">
            <summary>设置 ExcelTextFormat.set_Delimiter(Char value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.EOLGet">
            <summary>设置 ExcelTextFormat.get_EOL() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.EOLSetString">
            <summary>设置 ExcelTextFormat.set_EOL(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.EncodingGet">
            <summary>设置 ExcelTextFormat.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.EncodingSetEncoding">
            <summary>设置 ExcelTextFormat.set_Encoding(Encoding value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.SkipLinesBeginningGet">
            <summary>设置 ExcelTextFormat.get_SkipLinesBeginning() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.SkipLinesBeginningSetInt32">
            <summary>设置 ExcelTextFormat.set_SkipLinesBeginning(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.SkipLinesEndGet">
            <summary>设置 ExcelTextFormat.get_SkipLinesEnd() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.SkipLinesEndSetInt32">
            <summary>设置 ExcelTextFormat.set_SkipLinesEnd(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.TextQualifierGet">
            <summary>设置 ExcelTextFormat.get_TextQualifier() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.TextQualifierSetChar">
            <summary>设置 ExcelTextFormat.set_TextQualifier(Char value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances.DataTypesGet">
            <summary>设置 ExcelTextFormat.get_DataTypes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances.DataTypesSeteDataTypesArray">
            <summary>设置 ExcelTextFormat.set_DataTypes(eDataTypes[] value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances.DelimiterGet">
            <summary>设置 ExcelTextFormat.get_Delimiter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances.DelimiterSetChar">
            <summary>设置 ExcelTextFormat.set_Delimiter(Char value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances.EOLGet">
            <summary>设置 ExcelTextFormat.get_EOL() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances.EOLSetString">
            <summary>设置 ExcelTextFormat.set_EOL(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances.EncodingGet">
            <summary>设置 ExcelTextFormat.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances.EncodingSetEncoding">
            <summary>设置 ExcelTextFormat.set_Encoding(Encoding value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances.SkipLinesBeginningGet">
            <summary>设置 ExcelTextFormat.get_SkipLinesBeginning() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances.SkipLinesBeginningSetInt32">
            <summary>设置 ExcelTextFormat.set_SkipLinesBeginning(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances.SkipLinesEndGet">
            <summary>设置 ExcelTextFormat.get_SkipLinesEnd() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances.SkipLinesEndSetInt32">
            <summary>设置 ExcelTextFormat.set_SkipLinesEnd(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances.TextQualifierGet">
            <summary>设置 ExcelTextFormat.get_TextQualifier() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelTextFormat.AllInstances.TextQualifierSetChar">
            <summary>设置 ExcelTextFormat.set_TextQualifier(Char value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelWorkbook">
            <summary>OfficeOpenXml.ExcelWorkbook 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorkbook.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorkbook.#ctor(OfficeOpenXml.ExcelWorkbook)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorkbook.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorkbook.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AddPivotTableStringUri">
            <summary>设置 ExcelWorkbook.AddPivotTable(String cacheID, Uri defUri) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.CalcModeGet">
            <summary>设置 ExcelWorkbook.get_CalcMode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.CalcModeSetExcelCalcMode">
            <summary>设置 ExcelWorkbook.set_CalcMode(ExcelCalcMode value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.ChangeContentTypeWorkbookString">
            <summary>设置 ExcelWorkbook.ChangeContentTypeWorkbook(String contentType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.CodeModuleGet">
            <summary>设置 ExcelWorkbook.get_CodeModule() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.CodeModuleNameGet">
            <summary>设置 ExcelWorkbook.get_CodeModuleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.CodeModuleNameSetString">
            <summary>设置 ExcelWorkbook.set_CodeModuleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.CodeNameChangeString">
            <summary>设置 ExcelWorkbook.CodeNameChange(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.ConstructorExcelPackageXmlNamespaceManager">
            <summary>设置 ExcelWorkbook.ExcelWorkbook(ExcelPackage package, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.CreateVBAProject">
            <summary>设置 ExcelWorkbook.CreateVBAProject() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.CreateWorkbookXmlXmlNamespaceManager">
            <summary>设置 ExcelWorkbook.CreateWorkbookXml(XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.DeleteCalcChain">
            <summary>设置 ExcelWorkbook.DeleteCalcChain() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.ExcelDecodeStringString">
            <summary>设置 ExcelWorkbook.ExcelDecodeString(String t) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.ExcelEncodeStringStreamWriterString">
            <summary>设置 ExcelWorkbook.ExcelEncodeString(StreamWriter sw, String t) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.ExistsNames">
            <summary>设置 ExcelWorkbook.ExistsNames() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.ExistsPivotTableNameString">
            <summary>设置 ExcelWorkbook.ExistsPivotTableName(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.ExistsTableNameString">
            <summary>设置 ExcelWorkbook.ExistsTableName(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.GetDefinedNames">
            <summary>设置 ExcelWorkbook.GetDefinedNames() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.GetExternalReferences">
            <summary>设置 ExcelWorkbook.GetExternalReferences() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.GetSharedStrings">
            <summary>设置 ExcelWorkbook.GetSharedStrings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.MaxFontWidthGet">
            <summary>设置 ExcelWorkbook.get_MaxFontWidth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.MaxFontWidthSetDecimal">
            <summary>设置 ExcelWorkbook.set_MaxFontWidth(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.NamesGet">
            <summary>设置 ExcelWorkbook.get_Names() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.PartGet">
            <summary>设置 ExcelWorkbook.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.PropertiesGet">
            <summary>设置 ExcelWorkbook.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.ProtectionGet">
            <summary>设置 ExcelWorkbook.get_Protection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.Save">
            <summary>设置 ExcelWorkbook.Save() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.SetNameElementExcelNamedRangeXmlElement">
            <summary>设置 ExcelWorkbook.SetNameElement(ExcelNamedRange name, XmlElement elem) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.SharedStringsUriGet">
            <summary>设置 ExcelWorkbook.get_SharedStringsUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.SharedStringsUriSetUri">
            <summary>设置 ExcelWorkbook.set_SharedStringsUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.StylesGet">
            <summary>设置 ExcelWorkbook.get_Styles() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.StylesUriGet">
            <summary>设置 ExcelWorkbook.get_StylesUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.StylesUriSetUri">
            <summary>设置 ExcelWorkbook.set_StylesUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.StylesXmlGet">
            <summary>设置 ExcelWorkbook.get_StylesXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.StylesXmlSetXmlDocument">
            <summary>设置 ExcelWorkbook.set_StylesXml(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.UpdateDefinedNamesXml">
            <summary>设置 ExcelWorkbook.UpdateDefinedNamesXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.UpdateSharedStringsXml">
            <summary>设置 ExcelWorkbook.UpdateSharedStringsXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.ValidateDataValidations">
            <summary>设置 ExcelWorkbook.ValidateDataValidations() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.VbaProjectGet">
            <summary>设置 ExcelWorkbook.get_VbaProject() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.ViewGet">
            <summary>设置 ExcelWorkbook.get_View() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.WorkbookUriGet">
            <summary>设置 ExcelWorkbook.get_WorkbookUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.WorkbookUriSetUri">
            <summary>设置 ExcelWorkbook.set_WorkbookUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.WorkbookXmlGet">
            <summary>设置 ExcelWorkbook.get_WorkbookXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.WorksheetsGet">
            <summary>设置 ExcelWorkbook.get_Worksheets() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.AddPivotTableStringUri">
            <summary>设置 ExcelWorkbook.AddPivotTable(String cacheID, Uri defUri) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.CalcModeGet">
            <summary>设置 ExcelWorkbook.get_CalcMode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.CalcModeSetExcelCalcMode">
            <summary>设置 ExcelWorkbook.set_CalcMode(ExcelCalcMode value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.ChangeContentTypeWorkbookString">
            <summary>设置 ExcelWorkbook.ChangeContentTypeWorkbook(String contentType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.CodeModuleGet">
            <summary>设置 ExcelWorkbook.get_CodeModule() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.CodeModuleNameGet">
            <summary>设置 ExcelWorkbook.get_CodeModuleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.CodeModuleNameSetString">
            <summary>设置 ExcelWorkbook.set_CodeModuleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.CodeNameChangeString">
            <summary>设置 ExcelWorkbook.CodeNameChange(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.CreateVBAProject">
            <summary>设置 ExcelWorkbook.CreateVBAProject() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.CreateWorkbookXmlXmlNamespaceManager">
            <summary>设置 ExcelWorkbook.CreateWorkbookXml(XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.DeleteCalcChain">
            <summary>设置 ExcelWorkbook.DeleteCalcChain() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.ExcelDecodeStringString">
            <summary>设置 ExcelWorkbook.ExcelDecodeString(String t) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.ExcelEncodeStringStreamWriterString">
            <summary>设置 ExcelWorkbook.ExcelEncodeString(StreamWriter sw, String t) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.ExistsNames">
            <summary>设置 ExcelWorkbook.ExistsNames() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.ExistsPivotTableNameString">
            <summary>设置 ExcelWorkbook.ExistsPivotTableName(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.ExistsTableNameString">
            <summary>设置 ExcelWorkbook.ExistsTableName(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.GetDefinedNames">
            <summary>设置 ExcelWorkbook.GetDefinedNames() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.GetExternalReferences">
            <summary>设置 ExcelWorkbook.GetExternalReferences() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.GetSharedStrings">
            <summary>设置 ExcelWorkbook.GetSharedStrings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.MaxFontWidthGet">
            <summary>设置 ExcelWorkbook.get_MaxFontWidth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.MaxFontWidthSetDecimal">
            <summary>设置 ExcelWorkbook.set_MaxFontWidth(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.NamesGet">
            <summary>设置 ExcelWorkbook.get_Names() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.PartGet">
            <summary>设置 ExcelWorkbook.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.PropertiesGet">
            <summary>设置 ExcelWorkbook.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.ProtectionGet">
            <summary>设置 ExcelWorkbook.get_Protection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.Save">
            <summary>设置 ExcelWorkbook.Save() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.SetNameElementExcelNamedRangeXmlElement">
            <summary>设置 ExcelWorkbook.SetNameElement(ExcelNamedRange name, XmlElement elem) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.SharedStringsUriGet">
            <summary>设置 ExcelWorkbook.get_SharedStringsUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.SharedStringsUriSetUri">
            <summary>设置 ExcelWorkbook.set_SharedStringsUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.StylesGet">
            <summary>设置 ExcelWorkbook.get_Styles() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.StylesUriGet">
            <summary>设置 ExcelWorkbook.get_StylesUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.StylesUriSetUri">
            <summary>设置 ExcelWorkbook.set_StylesUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.StylesXmlGet">
            <summary>设置 ExcelWorkbook.get_StylesXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.StylesXmlSetXmlDocument">
            <summary>设置 ExcelWorkbook.set_StylesXml(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.UpdateDefinedNamesXml">
            <summary>设置 ExcelWorkbook.UpdateDefinedNamesXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.UpdateSharedStringsXml">
            <summary>设置 ExcelWorkbook.UpdateSharedStringsXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.ValidateDataValidations">
            <summary>设置 ExcelWorkbook.ValidateDataValidations() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.VbaProjectGet">
            <summary>设置 ExcelWorkbook.get_VbaProject() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.ViewGet">
            <summary>设置 ExcelWorkbook.get_View() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.WorkbookUriGet">
            <summary>设置 ExcelWorkbook.get_WorkbookUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.WorkbookUriSetUri">
            <summary>设置 ExcelWorkbook.set_WorkbookUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.WorkbookXmlGet">
            <summary>设置 ExcelWorkbook.get_WorkbookXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbook.AllInstances.WorksheetsGet">
            <summary>设置 ExcelWorkbook.get_Worksheets() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelWorkbookView">
            <summary>OfficeOpenXml.ExcelWorkbookView 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorkbookView.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorkbookView.#ctor(OfficeOpenXml.ExcelWorkbookView)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorkbookView.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorkbookView.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.ConstructorXmlNamespaceManagerXmlNodeExcelWorkbook">
            <summary>设置 ExcelWorkbookView.ExcelWorkbookView(XmlNamespaceManager ns, XmlNode node, ExcelWorkbook wb) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.HeightGet">
            <summary>设置 ExcelWorkbookView.get_Height() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.HeightSetInt32">
            <summary>设置 ExcelWorkbookView.set_Height(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.LeftGet">
            <summary>设置 ExcelWorkbookView.get_Left() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.LeftSetInt32">
            <summary>设置 ExcelWorkbookView.set_Left(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.MinimizedGet">
            <summary>设置 ExcelWorkbookView.get_Minimized() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.MinimizedSetBoolean">
            <summary>设置 ExcelWorkbookView.set_Minimized(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.SetWindowSizeInt32Int32Int32Int32">
            <summary>设置 ExcelWorkbookView.SetWindowSize(Int32 left, Int32 top, Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.ShowHorizontalScrollBarGet">
            <summary>设置 ExcelWorkbookView.get_ShowHorizontalScrollBar() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.ShowHorizontalScrollBarSetBoolean">
            <summary>设置 ExcelWorkbookView.set_ShowHorizontalScrollBar(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.ShowSheetTabsGet">
            <summary>设置 ExcelWorkbookView.get_ShowSheetTabs() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.ShowSheetTabsSetBoolean">
            <summary>设置 ExcelWorkbookView.set_ShowSheetTabs(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.ShowVerticalScrollBarGet">
            <summary>设置 ExcelWorkbookView.get_ShowVerticalScrollBar() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.ShowVerticalScrollBarSetBoolean">
            <summary>设置 ExcelWorkbookView.set_ShowVerticalScrollBar(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.TopGet">
            <summary>设置 ExcelWorkbookView.get_Top() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.TopSetInt32">
            <summary>设置 ExcelWorkbookView.set_Top(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.WidthGet">
            <summary>设置 ExcelWorkbookView.get_Width() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.WidthSetInt32">
            <summary>设置 ExcelWorkbookView.set_Width(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.HeightGet">
            <summary>设置 ExcelWorkbookView.get_Height() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.HeightSetInt32">
            <summary>设置 ExcelWorkbookView.set_Height(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.LeftGet">
            <summary>设置 ExcelWorkbookView.get_Left() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.LeftSetInt32">
            <summary>设置 ExcelWorkbookView.set_Left(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.MinimizedGet">
            <summary>设置 ExcelWorkbookView.get_Minimized() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.MinimizedSetBoolean">
            <summary>设置 ExcelWorkbookView.set_Minimized(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.SetWindowSizeInt32Int32Int32Int32">
            <summary>设置 ExcelWorkbookView.SetWindowSize(Int32 left, Int32 top, Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.ShowHorizontalScrollBarGet">
            <summary>设置 ExcelWorkbookView.get_ShowHorizontalScrollBar() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.ShowHorizontalScrollBarSetBoolean">
            <summary>设置 ExcelWorkbookView.set_ShowHorizontalScrollBar(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.ShowSheetTabsGet">
            <summary>设置 ExcelWorkbookView.get_ShowSheetTabs() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.ShowSheetTabsSetBoolean">
            <summary>设置 ExcelWorkbookView.set_ShowSheetTabs(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.ShowVerticalScrollBarGet">
            <summary>设置 ExcelWorkbookView.get_ShowVerticalScrollBar() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.ShowVerticalScrollBarSetBoolean">
            <summary>设置 ExcelWorkbookView.set_ShowVerticalScrollBar(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.TopGet">
            <summary>设置 ExcelWorkbookView.get_Top() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.TopSetInt32">
            <summary>设置 ExcelWorkbookView.set_Top(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.WidthGet">
            <summary>设置 ExcelWorkbookView.get_Width() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorkbookView.AllInstances.WidthSetInt32">
            <summary>设置 ExcelWorkbookView.set_Width(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelWorksheet">
            <summary>OfficeOpenXml.ExcelWorksheet 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheet.#ctor(OfficeOpenXml.ExcelWorksheet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheet.GetTypedValueOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 ExcelWorksheet.GetTypedValue(Object v) 的 填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheet.GetValueOf1Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,``0})">
            <summary>设置 ExcelWorksheet.GetValue(Int32 Row, Int32 Column) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AddRowXmlTextReaderInt32">
            <summary>设置 ExcelWorksheet.AddRow(XmlTextReader xr, Int32 row) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AutoFilterAddressGet">
            <summary>设置 ExcelWorksheet.get_AutoFilterAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AutoFilterAddressSetExcelAddressBase">
            <summary>设置 ExcelWorksheet.set_AutoFilterAddress(ExcelAddressBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.BackgroundImageGet">
            <summary>设置 ExcelWorksheet.get_BackgroundImage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.CellsGet">
            <summary>设置 ExcelWorksheet.get_Cells() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ClearNodes">
            <summary>设置 ExcelWorksheet.ClearNodes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.CodeModuleGet">
            <summary>设置 ExcelWorksheet.get_CodeModule() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.CodeModuleNameGet">
            <summary>设置 ExcelWorksheet.get_CodeModuleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.CodeModuleNameSetString">
            <summary>设置 ExcelWorksheet.set_CodeModuleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.CodeNameChangeString">
            <summary>设置 ExcelWorksheet.CodeNameChange(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ColumnInt32">
            <summary>设置 ExcelWorksheet.Column(Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.CommentsGet">
            <summary>设置 ExcelWorksheet.get_Comments() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ConditionalFormattingGet">
            <summary>设置 ExcelWorksheet.get_ConditionalFormatting() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ConstructorXmlNamespaceManagerExcelPackageStringUriStringInt32Int32eWorkSheetHidden">
            <summary>设置 ExcelWorksheet.ExcelWorksheet(XmlNamespaceManager ns, ExcelPackage excelPackage, String relID, Uri uriWorksheet, String sheetName, Int32 sheetID, Int32 positionID, eWorkSheetHidden hide) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.CopyColumnExcelColumnInt32Int32">
            <summary>设置 ExcelWorksheet.CopyColumn(ExcelColumn c, Int32 col, Int32 maxCol) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.CreateHyperLinkCollection">
            <summary>设置 ExcelWorksheet.CreateHyperLinkCollection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.CreateVmlCollection">
            <summary>设置 ExcelWorksheet.CreateVmlCollection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.CreateXml">
            <summary>设置 ExcelWorksheet.CreateXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.DataValidationsGet">
            <summary>设置 ExcelWorksheet.get_DataValidations() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.DefaultColWidthGet">
            <summary>设置 ExcelWorksheet.get_DefaultColWidth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.DefaultColWidthSetDouble">
            <summary>设置 ExcelWorksheet.set_DefaultColWidth(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.DefaultRowHeightGet">
            <summary>设置 ExcelWorksheet.get_DefaultRowHeight() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.DefaultRowHeightSetDouble">
            <summary>设置 ExcelWorksheet.set_DefaultRowHeight(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.DeletePrinterSettings">
            <summary>设置 ExcelWorksheet.DeletePrinterSettings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.DeleteRowInt32Int32">
            <summary>设置 ExcelWorksheet.DeleteRow(Int32 rowFrom, Int32 rows) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.DeleteRowInt32Int32Boolean">
            <summary>设置 ExcelWorksheet.DeleteRow(Int32 rowFrom, Int32 rows, Boolean shiftOtherRowsUp) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.DimensionGet">
            <summary>设置 ExcelWorksheet.get_Dimension() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.DrawingsGet">
            <summary>设置 ExcelWorksheet.get_Drawings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.FixMergedCellsInt32Int32Boolean">
            <summary>设置 ExcelWorksheet.FixMergedCells(Int32 position, Int32 rows, Boolean delete) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.FixSharedFormulasRowsInt32Int32">
            <summary>设置 ExcelWorksheet.FixSharedFormulasRows(Int32 position, Int32 rows) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.GetBlockPosStringStringInt32RefInt32Ref">
            <summary>设置 ExcelWorksheet.GetBlockPos(String xml, String tag, Int32&amp; start, Int32&amp; end) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.GetMaxShareFunctionIndexBoolean">
            <summary>设置 ExcelWorksheet.GetMaxShareFunctionIndex(Boolean isArray) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.GetMergeCellIdInt32Int32">
            <summary>设置 ExcelWorksheet.GetMergeCellId(Int32 row, Int32 column) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.GetStyleIDString">
            <summary>设置 ExcelWorksheet.GetStyleID(String StyleName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.GetTotalFunctionExcelTableColumnString">
            <summary>设置 ExcelWorksheet.GetTotalFunction(ExcelTableColumn col, String FunctionNum) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.GetValueInt32Int32">
            <summary>设置 ExcelWorksheet.GetValue(Int32 Row, Int32 Column) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.GetWorkSheetXmlStreamInt64Int64EncodingOut">
            <summary>设置 ExcelWorksheet.GetWorkSheetXml(Stream stream, Int64 start, Int64 end, Encoding&amp; encoding) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.HeaderFooterGet">
            <summary>设置 ExcelWorksheet.get_HeaderFooter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.HiddenGet">
            <summary>设置 ExcelWorksheet.get_Hidden() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.HiddenSeteWorkSheetHidden">
            <summary>设置 ExcelWorksheet.set_Hidden(eWorkSheetHidden value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.IndexGet">
            <summary>设置 ExcelWorksheet.get_Index() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.InsertRowInt32Int32">
            <summary>设置 ExcelWorksheet.InsertRow(Int32 rowFrom, Int32 rows) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.InsertRowInt32Int32Int32">
            <summary>设置 ExcelWorksheet.InsertRow(Int32 rowFrom, Int32 rows, Int32 copyStylesFromRow) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.LoadCellsXmlTextReader">
            <summary>设置 ExcelWorksheet.LoadCells(XmlTextReader xr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.LoadColPageBreakesXmlTextReader">
            <summary>设置 ExcelWorksheet.LoadColPageBreakes(XmlTextReader xr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.LoadColumnsXmlTextReader">
            <summary>设置 ExcelWorksheet.LoadColumns(XmlTextReader xr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.LoadHyperLinksXmlTextReader">
            <summary>设置 ExcelWorksheet.LoadHyperLinks(XmlTextReader xr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.LoadMergeCellsXmlTextReader">
            <summary>设置 ExcelWorksheet.LoadMergeCells(XmlTextReader xr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.LoadRowPageBreakesXmlTextReader">
            <summary>设置 ExcelWorksheet.LoadRowPageBreakes(XmlTextReader xr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.MergedCellsGet">
            <summary>设置 ExcelWorksheet.get_MergedCells() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.NameGet">
            <summary>设置 ExcelWorksheet.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.NameSetString">
            <summary>设置 ExcelWorksheet.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.NamesGet">
            <summary>设置 ExcelWorksheet.get_Names() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.OutLineApplyStyleGet">
            <summary>设置 ExcelWorksheet.get_OutLineApplyStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.OutLineApplyStyleSetBoolean">
            <summary>设置 ExcelWorksheet.set_OutLineApplyStyle(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.OutLineSummaryBelowGet">
            <summary>设置 ExcelWorksheet.get_OutLineSummaryBelow() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.OutLineSummaryBelowSetBoolean">
            <summary>设置 ExcelWorksheet.set_OutLineSummaryBelow(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.OutLineSummaryRightGet">
            <summary>设置 ExcelWorksheet.get_OutLineSummaryRight() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.OutLineSummaryRightSetBoolean">
            <summary>设置 ExcelWorksheet.set_OutLineSummaryRight(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.PartGet">
            <summary>设置 ExcelWorksheet.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.PivotTablesGet">
            <summary>设置 ExcelWorksheet.get_PivotTables() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.PositionIDGet">
            <summary>设置 ExcelWorksheet.get_PositionID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.PositionIDSetInt32">
            <summary>设置 ExcelWorksheet.set_PositionID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.PrinterSettingsGet">
            <summary>设置 ExcelWorksheet.get_PrinterSettings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ProtectionGet">
            <summary>设置 ExcelWorksheet.get_Protection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ReadUntilXmlTextReaderStringArray">
            <summary>设置 ExcelWorksheet.ReadUntil(XmlTextReader xr, String[] tagName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ReadXmlReaderUntilXmlTextReaderStringString">
            <summary>设置 ExcelWorksheet.ReadXmlReaderUntil(XmlTextReader xr, String nodeText, String altNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.RelationshipIDGet">
            <summary>设置 ExcelWorksheet.get_RelationshipID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.RemoveLegacyDrawingRelString">
            <summary>设置 ExcelWorksheet.RemoveLegacyDrawingRel(String relID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.RowInt32">
            <summary>设置 ExcelWorksheet.Row(Int32 row) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.Save">
            <summary>设置 ExcelWorksheet.Save() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.SaveComments">
            <summary>设置 ExcelWorksheet.SaveComments() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.SavePivotTables">
            <summary>设置 ExcelWorksheet.SavePivotTables() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.SaveTables">
            <summary>设置 ExcelWorksheet.SaveTables() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.SaveXml">
            <summary>设置 ExcelWorksheet.SaveXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.SelectExcelAddress">
            <summary>设置 ExcelWorksheet.Select(ExcelAddress Address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.SelectExcelAddressBoolean">
            <summary>设置 ExcelWorksheet.Select(ExcelAddress Address, Boolean SelectSheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.SelectString">
            <summary>设置 ExcelWorksheet.Select(String Address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.SelectStringBoolean">
            <summary>设置 ExcelWorksheet.Select(String Address, Boolean SelectSheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.SelectedRangeGet">
            <summary>设置 ExcelWorksheet.get_SelectedRange() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.SetHFLegacyDrawingRelString">
            <summary>设置 ExcelWorksheet.SetHFLegacyDrawingRel(String relID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.SetValueInt32Int32Object">
            <summary>设置 ExcelWorksheet.SetValue(Int32 Row, Int32 Column, Object Value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.SetValueStringObject">
            <summary>设置 ExcelWorksheet.SetValue(String Address, Object Value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.SheetIDGet">
            <summary>设置 ExcelWorksheet.get_SheetID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.TabColorGet">
            <summary>设置 ExcelWorksheet.get_TabColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.TabColorSetColor">
            <summary>设置 ExcelWorksheet.set_TabColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.TablesGet">
            <summary>设置 ExcelWorksheet.get_Tables() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ToString">
            <summary>设置 ExcelWorksheet.ToString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.UpdateColBreaksStreamWriter">
            <summary>设置 ExcelWorksheet.UpdateColBreaks(StreamWriter sw) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.UpdateColumnDataStreamWriter">
            <summary>设置 ExcelWorksheet.UpdateColumnData(StreamWriter sw) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.UpdateHyperLinksStreamWriter">
            <summary>设置 ExcelWorksheet.UpdateHyperLinks(StreamWriter sw) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.UpdateMergedCellsStreamWriter">
            <summary>设置 ExcelWorksheet.UpdateMergedCells(StreamWriter sw) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.UpdateRowBreaksStreamWriter">
            <summary>设置 ExcelWorksheet.UpdateRowBreaks(StreamWriter sw) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.UpdateRowCellDataStreamWriter">
            <summary>设置 ExcelWorksheet.UpdateRowCellData(StreamWriter sw) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ViewGet">
            <summary>设置 ExcelWorksheet.get_View() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.WorkbookGet">
            <summary>设置 ExcelWorksheet.get_Workbook() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.WorksheetUriGet">
            <summary>设置 ExcelWorksheet.get_WorksheetUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.WorksheetXmlGet">
            <summary>设置 ExcelWorksheet.get_WorksheetXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.WriteRowStreamWriterExcelStyleCollectionOfExcelXfsInt32Int32">
            <summary>设置 ExcelWorksheet.WriteRow(StreamWriter sw, ExcelStyleCollection`1&lt;ExcelXfs&gt; cellXfs, Int32 prevRow, Int32 row) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.GetTypedValueOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{OfficeOpenXml.ExcelWorksheet,System.Object,``0})">
            <summary>设置 ExcelWorksheet.GetTypedValue(Object v) 的 填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.GetValueOf1Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{OfficeOpenXml.ExcelWorksheet,System.Int32,System.Int32,``0})">
            <summary>设置 ExcelWorksheet.GetValue(Int32 Row, Int32 Column) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.AddRowXmlTextReaderInt32">
            <summary>设置 ExcelWorksheet.AddRow(XmlTextReader xr, Int32 row) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.AutoFilterAddressGet">
            <summary>设置 ExcelWorksheet.get_AutoFilterAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.AutoFilterAddressSetExcelAddressBase">
            <summary>设置 ExcelWorksheet.set_AutoFilterAddress(ExcelAddressBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.BackgroundImageGet">
            <summary>设置 ExcelWorksheet.get_BackgroundImage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.CellsGet">
            <summary>设置 ExcelWorksheet.get_Cells() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.ClearNodes">
            <summary>设置 ExcelWorksheet.ClearNodes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.CodeModuleGet">
            <summary>设置 ExcelWorksheet.get_CodeModule() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.CodeModuleNameGet">
            <summary>设置 ExcelWorksheet.get_CodeModuleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.CodeModuleNameSetString">
            <summary>设置 ExcelWorksheet.set_CodeModuleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.CodeNameChangeString">
            <summary>设置 ExcelWorksheet.CodeNameChange(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.ColumnInt32">
            <summary>设置 ExcelWorksheet.Column(Int32 col) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.CommentsGet">
            <summary>设置 ExcelWorksheet.get_Comments() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.ConditionalFormattingGet">
            <summary>设置 ExcelWorksheet.get_ConditionalFormatting() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.CopyColumnExcelColumnInt32Int32">
            <summary>设置 ExcelWorksheet.CopyColumn(ExcelColumn c, Int32 col, Int32 maxCol) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.CreateHyperLinkCollection">
            <summary>设置 ExcelWorksheet.CreateHyperLinkCollection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.CreateVmlCollection">
            <summary>设置 ExcelWorksheet.CreateVmlCollection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.CreateXml">
            <summary>设置 ExcelWorksheet.CreateXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.DataValidationsGet">
            <summary>设置 ExcelWorksheet.get_DataValidations() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.DefaultColWidthGet">
            <summary>设置 ExcelWorksheet.get_DefaultColWidth() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.DefaultColWidthSetDouble">
            <summary>设置 ExcelWorksheet.set_DefaultColWidth(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.DefaultRowHeightGet">
            <summary>设置 ExcelWorksheet.get_DefaultRowHeight() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.DefaultRowHeightSetDouble">
            <summary>设置 ExcelWorksheet.set_DefaultRowHeight(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.DeletePrinterSettings">
            <summary>设置 ExcelWorksheet.DeletePrinterSettings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.DeleteRowInt32Int32">
            <summary>设置 ExcelWorksheet.DeleteRow(Int32 rowFrom, Int32 rows) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.DeleteRowInt32Int32Boolean">
            <summary>设置 ExcelWorksheet.DeleteRow(Int32 rowFrom, Int32 rows, Boolean shiftOtherRowsUp) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.DimensionGet">
            <summary>设置 ExcelWorksheet.get_Dimension() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.DrawingsGet">
            <summary>设置 ExcelWorksheet.get_Drawings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.FixMergedCellsInt32Int32Boolean">
            <summary>设置 ExcelWorksheet.FixMergedCells(Int32 position, Int32 rows, Boolean delete) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.FixSharedFormulasRowsInt32Int32">
            <summary>设置 ExcelWorksheet.FixSharedFormulasRows(Int32 position, Int32 rows) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.GetBlockPosStringStringInt32RefInt32Ref">
            <summary>设置 ExcelWorksheet.GetBlockPos(String xml, String tag, Int32&amp; start, Int32&amp; end) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.GetMaxShareFunctionIndexBoolean">
            <summary>设置 ExcelWorksheet.GetMaxShareFunctionIndex(Boolean isArray) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.GetMergeCellIdInt32Int32">
            <summary>设置 ExcelWorksheet.GetMergeCellId(Int32 row, Int32 column) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.GetStyleIDString">
            <summary>设置 ExcelWorksheet.GetStyleID(String StyleName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.GetValueInt32Int32">
            <summary>设置 ExcelWorksheet.GetValue(Int32 Row, Int32 Column) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.GetWorkSheetXmlStreamInt64Int64EncodingOut">
            <summary>设置 ExcelWorksheet.GetWorkSheetXml(Stream stream, Int64 start, Int64 end, Encoding&amp; encoding) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.HeaderFooterGet">
            <summary>设置 ExcelWorksheet.get_HeaderFooter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.HiddenGet">
            <summary>设置 ExcelWorksheet.get_Hidden() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.HiddenSeteWorkSheetHidden">
            <summary>设置 ExcelWorksheet.set_Hidden(eWorkSheetHidden value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.IndexGet">
            <summary>设置 ExcelWorksheet.get_Index() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.InsertRowInt32Int32">
            <summary>设置 ExcelWorksheet.InsertRow(Int32 rowFrom, Int32 rows) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.InsertRowInt32Int32Int32">
            <summary>设置 ExcelWorksheet.InsertRow(Int32 rowFrom, Int32 rows, Int32 copyStylesFromRow) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.LoadCellsXmlTextReader">
            <summary>设置 ExcelWorksheet.LoadCells(XmlTextReader xr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.LoadColPageBreakesXmlTextReader">
            <summary>设置 ExcelWorksheet.LoadColPageBreakes(XmlTextReader xr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.LoadColumnsXmlTextReader">
            <summary>设置 ExcelWorksheet.LoadColumns(XmlTextReader xr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.LoadHyperLinksXmlTextReader">
            <summary>设置 ExcelWorksheet.LoadHyperLinks(XmlTextReader xr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.LoadMergeCellsXmlTextReader">
            <summary>设置 ExcelWorksheet.LoadMergeCells(XmlTextReader xr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.LoadRowPageBreakesXmlTextReader">
            <summary>设置 ExcelWorksheet.LoadRowPageBreakes(XmlTextReader xr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.MergedCellsGet">
            <summary>设置 ExcelWorksheet.get_MergedCells() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.NameGet">
            <summary>设置 ExcelWorksheet.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.NameSetString">
            <summary>设置 ExcelWorksheet.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.NamesGet">
            <summary>设置 ExcelWorksheet.get_Names() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.OutLineApplyStyleGet">
            <summary>设置 ExcelWorksheet.get_OutLineApplyStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.OutLineApplyStyleSetBoolean">
            <summary>设置 ExcelWorksheet.set_OutLineApplyStyle(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.OutLineSummaryBelowGet">
            <summary>设置 ExcelWorksheet.get_OutLineSummaryBelow() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.OutLineSummaryBelowSetBoolean">
            <summary>设置 ExcelWorksheet.set_OutLineSummaryBelow(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.OutLineSummaryRightGet">
            <summary>设置 ExcelWorksheet.get_OutLineSummaryRight() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.OutLineSummaryRightSetBoolean">
            <summary>设置 ExcelWorksheet.set_OutLineSummaryRight(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.PartGet">
            <summary>设置 ExcelWorksheet.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.PivotTablesGet">
            <summary>设置 ExcelWorksheet.get_PivotTables() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.PositionIDGet">
            <summary>设置 ExcelWorksheet.get_PositionID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.PositionIDSetInt32">
            <summary>设置 ExcelWorksheet.set_PositionID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.PrinterSettingsGet">
            <summary>设置 ExcelWorksheet.get_PrinterSettings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.ProtectionGet">
            <summary>设置 ExcelWorksheet.get_Protection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.ReadUntilXmlTextReaderStringArray">
            <summary>设置 ExcelWorksheet.ReadUntil(XmlTextReader xr, String[] tagName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.RelationshipIDGet">
            <summary>设置 ExcelWorksheet.get_RelationshipID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.RemoveLegacyDrawingRelString">
            <summary>设置 ExcelWorksheet.RemoveLegacyDrawingRel(String relID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.RowInt32">
            <summary>设置 ExcelWorksheet.Row(Int32 row) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.Save">
            <summary>设置 ExcelWorksheet.Save() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.SaveComments">
            <summary>设置 ExcelWorksheet.SaveComments() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.SavePivotTables">
            <summary>设置 ExcelWorksheet.SavePivotTables() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.SaveTables">
            <summary>设置 ExcelWorksheet.SaveTables() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.SaveXml">
            <summary>设置 ExcelWorksheet.SaveXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.SelectExcelAddress">
            <summary>设置 ExcelWorksheet.Select(ExcelAddress Address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.SelectExcelAddressBoolean">
            <summary>设置 ExcelWorksheet.Select(ExcelAddress Address, Boolean SelectSheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.SelectString">
            <summary>设置 ExcelWorksheet.Select(String Address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.SelectStringBoolean">
            <summary>设置 ExcelWorksheet.Select(String Address, Boolean SelectSheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.SelectedRangeGet">
            <summary>设置 ExcelWorksheet.get_SelectedRange() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.SetHFLegacyDrawingRelString">
            <summary>设置 ExcelWorksheet.SetHFLegacyDrawingRel(String relID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.SetValueInt32Int32Object">
            <summary>设置 ExcelWorksheet.SetValue(Int32 Row, Int32 Column, Object Value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.SetValueStringObject">
            <summary>设置 ExcelWorksheet.SetValue(String Address, Object Value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.SheetIDGet">
            <summary>设置 ExcelWorksheet.get_SheetID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.TabColorGet">
            <summary>设置 ExcelWorksheet.get_TabColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.TabColorSetColor">
            <summary>设置 ExcelWorksheet.set_TabColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.TablesGet">
            <summary>设置 ExcelWorksheet.get_Tables() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.ToString01">
            <summary>设置 ExcelWorksheet.ToString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.UpdateColBreaksStreamWriter">
            <summary>设置 ExcelWorksheet.UpdateColBreaks(StreamWriter sw) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.UpdateColumnDataStreamWriter">
            <summary>设置 ExcelWorksheet.UpdateColumnData(StreamWriter sw) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.UpdateHyperLinksStreamWriter">
            <summary>设置 ExcelWorksheet.UpdateHyperLinks(StreamWriter sw) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.UpdateMergedCellsStreamWriter">
            <summary>设置 ExcelWorksheet.UpdateMergedCells(StreamWriter sw) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.UpdateRowBreaksStreamWriter">
            <summary>设置 ExcelWorksheet.UpdateRowBreaks(StreamWriter sw) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.UpdateRowCellDataStreamWriter">
            <summary>设置 ExcelWorksheet.UpdateRowCellData(StreamWriter sw) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.ViewGet">
            <summary>设置 ExcelWorksheet.get_View() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.WorkbookGet">
            <summary>设置 ExcelWorksheet.get_Workbook() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.WorksheetUriGet">
            <summary>设置 ExcelWorksheet.get_WorksheetUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.WorksheetXmlGet">
            <summary>设置 ExcelWorksheet.get_WorksheetXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.AllInstances.WriteRowStreamWriterExcelStyleCollectionOfExcelXfsInt32Int32">
            <summary>设置 ExcelWorksheet.WriteRow(StreamWriter sw, ExcelStyleCollection`1&lt;ExcelXfs&gt; cellXfs, Int32 prevRow, Int32 row) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1">
            <summary>OfficeOpenXml.ExcelWorksheet+MergeCellsCollection`1 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.#ctor(OfficeOpenXml.ExcelWorksheet.MergeCellsCollection{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.Constructor">
            <summary>设置 MergeCellsCollection`1.MergeCellsCollection`1() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.CountGet">
            <summary>设置 MergeCellsCollection`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.GetEnumerator">
            <summary>设置 MergeCellsCollection`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.ItemGetInt32">
            <summary>设置 MergeCellsCollection`1.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.ListGet">
            <summary>设置 MergeCellsCollection`1.get_List() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.RemoveT0">
            <summary>设置 MergeCellsCollection`1.Remove(!0 Item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MergeCellsCollection`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.AllInstances.CountGet">
            <summary>设置 MergeCellsCollection`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.AllInstances.GetEnumerator">
            <summary>设置 MergeCellsCollection`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.AllInstances.ItemGetInt32">
            <summary>设置 MergeCellsCollection`1.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.AllInstances.ListGet">
            <summary>设置 MergeCellsCollection`1.get_List() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.AllInstances.RemoveT0">
            <summary>设置 MergeCellsCollection`1.Remove(!0 Item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheet.ShimMergeCellsCollection`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MergeCellsCollection`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelWorksheetView">
            <summary>OfficeOpenXml.ExcelWorksheetView 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheetView.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheetView.#ctor(OfficeOpenXml.ExcelWorksheetView)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheetView.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheetView.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ActiveCellGet">
            <summary>设置 ExcelWorksheetView.get_ActiveCell() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ActiveCellSetString">
            <summary>设置 ExcelWorksheetView.set_ActiveCell(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ConstructorXmlNamespaceManagerXmlNodeExcelWorksheet">
            <summary>设置 ExcelWorksheetView.ExcelWorksheetView(XmlNamespaceManager ns, XmlNode node, ExcelWorksheet xlWorksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.FreezePanesInt32Int32">
            <summary>设置 ExcelWorksheetView.FreezePanes(Int32 Row, Int32 Column) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.LoadPanes">
            <summary>设置 ExcelWorksheetView.LoadPanes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.PageBreakViewGet">
            <summary>设置 ExcelWorksheetView.get_PageBreakView() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.PageBreakViewSetBoolean">
            <summary>设置 ExcelWorksheetView.set_PageBreakView(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.PageLayoutViewGet">
            <summary>设置 ExcelWorksheetView.get_PageLayoutView() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.PageLayoutViewSetBoolean">
            <summary>设置 ExcelWorksheetView.set_PageLayoutView(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.PanesGet">
            <summary>设置 ExcelWorksheetView.get_Panes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.PanesSetExcelWorksheetViewExcelWorksheetPanesArray">
            <summary>设置 ExcelWorksheetView.set_Panes(ExcelWorksheetPanes[] value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.RemoveSelection">
            <summary>设置 ExcelWorksheetView.RemoveSelection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.RightToLeftGet">
            <summary>设置 ExcelWorksheetView.get_RightToLeft() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.RightToLeftSetBoolean">
            <summary>设置 ExcelWorksheetView.set_RightToLeft(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.SelectedRangeGet">
            <summary>设置 ExcelWorksheetView.get_SelectedRange() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.SelectedRangeSetString">
            <summary>设置 ExcelWorksheetView.set_SelectedRange(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.SelectionNodeGet">
            <summary>设置 ExcelWorksheetView.get_SelectionNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.SheetViewElementGet">
            <summary>设置 ExcelWorksheetView.get_SheetViewElement() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShowGridLinesGet">
            <summary>设置 ExcelWorksheetView.get_ShowGridLines() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShowGridLinesSetBoolean">
            <summary>设置 ExcelWorksheetView.set_ShowGridLines(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShowHeadersGet">
            <summary>设置 ExcelWorksheetView.get_ShowHeaders() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShowHeadersSetBoolean">
            <summary>设置 ExcelWorksheetView.set_ShowHeaders(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.TabSelectedGet">
            <summary>设置 ExcelWorksheetView.get_TabSelected() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.TabSelectedSetBoolean">
            <summary>设置 ExcelWorksheetView.set_TabSelected(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.UnFreezePanes">
            <summary>设置 ExcelWorksheetView.UnFreezePanes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.WindowProtectionGet">
            <summary>设置 ExcelWorksheetView.get_WindowProtection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.WindowProtectionSetBoolean">
            <summary>设置 ExcelWorksheetView.set_WindowProtection(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ZoomScaleGet">
            <summary>设置 ExcelWorksheetView.get_ZoomScale() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ZoomScaleSetInt32">
            <summary>设置 ExcelWorksheetView.set_ZoomScale(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.ActiveCellGet">
            <summary>设置 ExcelWorksheetView.get_ActiveCell() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.ActiveCellSetString">
            <summary>设置 ExcelWorksheetView.set_ActiveCell(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.FreezePanesInt32Int32">
            <summary>设置 ExcelWorksheetView.FreezePanes(Int32 Row, Int32 Column) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.LoadPanes">
            <summary>设置 ExcelWorksheetView.LoadPanes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.PageBreakViewGet">
            <summary>设置 ExcelWorksheetView.get_PageBreakView() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.PageBreakViewSetBoolean">
            <summary>设置 ExcelWorksheetView.set_PageBreakView(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.PageLayoutViewGet">
            <summary>设置 ExcelWorksheetView.get_PageLayoutView() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.PageLayoutViewSetBoolean">
            <summary>设置 ExcelWorksheetView.set_PageLayoutView(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.PanesGet">
            <summary>设置 ExcelWorksheetView.get_Panes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.PanesSetExcelWorksheetViewExcelWorksheetPanesArray">
            <summary>设置 ExcelWorksheetView.set_Panes(ExcelWorksheetPanes[] value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.RemoveSelection">
            <summary>设置 ExcelWorksheetView.RemoveSelection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.RightToLeftGet">
            <summary>设置 ExcelWorksheetView.get_RightToLeft() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.RightToLeftSetBoolean">
            <summary>设置 ExcelWorksheetView.set_RightToLeft(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.SelectedRangeGet">
            <summary>设置 ExcelWorksheetView.get_SelectedRange() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.SelectedRangeSetString">
            <summary>设置 ExcelWorksheetView.set_SelectedRange(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.SelectionNodeGet">
            <summary>设置 ExcelWorksheetView.get_SelectionNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.SheetViewElementGet">
            <summary>设置 ExcelWorksheetView.get_SheetViewElement() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.ShowGridLinesGet">
            <summary>设置 ExcelWorksheetView.get_ShowGridLines() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.ShowGridLinesSetBoolean">
            <summary>设置 ExcelWorksheetView.set_ShowGridLines(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.ShowHeadersGet">
            <summary>设置 ExcelWorksheetView.get_ShowHeaders() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.ShowHeadersSetBoolean">
            <summary>设置 ExcelWorksheetView.set_ShowHeaders(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.TabSelectedGet">
            <summary>设置 ExcelWorksheetView.get_TabSelected() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.TabSelectedSetBoolean">
            <summary>设置 ExcelWorksheetView.set_TabSelected(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.UnFreezePanes">
            <summary>设置 ExcelWorksheetView.UnFreezePanes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.WindowProtectionGet">
            <summary>设置 ExcelWorksheetView.get_WindowProtection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.WindowProtectionSetBoolean">
            <summary>设置 ExcelWorksheetView.set_WindowProtection(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.ZoomScaleGet">
            <summary>设置 ExcelWorksheetView.get_ZoomScale() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.AllInstances.ZoomScaleSetInt32">
            <summary>设置 ExcelWorksheetView.set_ZoomScale(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes">
            <summary>OfficeOpenXml.ExcelWorksheetView+ExcelWorksheetPanes 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.#ctor(OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetPanes)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.ActiveCellGet">
            <summary>设置 ExcelWorksheetPanes.get_ActiveCell() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.ActiveCellSetString">
            <summary>设置 ExcelWorksheetPanes.set_ActiveCell(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelWorksheetPanes.ExcelWorksheetPanes(XmlNamespaceManager ns, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.CreateSelectionElement">
            <summary>设置 ExcelWorksheetPanes.CreateSelectionElement() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.SelectedRangeGet">
            <summary>设置 ExcelWorksheetPanes.get_SelectedRange() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.SelectedRangeSetString">
            <summary>设置 ExcelWorksheetPanes.set_SelectedRange(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.AllInstances.ActiveCellGet">
            <summary>设置 ExcelWorksheetPanes.get_ActiveCell() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.AllInstances.ActiveCellSetString">
            <summary>设置 ExcelWorksheetPanes.set_ActiveCell(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.AllInstances.CreateSelectionElement">
            <summary>设置 ExcelWorksheetPanes.CreateSelectionElement() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.AllInstances.SelectedRangeGet">
            <summary>设置 ExcelWorksheetPanes.get_SelectedRange() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheetView.ShimExcelWorksheetPanes.AllInstances.SelectedRangeSetString">
            <summary>设置 ExcelWorksheetPanes.set_SelectedRange(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelWorksheets">
            <summary>OfficeOpenXml.ExcelWorksheets 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheets.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheets.#ctor(OfficeOpenXml.ExcelWorksheets)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheets.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheets.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheets.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimExcelWorksheets.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.ExcelWorksheet})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AddString">
            <summary>设置 ExcelWorksheets.Add(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AddStringExcelWorksheet">
            <summary>设置 ExcelWorksheets.Add(String Name, ExcelWorksheet Copy) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.CloneCellsExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CloneCells(ExcelWorksheet Copy, ExcelWorksheet added) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.ConstructorExcelPackageXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelWorksheets.ExcelWorksheets(ExcelPackage pck, XmlNamespaceManager nsm, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.CopyCommentExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CopyComment(ExcelWorksheet Copy, ExcelWorksheet workSheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.CopyDrawingExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CopyDrawing(ExcelWorksheet Copy, ExcelWorksheet workSheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.CopyHeaderFooterPicturesExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CopyHeaderFooterPictures(ExcelWorksheet Copy, ExcelWorksheet added) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.CopyPivotTableExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CopyPivotTable(ExcelWorksheet Copy, ExcelWorksheet added) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.CopySheetNamesExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CopySheetNames(ExcelWorksheet Copy, ExcelWorksheet added) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.CopyStringString">
            <summary>设置 ExcelWorksheets.Copy(String Name, String NewName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.CopyTableExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CopyTable(ExcelWorksheet Copy, ExcelWorksheet added) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.CopyTextExcelHeaderFooterTextExcelHeaderFooterText">
            <summary>设置 ExcelWorksheets.CopyText(ExcelHeaderFooterText from, ExcelHeaderFooterText to) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.CopyVmlDrawingExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CopyVmlDrawing(ExcelWorksheet origSheet, ExcelWorksheet newSheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.CountGet">
            <summary>设置 ExcelWorksheets.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.CreateNewWorksheet">
            <summary>设置 ExcelWorksheets.CreateNewWorksheet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.CreateWorkbookRelStringInt32Uri">
            <summary>设置 ExcelWorksheets.CreateWorkbookRel(String Name, Int32 sheetID, Uri uriWorksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.DeleteExcelWorksheet">
            <summary>设置 ExcelWorksheets.Delete(ExcelWorksheet Worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.DeleteInt32">
            <summary>设置 ExcelWorksheets.Delete(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.DeleteString">
            <summary>设置 ExcelWorksheets.Delete(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.GetByNameString">
            <summary>设置 ExcelWorksheets.GetByName(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.GetBySheetIDInt32">
            <summary>设置 ExcelWorksheets.GetBySheetID(Int32 localSheetID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.GetEnumerator">
            <summary>设置 ExcelWorksheets.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.ItemGetInt32">
            <summary>设置 ExcelWorksheets.get_Item(Int32 PositionID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.ItemGetString">
            <summary>设置 ExcelWorksheets.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.MoveAfterInt32Int32">
            <summary>设置 ExcelWorksheets.MoveAfter(Int32 sourcePositionId, Int32 targetPositionId) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.MoveAfterStringString">
            <summary>设置 ExcelWorksheets.MoveAfter(String sourceName, String targetName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.MoveBeforeInt32Int32">
            <summary>设置 ExcelWorksheets.MoveBefore(Int32 sourcePositionId, Int32 targetPositionId) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.MoveBeforeStringString">
            <summary>设置 ExcelWorksheets.MoveBefore(String sourceName, String targetName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.MoveInt32Int32Boolean">
            <summary>设置 ExcelWorksheets.Move(Int32 sourcePositionId, Int32 targetPositionId, Boolean placeAfter) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.MoveSheetXmlNodeExcelWorksheetExcelWorksheetBoolean">
            <summary>设置 ExcelWorksheets.MoveSheetXmlNode(ExcelWorksheet sourceSheet, ExcelWorksheet targetSheet, Boolean placeAfter) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.MoveStringStringBoolean">
            <summary>设置 ExcelWorksheets.Move(String sourceName, String targetName, Boolean placeAfter) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.MoveToEndInt32">
            <summary>设置 ExcelWorksheets.MoveToEnd(Int32 sourcePositionId) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.MoveToEndString">
            <summary>设置 ExcelWorksheets.MoveToEnd(String sourceName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.MoveToStartInt32">
            <summary>设置 ExcelWorksheets.MoveToStart(Int32 sourcePositionId) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.MoveToStartString">
            <summary>设置 ExcelWorksheets.MoveToStart(String sourceName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.ReindexWorksheetDictionary">
            <summary>设置 ExcelWorksheets.ReindexWorksheetDictionary() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelWorksheets.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.TranslateHiddenString">
            <summary>设置 ExcelWorksheets.TranslateHidden(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.ValidateFixSheetNameString">
            <summary>设置 ExcelWorksheets.ValidateFixSheetName(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.ValidateNameString">
            <summary>设置 ExcelWorksheets.ValidateName(String Name) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.AddString">
            <summary>设置 ExcelWorksheets.Add(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.AddStringExcelWorksheet">
            <summary>设置 ExcelWorksheets.Add(String Name, ExcelWorksheet Copy) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.CloneCellsExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CloneCells(ExcelWorksheet Copy, ExcelWorksheet added) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.CopyCommentExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CopyComment(ExcelWorksheet Copy, ExcelWorksheet workSheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.CopyDrawingExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CopyDrawing(ExcelWorksheet Copy, ExcelWorksheet workSheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.CopyHeaderFooterPicturesExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CopyHeaderFooterPictures(ExcelWorksheet Copy, ExcelWorksheet added) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.CopyPivotTableExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CopyPivotTable(ExcelWorksheet Copy, ExcelWorksheet added) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.CopySheetNamesExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CopySheetNames(ExcelWorksheet Copy, ExcelWorksheet added) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.CopyStringString">
            <summary>设置 ExcelWorksheets.Copy(String Name, String NewName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.CopyTableExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CopyTable(ExcelWorksheet Copy, ExcelWorksheet added) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.CopyTextExcelHeaderFooterTextExcelHeaderFooterText">
            <summary>设置 ExcelWorksheets.CopyText(ExcelHeaderFooterText from, ExcelHeaderFooterText to) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.CopyVmlDrawingExcelWorksheetExcelWorksheet">
            <summary>设置 ExcelWorksheets.CopyVmlDrawing(ExcelWorksheet origSheet, ExcelWorksheet newSheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.CountGet">
            <summary>设置 ExcelWorksheets.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.CreateNewWorksheet">
            <summary>设置 ExcelWorksheets.CreateNewWorksheet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.CreateWorkbookRelStringInt32Uri">
            <summary>设置 ExcelWorksheets.CreateWorkbookRel(String Name, Int32 sheetID, Uri uriWorksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.DeleteExcelWorksheet">
            <summary>设置 ExcelWorksheets.Delete(ExcelWorksheet Worksheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.DeleteInt32">
            <summary>设置 ExcelWorksheets.Delete(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.DeleteString">
            <summary>设置 ExcelWorksheets.Delete(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.GetByNameString">
            <summary>设置 ExcelWorksheets.GetByName(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.GetBySheetIDInt32">
            <summary>设置 ExcelWorksheets.GetBySheetID(Int32 localSheetID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.GetEnumerator">
            <summary>设置 ExcelWorksheets.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.ItemGetInt32">
            <summary>设置 ExcelWorksheets.get_Item(Int32 PositionID) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.ItemGetString">
            <summary>设置 ExcelWorksheets.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.MoveAfterInt32Int32">
            <summary>设置 ExcelWorksheets.MoveAfter(Int32 sourcePositionId, Int32 targetPositionId) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.MoveAfterStringString">
            <summary>设置 ExcelWorksheets.MoveAfter(String sourceName, String targetName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.MoveBeforeInt32Int32">
            <summary>设置 ExcelWorksheets.MoveBefore(Int32 sourcePositionId, Int32 targetPositionId) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.MoveBeforeStringString">
            <summary>设置 ExcelWorksheets.MoveBefore(String sourceName, String targetName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.MoveInt32Int32Boolean">
            <summary>设置 ExcelWorksheets.Move(Int32 sourcePositionId, Int32 targetPositionId, Boolean placeAfter) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.MoveSheetXmlNodeExcelWorksheetExcelWorksheetBoolean">
            <summary>设置 ExcelWorksheets.MoveSheetXmlNode(ExcelWorksheet sourceSheet, ExcelWorksheet targetSheet, Boolean placeAfter) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.MoveStringStringBoolean">
            <summary>设置 ExcelWorksheets.Move(String sourceName, String targetName, Boolean placeAfter) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.MoveToEndInt32">
            <summary>设置 ExcelWorksheets.MoveToEnd(Int32 sourcePositionId) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.MoveToEndString">
            <summary>设置 ExcelWorksheets.MoveToEnd(String sourceName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.MoveToStartInt32">
            <summary>设置 ExcelWorksheets.MoveToStart(Int32 sourcePositionId) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.MoveToStartString">
            <summary>设置 ExcelWorksheets.MoveToStart(String sourceName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.ReindexWorksheetDictionary">
            <summary>设置 ExcelWorksheets.ReindexWorksheetDictionary() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelWorksheets.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.TranslateHiddenString">
            <summary>设置 ExcelWorksheets.TranslateHidden(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.ValidateFixSheetNameString">
            <summary>设置 ExcelWorksheets.ValidateFixSheetName(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimExcelWorksheets.AllInstances.ValidateNameString">
            <summary>设置 ExcelWorksheets.ValidateName(String Name) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimOfficeProperties">
            <summary>OfficeOpenXml.OfficeProperties 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimOfficeProperties.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimOfficeProperties.#ctor(OfficeOpenXml.OfficeProperties)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimOfficeProperties.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimOfficeProperties.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AppVersionGet">
            <summary>设置 OfficeProperties.get_AppVersion() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.ApplicationGet">
            <summary>设置 OfficeProperties.get_Application() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AuthorGet">
            <summary>设置 OfficeProperties.get_Author() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AuthorSetString">
            <summary>设置 OfficeProperties.set_Author(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.CategoryGet">
            <summary>设置 OfficeProperties.get_Category() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.CategorySetString">
            <summary>设置 OfficeProperties.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.CommentsGet">
            <summary>设置 OfficeProperties.get_Comments() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.CommentsSetString">
            <summary>设置 OfficeProperties.set_Comments(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.CompanyGet">
            <summary>设置 OfficeProperties.get_Company() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.CompanySetString">
            <summary>设置 OfficeProperties.set_Company(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.ConstructorExcelPackageXmlNamespaceManager">
            <summary>设置 OfficeProperties.OfficeProperties(ExcelPackage package, XmlNamespaceManager ns) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.CorePropertiesXmlGet">
            <summary>设置 OfficeProperties.get_CorePropertiesXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.CustomPropertiesXmlGet">
            <summary>设置 OfficeProperties.get_CustomPropertiesXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.ExtendedPropertiesXmlGet">
            <summary>设置 OfficeProperties.get_ExtendedPropertiesXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.GetCustomPropertyValueString">
            <summary>设置 OfficeProperties.GetCustomPropertyValue(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.GetExtendedPropertyValueString">
            <summary>设置 OfficeProperties.GetExtendedPropertyValue(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.GetXmlDocumentStringUriStringString">
            <summary>设置 OfficeProperties.GetXmlDocument(String startXml, Uri uri, String contentType, String relationship) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.HyperlinkBaseGet">
            <summary>设置 OfficeProperties.get_HyperlinkBase() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.HyperlinkBaseSetUri">
            <summary>设置 OfficeProperties.set_HyperlinkBase(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.KeywordsGet">
            <summary>设置 OfficeProperties.get_Keywords() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.KeywordsSetString">
            <summary>设置 OfficeProperties.set_Keywords(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.LastModifiedByGet">
            <summary>设置 OfficeProperties.get_LastModifiedBy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.LastModifiedBySetString">
            <summary>设置 OfficeProperties.set_LastModifiedBy(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.LastPrintedGet">
            <summary>设置 OfficeProperties.get_LastPrinted() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.LastPrintedSetString">
            <summary>设置 OfficeProperties.set_LastPrinted(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.ManagerGet">
            <summary>设置 OfficeProperties.get_Manager() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.ManagerSetString">
            <summary>设置 OfficeProperties.set_Manager(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.Save">
            <summary>设置 OfficeProperties.Save() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.SetCustomPropertyValueStringObject">
            <summary>设置 OfficeProperties.SetCustomPropertyValue(String propertyName, Object value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.StatusGet">
            <summary>设置 OfficeProperties.get_Status() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.StatusSetString">
            <summary>设置 OfficeProperties.set_Status(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.SubjectGet">
            <summary>设置 OfficeProperties.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.SubjectSetString">
            <summary>设置 OfficeProperties.set_Subject(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.TitleGet">
            <summary>设置 OfficeProperties.get_Title() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.TitleSetString">
            <summary>设置 OfficeProperties.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.AppVersionGet">
            <summary>设置 OfficeProperties.get_AppVersion() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.ApplicationGet">
            <summary>设置 OfficeProperties.get_Application() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.AuthorGet">
            <summary>设置 OfficeProperties.get_Author() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.AuthorSetString">
            <summary>设置 OfficeProperties.set_Author(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.CategoryGet">
            <summary>设置 OfficeProperties.get_Category() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.CategorySetString">
            <summary>设置 OfficeProperties.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.CommentsGet">
            <summary>设置 OfficeProperties.get_Comments() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.CommentsSetString">
            <summary>设置 OfficeProperties.set_Comments(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.CompanyGet">
            <summary>设置 OfficeProperties.get_Company() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.CompanySetString">
            <summary>设置 OfficeProperties.set_Company(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.CorePropertiesXmlGet">
            <summary>设置 OfficeProperties.get_CorePropertiesXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.CustomPropertiesXmlGet">
            <summary>设置 OfficeProperties.get_CustomPropertiesXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.ExtendedPropertiesXmlGet">
            <summary>设置 OfficeProperties.get_ExtendedPropertiesXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.GetCustomPropertyValueString">
            <summary>设置 OfficeProperties.GetCustomPropertyValue(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.GetExtendedPropertyValueString">
            <summary>设置 OfficeProperties.GetExtendedPropertyValue(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.GetXmlDocumentStringUriStringString">
            <summary>设置 OfficeProperties.GetXmlDocument(String startXml, Uri uri, String contentType, String relationship) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.HyperlinkBaseGet">
            <summary>设置 OfficeProperties.get_HyperlinkBase() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.HyperlinkBaseSetUri">
            <summary>设置 OfficeProperties.set_HyperlinkBase(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.KeywordsGet">
            <summary>设置 OfficeProperties.get_Keywords() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.KeywordsSetString">
            <summary>设置 OfficeProperties.set_Keywords(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.LastModifiedByGet">
            <summary>设置 OfficeProperties.get_LastModifiedBy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.LastModifiedBySetString">
            <summary>设置 OfficeProperties.set_LastModifiedBy(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.LastPrintedGet">
            <summary>设置 OfficeProperties.get_LastPrinted() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.LastPrintedSetString">
            <summary>设置 OfficeProperties.set_LastPrinted(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.ManagerGet">
            <summary>设置 OfficeProperties.get_Manager() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.ManagerSetString">
            <summary>设置 OfficeProperties.set_Manager(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.Save">
            <summary>设置 OfficeProperties.Save() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.SetCustomPropertyValueStringObject">
            <summary>设置 OfficeProperties.SetCustomPropertyValue(String propertyName, Object value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.StatusGet">
            <summary>设置 OfficeProperties.get_Status() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.StatusSetString">
            <summary>设置 OfficeProperties.set_Status(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.SubjectGet">
            <summary>设置 OfficeProperties.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.SubjectSetString">
            <summary>设置 OfficeProperties.set_Subject(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.TitleGet">
            <summary>设置 OfficeProperties.get_Title() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimOfficeProperties.AllInstances.TitleSetString">
            <summary>设置 OfficeProperties.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimXmlHelper">
            <summary>OfficeOpenXml.XmlHelper 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimXmlHelper.#ctor(OfficeOpenXml.XmlHelper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimXmlHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.ShimXmlHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.ConstructorXmlNamespaceManager">
            <summary>设置 XmlHelper.XmlHelper(XmlNamespaceManager nameSpaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 XmlHelper.XmlHelper(XmlNamespaceManager nameSpaceManager, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.CreateComplexNodeString">
            <summary>设置 XmlHelper.CreateComplexNode(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.CreateComplexNodeXmlNodeString">
            <summary>设置 XmlHelper.CreateComplexNode(XmlNode topNode, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.CreateNodeString">
            <summary>设置 XmlHelper.CreateNode(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.CreateNodeStringBoolean">
            <summary>设置 XmlHelper.CreateNode(String path, Boolean insertFirst) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.DeleteAllNodeString">
            <summary>设置 XmlHelper.DeleteAllNode(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.DeleteNodeString">
            <summary>设置 XmlHelper.DeleteNode(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.DeleteTopNode">
            <summary>设置 XmlHelper.DeleteTopNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.ExistNodeString">
            <summary>设置 XmlHelper.ExistNode(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.GetNewUriPackageString">
            <summary>设置 XmlHelper.GetNewUri(Package package, String sUri) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.GetNewUriPackageStringInt32">
            <summary>设置 XmlHelper.GetNewUri(Package package, String sUri, Int32 id) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.GetNodePosString">
            <summary>设置 XmlHelper.GetNodePos(String nodeName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.GetPrependNodeStringXmlNode">
            <summary>设置 XmlHelper.GetPrependNode(String nodeName, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.GetXmlNodeBoolNullableString">
            <summary>设置 XmlHelper.GetXmlNodeBoolNullable(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.GetXmlNodeBoolString">
            <summary>设置 XmlHelper.GetXmlNodeBool(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.GetXmlNodeBoolStringBoolean">
            <summary>设置 XmlHelper.GetXmlNodeBool(String path, Boolean blankValue) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.GetXmlNodeDecimalString">
            <summary>设置 XmlHelper.GetXmlNodeDecimal(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.GetXmlNodeDoubleNullString">
            <summary>设置 XmlHelper.GetXmlNodeDoubleNull(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.GetXmlNodeDoubleString">
            <summary>设置 XmlHelper.GetXmlNodeDouble(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.GetXmlNodeIntNullString">
            <summary>设置 XmlHelper.GetXmlNodeIntNull(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.GetXmlNodeIntString">
            <summary>设置 XmlHelper.GetXmlNodeInt(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.GetXmlNodeStringString">
            <summary>设置 XmlHelper.GetXmlNodeString(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.GetXmlNodeStringXmlNodeString">
            <summary>设置 XmlHelper.GetXmlNodeString(XmlNode node, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.InserAfterXmlNodeStringXmlNode">
            <summary>设置 XmlHelper.InserAfter(XmlNode parentNode, String beforeNodes, XmlNode newNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.LoadXmlSafeXmlDocumentStream">
            <summary>设置 XmlHelper.LoadXmlSafe(XmlDocument xmlDoc, Stream stream) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.LoadXmlSafeXmlDocumentStringEncoding">
            <summary>设置 XmlHelper.LoadXmlSafe(XmlDocument xmlDoc, String xml, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.NameSpaceManagerGet">
            <summary>设置 XmlHelper.get_NameSpaceManager() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.NameSpaceManagerSetXmlNamespaceManager">
            <summary>设置 XmlHelper.set_NameSpaceManager(XmlNamespaceManager value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.SchemaNodeOrderGet">
            <summary>设置 XmlHelper.get_SchemaNodeOrder() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.SchemaNodeOrderSetStringArray">
            <summary>设置 XmlHelper.set_SchemaNodeOrder(String[] value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.SetXmlNodeBoolStringBoolean">
            <summary>设置 XmlHelper.SetXmlNodeBool(String path, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.SetXmlNodeBoolStringBooleanBoolean">
            <summary>设置 XmlHelper.SetXmlNodeBool(String path, Boolean value, Boolean removeIf) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.SetXmlNodeStringStringString">
            <summary>设置 XmlHelper.SetXmlNodeString(String path, String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.SetXmlNodeStringStringStringBoolean">
            <summary>设置 XmlHelper.SetXmlNodeString(String path, String value, Boolean removeIfBlank) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.SetXmlNodeStringXmlNodeStringString">
            <summary>设置 XmlHelper.SetXmlNodeString(XmlNode node, String path, String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.SetXmlNodeStringXmlNodeStringStringBoolean">
            <summary>设置 XmlHelper.SetXmlNodeString(XmlNode node, String path, String value, Boolean removeIfBlank) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.SetXmlNodeStringXmlNodeStringStringBooleanBoolean">
            <summary>设置 XmlHelper.SetXmlNodeString(XmlNode node, String path, String value, Boolean removeIfBlank, Boolean insertFirst) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.TopNodeGet">
            <summary>设置 XmlHelper.get_TopNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.TopNodeSetXmlNode">
            <summary>设置 XmlHelper.set_TopNode(XmlNode value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.CreateComplexNodeString">
            <summary>设置 XmlHelper.CreateComplexNode(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.CreateComplexNodeXmlNodeString">
            <summary>设置 XmlHelper.CreateComplexNode(XmlNode topNode, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.CreateNodeString">
            <summary>设置 XmlHelper.CreateNode(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.CreateNodeStringBoolean">
            <summary>设置 XmlHelper.CreateNode(String path, Boolean insertFirst) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.DeleteAllNodeString">
            <summary>设置 XmlHelper.DeleteAllNode(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.DeleteNodeString">
            <summary>设置 XmlHelper.DeleteNode(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.DeleteTopNode">
            <summary>设置 XmlHelper.DeleteTopNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.ExistNodeString">
            <summary>设置 XmlHelper.ExistNode(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.GetNodePosString">
            <summary>设置 XmlHelper.GetNodePos(String nodeName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.GetPrependNodeStringXmlNode">
            <summary>设置 XmlHelper.GetPrependNode(String nodeName, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.GetXmlNodeBoolNullableString">
            <summary>设置 XmlHelper.GetXmlNodeBoolNullable(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.GetXmlNodeBoolString">
            <summary>设置 XmlHelper.GetXmlNodeBool(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.GetXmlNodeBoolStringBoolean">
            <summary>设置 XmlHelper.GetXmlNodeBool(String path, Boolean blankValue) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.GetXmlNodeDecimalString">
            <summary>设置 XmlHelper.GetXmlNodeDecimal(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.GetXmlNodeDoubleNullString">
            <summary>设置 XmlHelper.GetXmlNodeDoubleNull(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.GetXmlNodeDoubleString">
            <summary>设置 XmlHelper.GetXmlNodeDouble(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.GetXmlNodeIntNullString">
            <summary>设置 XmlHelper.GetXmlNodeIntNull(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.GetXmlNodeIntString">
            <summary>设置 XmlHelper.GetXmlNodeInt(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.GetXmlNodeStringString">
            <summary>设置 XmlHelper.GetXmlNodeString(String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.GetXmlNodeStringXmlNodeString">
            <summary>设置 XmlHelper.GetXmlNodeString(XmlNode node, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.InserAfterXmlNodeStringXmlNode">
            <summary>设置 XmlHelper.InserAfter(XmlNode parentNode, String beforeNodes, XmlNode newNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.NameSpaceManagerGet">
            <summary>设置 XmlHelper.get_NameSpaceManager() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.NameSpaceManagerSetXmlNamespaceManager">
            <summary>设置 XmlHelper.set_NameSpaceManager(XmlNamespaceManager value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.SchemaNodeOrderGet">
            <summary>设置 XmlHelper.get_SchemaNodeOrder() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.SchemaNodeOrderSetStringArray">
            <summary>设置 XmlHelper.set_SchemaNodeOrder(String[] value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.SetXmlNodeBoolStringBoolean">
            <summary>设置 XmlHelper.SetXmlNodeBool(String path, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.SetXmlNodeBoolStringBooleanBoolean">
            <summary>设置 XmlHelper.SetXmlNodeBool(String path, Boolean value, Boolean removeIf) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.SetXmlNodeStringStringString">
            <summary>设置 XmlHelper.SetXmlNodeString(String path, String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.SetXmlNodeStringStringStringBoolean">
            <summary>设置 XmlHelper.SetXmlNodeString(String path, String value, Boolean removeIfBlank) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.SetXmlNodeStringXmlNodeStringString">
            <summary>设置 XmlHelper.SetXmlNodeString(XmlNode node, String path, String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.SetXmlNodeStringXmlNodeStringStringBoolean">
            <summary>设置 XmlHelper.SetXmlNodeString(XmlNode node, String path, String value, Boolean removeIfBlank) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.SetXmlNodeStringXmlNodeStringStringBooleanBoolean">
            <summary>设置 XmlHelper.SetXmlNodeString(XmlNode node, String path, String value, Boolean removeIfBlank, Boolean insertFirst) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.TopNodeGet">
            <summary>设置 XmlHelper.get_TopNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.ShimXmlHelper.AllInstances.TopNodeSetXmlNode">
            <summary>设置 XmlHelper.set_TopNode(XmlNode value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.StubExcelAddress">
            <summary>OfficeOpenXml.ExcelAddress 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelAddress.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelAddress.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelAddress.InitializeStub">
            <summary>初始化 type StubExcelAddress 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelAddress.ToString">
            <summary>设置 ExcelAddressBase.ToString() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Fakes.StubExcelAddress.ToString01">
            <summary>设置 ExcelAddressBase.ToString() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelAddress.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelAddress.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelAddress.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.StubExcelAddressBase">
            <summary>OfficeOpenXml.ExcelAddressBase 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelAddressBase.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelAddressBase.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.Fakes.StubExcelAddressBase.AddressGet">
            <summary>设置 ExcelAddressBase.get_Address() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelAddressBase.InitializeStub">
            <summary>初始化 type StubExcelAddressBase 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelAddressBase.ToString">
            <summary>设置 ExcelAddressBase.ToString() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Fakes.StubExcelAddressBase.ToString01">
            <summary>设置 ExcelAddressBase.ToString() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelAddressBase.Address">
            <summary>设置 ExcelAddressBase.get_Address() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelAddressBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelAddressBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelAddressBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.StubExcelCellAddress">
            <summary>OfficeOpenXml.ExcelCellAddress 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelCellAddress.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelCellAddress.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelCellAddress.#ctor(System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelCellAddress.InitializeStub">
            <summary>初始化 type StubExcelCellAddress 的新实例</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelCellAddress.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelCellAddress.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelCellAddress.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.StubExcelCellBase">
            <summary>OfficeOpenXml.ExcelCellBase 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelCellBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelCellBase.InitializeStub">
            <summary>初始化 type StubExcelCellBase 的新实例</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelCellBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelCellBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelCellBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.StubExcelColumn">
            <summary>OfficeOpenXml.ExcelColumn 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelColumn.#ctor(OfficeOpenXml.ExcelWorksheet,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelColumn.InitializeStub">
            <summary>初始化 type StubExcelColumn 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelColumn.ToString">
            <summary>设置 ExcelColumn.ToString() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Fakes.StubExcelColumn.ToString01">
            <summary>设置 ExcelColumn.ToString() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelColumn.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelColumn.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelColumn.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.StubExcelHyperLink">
            <summary>OfficeOpenXml.ExcelHyperLink 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.#ctor(System.String,System.UriKind)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.#ctor(System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.Canonicalize">
            <summary>设置 Uri.Canonicalize() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Fakes.StubExcelHyperLink.Canonicalize01">
            <summary>设置 Uri.Canonicalize() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.CheckSecurity">
            <summary>设置 Uri.CheckSecurity() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Fakes.StubExcelHyperLink.CheckSecurity01">
            <summary>设置 Uri.CheckSecurity() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.Equals(System.Object)">
            <summary>设置 Uri.Equals(Object comparand) 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Fakes.StubExcelHyperLink.EqualsObject">
            <summary>设置 Uri.Equals(Object comparand) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.Escape">
            <summary>设置 Uri.Escape() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Fakes.StubExcelHyperLink.Escape01">
            <summary>设置 Uri.Escape() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.GetHashCode">
            <summary>设置 Uri.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Fakes.StubExcelHyperLink.GetHashCode01">
            <summary>设置 Uri.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.InitializeStub">
            <summary>初始化 type StubExcelHyperLink 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.IsBadFileSystemCharacter(System.Char)">
            <summary>设置 Uri.IsBadFileSystemCharacter(Char character) 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Fakes.StubExcelHyperLink.IsBadFileSystemCharacterChar">
            <summary>设置 Uri.IsBadFileSystemCharacter(Char character) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.IsReservedCharacter(System.Char)">
            <summary>设置 Uri.IsReservedCharacter(Char character) 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Fakes.StubExcelHyperLink.IsReservedCharacterChar">
            <summary>设置 Uri.IsReservedCharacter(Char character) 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.Parse">
            <summary>设置 Uri.Parse() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Fakes.StubExcelHyperLink.Parse01">
            <summary>设置 Uri.Parse() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.ToString">
            <summary>设置 Uri.ToString() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Fakes.StubExcelHyperLink.ToString01">
            <summary>设置 Uri.ToString() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelHyperLink.Unescape(System.String)">
            <summary>设置 Uri.Unescape(String path) 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Fakes.StubExcelHyperLink.UnescapeString">
            <summary>设置 Uri.Unescape(String path) 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelHyperLink.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelHyperLink.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelHyperLink.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.StubExcelStyleCollection`1">
            <summary>OfficeOpenXml.ExcelStyleCollection`1 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelStyleCollection`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelStyleCollection`1.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelStyleCollection`1.InitializeStub">
            <summary>初始化 type StubExcelStyleCollection 的新实例</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelStyleCollection`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelStyleCollection`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelStyleCollection`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.Fakes.StubExcelTextFormat">
            <summary>OfficeOpenXml.ExcelTextFormat 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelTextFormat.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Fakes.StubExcelTextFormat.InitializeStub">
            <summary>初始化 type StubExcelTextFormat 的新实例</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelTextFormat.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelTextFormat.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.Fakes.StubExcelTextFormat.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1">
            <summary>OfficeOpenXml.Style.Dxf.DxfStyleBase`1 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.#ctor(OfficeOpenXml.Style.Dxf.DxfStyleBase{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.AllowChangeGet">
            <summary>设置 DxfStyleBase`1.get_AllowChange() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.AllowChangeSetBoolean">
            <summary>设置 DxfStyleBase`1.set_AllowChange(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.ConstructorExcelStyles">
            <summary>设置 DxfStyleBase`1.DxfStyleBase`1(ExcelStyles styles) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.GetAsStringObject">
            <summary>设置 DxfStyleBase`1.GetAsString(Object v) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.SetValueBoolXmlHelperStringNullableOfBoolean">
            <summary>设置 DxfStyleBase`1.SetValueBool(XmlHelper helper, String path, Nullable`1&lt;Boolean&gt; v) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.SetValueColorXmlHelperStringExcelDxfColor">
            <summary>设置 DxfStyleBase`1.SetValueColor(XmlHelper helper, String path, ExcelDxfColor color) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.SetValueEnumXmlHelperStringEnum">
            <summary>设置 DxfStyleBase`1.SetValueEnum(XmlHelper helper, String path, Enum v) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.SetValueXmlHelperStringObject">
            <summary>设置 DxfStyleBase`1.SetValue(XmlHelper helper, String path, Object v) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.AllInstances.AllowChangeGet">
            <summary>设置 DxfStyleBase`1.get_AllowChange() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.AllInstances.AllowChangeSetBoolean">
            <summary>设置 DxfStyleBase`1.set_AllowChange(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.AllInstances.GetAsStringObject">
            <summary>设置 DxfStyleBase`1.GetAsString(Object v) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.AllInstances.SetValueBoolXmlHelperStringNullableOfBoolean">
            <summary>设置 DxfStyleBase`1.SetValueBool(XmlHelper helper, String path, Nullable`1&lt;Boolean&gt; v) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.AllInstances.SetValueColorXmlHelperStringExcelDxfColor">
            <summary>设置 DxfStyleBase`1.SetValueColor(XmlHelper helper, String path, ExcelDxfColor color) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.AllInstances.SetValueEnumXmlHelperStringEnum">
            <summary>设置 DxfStyleBase`1.SetValueEnum(XmlHelper helper, String path, Enum v) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimDxfStyleBase`1.AllInstances.SetValueXmlHelperStringObject">
            <summary>设置 DxfStyleBase`1.SetValue(XmlHelper helper, String path, Object v) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase">
            <summary>OfficeOpenXml.Style.Dxf.ExcelDxfBorderBase 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.#ctor(OfficeOpenXml.Style.Dxf.ExcelDxfBorderBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.BottomGet">
            <summary>设置 ExcelDxfBorderBase.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.BottomSetExcelDxfBorderItem">
            <summary>设置 ExcelDxfBorderBase.set_Bottom(ExcelDxfBorderItem value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.Clone">
            <summary>设置 ExcelDxfBorderBase.Clone() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.ConstructorExcelStyles">
            <summary>设置 ExcelDxfBorderBase.ExcelDxfBorderBase(ExcelStyles styles) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfBorderBase.CreateNodes(XmlHelper helper, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.HasValueGet">
            <summary>设置 ExcelDxfBorderBase.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.IdGet">
            <summary>设置 ExcelDxfBorderBase.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.LeftGet">
            <summary>设置 ExcelDxfBorderBase.get_Left() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.LeftSetExcelDxfBorderItem">
            <summary>设置 ExcelDxfBorderBase.set_Left(ExcelDxfBorderItem value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.RightGet">
            <summary>设置 ExcelDxfBorderBase.get_Right() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.RightSetExcelDxfBorderItem">
            <summary>设置 ExcelDxfBorderBase.set_Right(ExcelDxfBorderItem value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.TopGet">
            <summary>设置 ExcelDxfBorderBase.get_Top() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.TopSetExcelDxfBorderItem">
            <summary>设置 ExcelDxfBorderBase.set_Top(ExcelDxfBorderItem value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.AllInstances.BottomGet">
            <summary>设置 ExcelDxfBorderBase.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.AllInstances.BottomSetExcelDxfBorderItem">
            <summary>设置 ExcelDxfBorderBase.set_Bottom(ExcelDxfBorderItem value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.AllInstances.Clone">
            <summary>设置 ExcelDxfBorderBase.Clone() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.AllInstances.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfBorderBase.CreateNodes(XmlHelper helper, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.AllInstances.HasValueGet">
            <summary>设置 ExcelDxfBorderBase.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.AllInstances.IdGet">
            <summary>设置 ExcelDxfBorderBase.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.AllInstances.LeftGet">
            <summary>设置 ExcelDxfBorderBase.get_Left() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.AllInstances.LeftSetExcelDxfBorderItem">
            <summary>设置 ExcelDxfBorderBase.set_Left(ExcelDxfBorderItem value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.AllInstances.RightGet">
            <summary>设置 ExcelDxfBorderBase.get_Right() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.AllInstances.RightSetExcelDxfBorderItem">
            <summary>设置 ExcelDxfBorderBase.set_Right(ExcelDxfBorderItem value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.AllInstances.TopGet">
            <summary>设置 ExcelDxfBorderBase.get_Top() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderBase.AllInstances.TopSetExcelDxfBorderItem">
            <summary>设置 ExcelDxfBorderBase.set_Top(ExcelDxfBorderItem value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem">
            <summary>OfficeOpenXml.Style.Dxf.ExcelDxfBorderItem 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.#ctor(OfficeOpenXml.Style.Dxf.ExcelDxfBorderItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.Clone">
            <summary>设置 ExcelDxfBorderItem.Clone() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.ColorGet">
            <summary>设置 ExcelDxfBorderItem.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.ColorSetExcelDxfColor">
            <summary>设置 ExcelDxfBorderItem.set_Color(ExcelDxfColor value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.ConstructorExcelStyles">
            <summary>设置 ExcelDxfBorderItem.ExcelDxfBorderItem(ExcelStyles styles) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfBorderItem.CreateNodes(XmlHelper helper, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.HasValueGet">
            <summary>设置 ExcelDxfBorderItem.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.IdGet">
            <summary>设置 ExcelDxfBorderItem.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.StyleGet">
            <summary>设置 ExcelDxfBorderItem.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.StyleSetNullableOfExcelBorderStyle">
            <summary>设置 ExcelDxfBorderItem.set_Style(Nullable`1&lt;ExcelBorderStyle&gt; value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.AllInstances.Clone">
            <summary>设置 ExcelDxfBorderItem.Clone() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.AllInstances.ColorGet">
            <summary>设置 ExcelDxfBorderItem.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.AllInstances.ColorSetExcelDxfColor">
            <summary>设置 ExcelDxfBorderItem.set_Color(ExcelDxfColor value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.AllInstances.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfBorderItem.CreateNodes(XmlHelper helper, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.AllInstances.HasValueGet">
            <summary>设置 ExcelDxfBorderItem.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.AllInstances.IdGet">
            <summary>设置 ExcelDxfBorderItem.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.AllInstances.StyleGet">
            <summary>设置 ExcelDxfBorderItem.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfBorderItem.AllInstances.StyleSetNullableOfExcelBorderStyle">
            <summary>设置 ExcelDxfBorderItem.set_Style(Nullable`1&lt;ExcelBorderStyle&gt; value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor">
            <summary>OfficeOpenXml.Style.Dxf.ExcelDxfColor 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.#ctor(OfficeOpenXml.Style.Dxf.ExcelDxfColor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AutoGet">
            <summary>设置 ExcelDxfColor.get_Auto() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AutoSetNullableOfBoolean">
            <summary>设置 ExcelDxfColor.set_Auto(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.Clone">
            <summary>设置 ExcelDxfColor.Clone() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.ColorGet">
            <summary>设置 ExcelDxfColor.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.ColorSetNullableOfColor">
            <summary>设置 ExcelDxfColor.set_Color(Nullable`1&lt;Color&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.ConstructorExcelStyles">
            <summary>设置 ExcelDxfColor.ExcelDxfColor(ExcelStyles styles) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfColor.CreateNodes(XmlHelper helper, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.HasValueGet">
            <summary>设置 ExcelDxfColor.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.IdGet">
            <summary>设置 ExcelDxfColor.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.IndexGet">
            <summary>设置 ExcelDxfColor.get_Index() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.IndexSetNullableOfInt32">
            <summary>设置 ExcelDxfColor.set_Index(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.ThemeGet">
            <summary>设置 ExcelDxfColor.get_Theme() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.ThemeSetNullableOfInt32">
            <summary>设置 ExcelDxfColor.set_Theme(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.TintGet">
            <summary>设置 ExcelDxfColor.get_Tint() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.TintSetNullableOfDouble">
            <summary>设置 ExcelDxfColor.set_Tint(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances.AutoGet">
            <summary>设置 ExcelDxfColor.get_Auto() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances.AutoSetNullableOfBoolean">
            <summary>设置 ExcelDxfColor.set_Auto(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances.Clone">
            <summary>设置 ExcelDxfColor.Clone() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances.ColorGet">
            <summary>设置 ExcelDxfColor.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances.ColorSetNullableOfColor">
            <summary>设置 ExcelDxfColor.set_Color(Nullable`1&lt;Color&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfColor.CreateNodes(XmlHelper helper, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances.HasValueGet">
            <summary>设置 ExcelDxfColor.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances.IdGet">
            <summary>设置 ExcelDxfColor.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances.IndexGet">
            <summary>设置 ExcelDxfColor.get_Index() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances.IndexSetNullableOfInt32">
            <summary>设置 ExcelDxfColor.set_Index(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances.ThemeGet">
            <summary>设置 ExcelDxfColor.get_Theme() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances.ThemeSetNullableOfInt32">
            <summary>设置 ExcelDxfColor.set_Theme(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances.TintGet">
            <summary>设置 ExcelDxfColor.get_Tint() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfColor.AllInstances.TintSetNullableOfDouble">
            <summary>设置 ExcelDxfColor.set_Tint(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill">
            <summary>OfficeOpenXml.Style.Dxf.ExcelDxfFill 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.#ctor(OfficeOpenXml.Style.Dxf.ExcelDxfFill)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.BackgroundColorGet">
            <summary>设置 ExcelDxfFill.get_BackgroundColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.BackgroundColorSetExcelDxfColor">
            <summary>设置 ExcelDxfFill.set_BackgroundColor(ExcelDxfColor value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.Clone">
            <summary>设置 ExcelDxfFill.Clone() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.ConstructorExcelStyles">
            <summary>设置 ExcelDxfFill.ExcelDxfFill(ExcelStyles styles) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfFill.CreateNodes(XmlHelper helper, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.HasValueGet">
            <summary>设置 ExcelDxfFill.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.IdGet">
            <summary>设置 ExcelDxfFill.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.PatternColorGet">
            <summary>设置 ExcelDxfFill.get_PatternColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.PatternColorSetExcelDxfColor">
            <summary>设置 ExcelDxfFill.set_PatternColor(ExcelDxfColor value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.PatternTypeGet">
            <summary>设置 ExcelDxfFill.get_PatternType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.PatternTypeSetNullableOfExcelFillStyle">
            <summary>设置 ExcelDxfFill.set_PatternType(Nullable`1&lt;ExcelFillStyle&gt; value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.AllInstances.BackgroundColorGet">
            <summary>设置 ExcelDxfFill.get_BackgroundColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.AllInstances.BackgroundColorSetExcelDxfColor">
            <summary>设置 ExcelDxfFill.set_BackgroundColor(ExcelDxfColor value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.AllInstances.Clone">
            <summary>设置 ExcelDxfFill.Clone() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.AllInstances.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfFill.CreateNodes(XmlHelper helper, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.AllInstances.HasValueGet">
            <summary>设置 ExcelDxfFill.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.AllInstances.IdGet">
            <summary>设置 ExcelDxfFill.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.AllInstances.PatternColorGet">
            <summary>设置 ExcelDxfFill.get_PatternColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.AllInstances.PatternColorSetExcelDxfColor">
            <summary>设置 ExcelDxfFill.set_PatternColor(ExcelDxfColor value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.AllInstances.PatternTypeGet">
            <summary>设置 ExcelDxfFill.get_PatternType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFill.AllInstances.PatternTypeSetNullableOfExcelFillStyle">
            <summary>设置 ExcelDxfFill.set_PatternType(Nullable`1&lt;ExcelFillStyle&gt; value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase">
            <summary>OfficeOpenXml.Style.Dxf.ExcelDxfFontBase 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.#ctor(OfficeOpenXml.Style.Dxf.ExcelDxfFontBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.BoldGet">
            <summary>设置 ExcelDxfFontBase.get_Bold() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.BoldSetNullableOfBoolean">
            <summary>设置 ExcelDxfFontBase.set_Bold(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.Clone">
            <summary>设置 ExcelDxfFontBase.Clone() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.ColorGet">
            <summary>设置 ExcelDxfFontBase.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.ColorSetExcelDxfColor">
            <summary>设置 ExcelDxfFontBase.set_Color(ExcelDxfColor value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.ConstructorExcelStyles">
            <summary>设置 ExcelDxfFontBase.ExcelDxfFontBase(ExcelStyles styles) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfFontBase.CreateNodes(XmlHelper helper, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.HasValueGet">
            <summary>设置 ExcelDxfFontBase.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.IdGet">
            <summary>设置 ExcelDxfFontBase.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.ItalicGet">
            <summary>设置 ExcelDxfFontBase.get_Italic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.ItalicSetNullableOfBoolean">
            <summary>设置 ExcelDxfFontBase.set_Italic(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.StrikeGet">
            <summary>设置 ExcelDxfFontBase.get_Strike() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.StrikeSetNullableOfBoolean">
            <summary>设置 ExcelDxfFontBase.set_Strike(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.UnderlineGet">
            <summary>设置 ExcelDxfFontBase.get_Underline() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.UnderlineSetNullableOfExcelUnderLineType">
            <summary>设置 ExcelDxfFontBase.set_Underline(Nullable`1&lt;ExcelUnderLineType&gt; value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances.BoldGet">
            <summary>设置 ExcelDxfFontBase.get_Bold() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances.BoldSetNullableOfBoolean">
            <summary>设置 ExcelDxfFontBase.set_Bold(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances.Clone">
            <summary>设置 ExcelDxfFontBase.Clone() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances.ColorGet">
            <summary>设置 ExcelDxfFontBase.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances.ColorSetExcelDxfColor">
            <summary>设置 ExcelDxfFontBase.set_Color(ExcelDxfColor value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfFontBase.CreateNodes(XmlHelper helper, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances.HasValueGet">
            <summary>设置 ExcelDxfFontBase.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances.IdGet">
            <summary>设置 ExcelDxfFontBase.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances.ItalicGet">
            <summary>设置 ExcelDxfFontBase.get_Italic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances.ItalicSetNullableOfBoolean">
            <summary>设置 ExcelDxfFontBase.set_Italic(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances.StrikeGet">
            <summary>设置 ExcelDxfFontBase.get_Strike() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances.StrikeSetNullableOfBoolean">
            <summary>设置 ExcelDxfFontBase.set_Strike(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances.UnderlineGet">
            <summary>设置 ExcelDxfFontBase.get_Underline() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfFontBase.AllInstances.UnderlineSetNullableOfExcelUnderLineType">
            <summary>设置 ExcelDxfFontBase.set_Underline(Nullable`1&lt;ExcelUnderLineType&gt; value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat">
            <summary>OfficeOpenXml.Style.Dxf.ExcelDxfNumberFormat 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.#ctor(OfficeOpenXml.Style.Dxf.ExcelDxfNumberFormat)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.Clone">
            <summary>设置 ExcelDxfNumberFormat.Clone() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.ConstructorExcelStyles">
            <summary>设置 ExcelDxfNumberFormat.ExcelDxfNumberFormat(ExcelStyles styles) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfNumberFormat.CreateNodes(XmlHelper helper, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.FormatGet">
            <summary>设置 ExcelDxfNumberFormat.get_Format() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.FormatSetString">
            <summary>设置 ExcelDxfNumberFormat.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.HasValueGet">
            <summary>设置 ExcelDxfNumberFormat.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.IdGet">
            <summary>设置 ExcelDxfNumberFormat.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.NumFmtIDGet">
            <summary>设置 ExcelDxfNumberFormat.get_NumFmtID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.NumFmtIDSetInt32">
            <summary>设置 ExcelDxfNumberFormat.set_NumFmtID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.AllInstances.Clone">
            <summary>设置 ExcelDxfNumberFormat.Clone() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.AllInstances.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfNumberFormat.CreateNodes(XmlHelper helper, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.AllInstances.FormatGet">
            <summary>设置 ExcelDxfNumberFormat.get_Format() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.AllInstances.FormatSetString">
            <summary>设置 ExcelDxfNumberFormat.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.AllInstances.HasValueGet">
            <summary>设置 ExcelDxfNumberFormat.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.AllInstances.IdGet">
            <summary>设置 ExcelDxfNumberFormat.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.AllInstances.NumFmtIDGet">
            <summary>设置 ExcelDxfNumberFormat.get_NumFmtID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfNumberFormat.AllInstances.NumFmtIDSetInt32">
            <summary>设置 ExcelDxfNumberFormat.set_NumFmtID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting">
            <summary>OfficeOpenXml.Style.Dxf.ExcelDxfStyleConditionalFormatting 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.#ctor(OfficeOpenXml.Style.Dxf.ExcelDxfStyleConditionalFormatting)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.BorderGet">
            <summary>设置 ExcelDxfStyleConditionalFormatting.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.BorderSetExcelDxfBorderBase">
            <summary>设置 ExcelDxfStyleConditionalFormatting.set_Border(ExcelDxfBorderBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.Clone">
            <summary>设置 ExcelDxfStyleConditionalFormatting.Clone() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.ConstructorXmlNamespaceManagerXmlNodeExcelStyles">
            <summary>设置 ExcelDxfStyleConditionalFormatting.ExcelDxfStyleConditionalFormatting(XmlNamespaceManager nameSpaceManager, XmlNode topNode, ExcelStyles styles) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfStyleConditionalFormatting.CreateNodes(XmlHelper helper, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.DxfIdGet">
            <summary>设置 ExcelDxfStyleConditionalFormatting.get_DxfId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.DxfIdSetInt32">
            <summary>设置 ExcelDxfStyleConditionalFormatting.set_DxfId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.FillGet">
            <summary>设置 ExcelDxfStyleConditionalFormatting.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.FillSetExcelDxfFill">
            <summary>设置 ExcelDxfStyleConditionalFormatting.set_Fill(ExcelDxfFill value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.FontGet">
            <summary>设置 ExcelDxfStyleConditionalFormatting.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.FontSetExcelDxfFontBase">
            <summary>设置 ExcelDxfStyleConditionalFormatting.set_Font(ExcelDxfFontBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.GetBorderStyleEnumString">
            <summary>设置 ExcelDxfStyleConditionalFormatting.GetBorderStyleEnum(String style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.GetPatternTypeEnumString">
            <summary>设置 ExcelDxfStyleConditionalFormatting.GetPatternTypeEnum(String patternType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.GetUnderLineEnumString">
            <summary>设置 ExcelDxfStyleConditionalFormatting.GetUnderLineEnum(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.HasValueGet">
            <summary>设置 ExcelDxfStyleConditionalFormatting.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.IdGet">
            <summary>设置 ExcelDxfStyleConditionalFormatting.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.NumberFormatGet">
            <summary>设置 ExcelDxfStyleConditionalFormatting.get_NumberFormat() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.NumberFormatSetExcelDxfNumberFormat">
            <summary>设置 ExcelDxfStyleConditionalFormatting.set_NumberFormat(ExcelDxfNumberFormat value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.BorderGet">
            <summary>设置 ExcelDxfStyleConditionalFormatting.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.BorderSetExcelDxfBorderBase">
            <summary>设置 ExcelDxfStyleConditionalFormatting.set_Border(ExcelDxfBorderBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.Clone">
            <summary>设置 ExcelDxfStyleConditionalFormatting.Clone() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfStyleConditionalFormatting.CreateNodes(XmlHelper helper, String path) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.DxfIdGet">
            <summary>设置 ExcelDxfStyleConditionalFormatting.get_DxfId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.DxfIdSetInt32">
            <summary>设置 ExcelDxfStyleConditionalFormatting.set_DxfId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.FillGet">
            <summary>设置 ExcelDxfStyleConditionalFormatting.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.FillSetExcelDxfFill">
            <summary>设置 ExcelDxfStyleConditionalFormatting.set_Fill(ExcelDxfFill value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.FontGet">
            <summary>设置 ExcelDxfStyleConditionalFormatting.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.FontSetExcelDxfFontBase">
            <summary>设置 ExcelDxfStyleConditionalFormatting.set_Font(ExcelDxfFontBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.GetBorderStyleEnumString">
            <summary>设置 ExcelDxfStyleConditionalFormatting.GetBorderStyleEnum(String style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.GetPatternTypeEnumString">
            <summary>设置 ExcelDxfStyleConditionalFormatting.GetPatternTypeEnum(String patternType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.GetUnderLineEnumString">
            <summary>设置 ExcelDxfStyleConditionalFormatting.GetUnderLineEnum(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.HasValueGet">
            <summary>设置 ExcelDxfStyleConditionalFormatting.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.IdGet">
            <summary>设置 ExcelDxfStyleConditionalFormatting.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.NumberFormatGet">
            <summary>设置 ExcelDxfStyleConditionalFormatting.get_NumberFormat() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.ShimExcelDxfStyleConditionalFormatting.AllInstances.NumberFormatSetExcelDxfNumberFormat">
            <summary>设置 ExcelDxfStyleConditionalFormatting.set_NumberFormat(ExcelDxfNumberFormat value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfColor">
            <summary>OfficeOpenXml.Style.Dxf.ExcelDxfColor 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfColor.#ctor(OfficeOpenXml.ExcelStyles)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfColor.Clone">
            <summary>设置 ExcelDxfColor.Clone() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfColor.Clone01">
            <summary>设置 ExcelDxfColor.Clone() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfColor.CreateNodes(OfficeOpenXml.XmlHelper,System.String)">
            <summary>设置 ExcelDxfColor.CreateNodes(XmlHelper helper, String path) 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfColor.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfColor.CreateNodes(XmlHelper helper, String path) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfColor.HasValueGet">
            <summary>设置 ExcelDxfColor.get_HasValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfColor.IdGet">
            <summary>设置 ExcelDxfColor.get_Id() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfColor.InitializeStub">
            <summary>初始化 type StubExcelDxfColor 的新实例</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfColor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfColor.HasValue">
            <summary>设置 ExcelDxfColor.get_HasValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfColor.Id">
            <summary>设置 ExcelDxfColor.get_Id() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfColor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfColor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFill">
            <summary>OfficeOpenXml.Style.Dxf.ExcelDxfFill 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFill.#ctor(OfficeOpenXml.ExcelStyles)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFill.Clone">
            <summary>设置 ExcelDxfFill.Clone() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFill.Clone01">
            <summary>设置 ExcelDxfFill.Clone() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFill.CreateNodes(OfficeOpenXml.XmlHelper,System.String)">
            <summary>设置 ExcelDxfFill.CreateNodes(XmlHelper helper, String path) 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFill.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfFill.CreateNodes(XmlHelper helper, String path) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFill.HasValueGet">
            <summary>设置 ExcelDxfFill.get_HasValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFill.IdGet">
            <summary>设置 ExcelDxfFill.get_Id() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFill.InitializeStub">
            <summary>初始化 type StubExcelDxfFill 的新实例</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFill.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFill.HasValue">
            <summary>设置 ExcelDxfFill.get_HasValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFill.Id">
            <summary>设置 ExcelDxfFill.get_Id() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFill.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFill.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFontBase">
            <summary>OfficeOpenXml.Style.Dxf.ExcelDxfFontBase 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFontBase.#ctor(OfficeOpenXml.ExcelStyles)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFontBase.Clone">
            <summary>设置 ExcelDxfFontBase.Clone() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFontBase.Clone01">
            <summary>设置 ExcelDxfFontBase.Clone() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFontBase.CreateNodes(OfficeOpenXml.XmlHelper,System.String)">
            <summary>设置 ExcelDxfFontBase.CreateNodes(XmlHelper helper, String path) 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFontBase.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfFontBase.CreateNodes(XmlHelper helper, String path) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFontBase.HasValueGet">
            <summary>设置 ExcelDxfFontBase.get_HasValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFontBase.IdGet">
            <summary>设置 ExcelDxfFontBase.get_Id() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFontBase.InitializeStub">
            <summary>初始化 type StubExcelDxfFontBase 的新实例</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFontBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFontBase.HasValue">
            <summary>设置 ExcelDxfFontBase.get_HasValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFontBase.Id">
            <summary>设置 ExcelDxfFontBase.get_Id() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFontBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfFontBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfNumberFormat">
            <summary>OfficeOpenXml.Style.Dxf.ExcelDxfNumberFormat 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfNumberFormat.#ctor(OfficeOpenXml.ExcelStyles)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfNumberFormat.Clone">
            <summary>设置 ExcelDxfNumberFormat.Clone() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfNumberFormat.Clone01">
            <summary>设置 ExcelDxfNumberFormat.Clone() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfNumberFormat.CreateNodes(OfficeOpenXml.XmlHelper,System.String)">
            <summary>设置 ExcelDxfNumberFormat.CreateNodes(XmlHelper helper, String path) 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfNumberFormat.CreateNodesXmlHelperString">
            <summary>设置 ExcelDxfNumberFormat.CreateNodes(XmlHelper helper, String path) 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfNumberFormat.HasValueGet">
            <summary>设置 ExcelDxfNumberFormat.get_HasValue() 的 stub</summary>
        </member>
        <member name="F:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfNumberFormat.IdGet">
            <summary>设置 ExcelDxfNumberFormat.get_Id() 的 stub</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfNumberFormat.InitializeStub">
            <summary>初始化 type StubExcelDxfNumberFormat 的新实例</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfNumberFormat.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfNumberFormat.HasValue">
            <summary>设置 ExcelDxfNumberFormat.get_HasValue() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfNumberFormat.Id">
            <summary>设置 ExcelDxfNumberFormat.get_Id() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfNumberFormat.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Dxf.Fakes.StubExcelDxfNumberFormat.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimBorder">
            <summary>OfficeOpenXml.Style.Border 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimBorder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimBorder.#ctor(OfficeOpenXml.Style.Border)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimBorder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimBorder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.BorderAroundExcelBorderStyle">
            <summary>设置 Border.BorderAround(ExcelBorderStyle Style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.BorderAroundExcelBorderStyleColor">
            <summary>设置 Border.BorderAround(ExcelBorderStyle Style, Color Color) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.BottomGet">
            <summary>设置 Border.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.DiagonalDownGet">
            <summary>设置 Border.get_DiagonalDown() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.DiagonalDownSetBoolean">
            <summary>设置 Border.set_DiagonalDown(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.DiagonalGet">
            <summary>设置 Border.get_Diagonal() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.DiagonalUpGet">
            <summary>设置 Border.get_DiagonalUp() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.DiagonalUpSetBoolean">
            <summary>设置 Border.set_DiagonalUp(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.IdGet">
            <summary>设置 Border.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.LeftGet">
            <summary>设置 Border.get_Left() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.RightGet">
            <summary>设置 Border.get_Right() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.SetBorderAroundStyleExcelBorderStyleExcelAddress">
            <summary>设置 Border.SetBorderAroundStyle(ExcelBorderStyle Style, ExcelAddress addr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.TopGet">
            <summary>设置 Border.get_Top() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimBorder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.AllInstances.BorderAroundExcelBorderStyle">
            <summary>设置 Border.BorderAround(ExcelBorderStyle Style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.AllInstances.BorderAroundExcelBorderStyleColor">
            <summary>设置 Border.BorderAround(ExcelBorderStyle Style, Color Color) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.AllInstances.BottomGet">
            <summary>设置 Border.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.AllInstances.DiagonalDownGet">
            <summary>设置 Border.get_DiagonalDown() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.AllInstances.DiagonalDownSetBoolean">
            <summary>设置 Border.set_DiagonalDown(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.AllInstances.DiagonalGet">
            <summary>设置 Border.get_Diagonal() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.AllInstances.DiagonalUpGet">
            <summary>设置 Border.get_DiagonalUp() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.AllInstances.DiagonalUpSetBoolean">
            <summary>设置 Border.set_DiagonalUp(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.AllInstances.IdGet">
            <summary>设置 Border.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.AllInstances.LeftGet">
            <summary>设置 Border.get_Left() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.AllInstances.RightGet">
            <summary>设置 Border.get_Right() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.AllInstances.SetBorderAroundStyleExcelBorderStyleExcelAddress">
            <summary>设置 Border.SetBorderAroundStyle(ExcelBorderStyle Style, ExcelAddress addr) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimBorder.AllInstances.TopGet">
            <summary>设置 Border.get_Top() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem">
            <summary>OfficeOpenXml.Style.ExcelBorderItem 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.#ctor(OfficeOpenXml.Style.ExcelBorderItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.ColorGet">
            <summary>设置 ExcelBorderItem.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.GetSource">
            <summary>设置 ExcelBorderItem.GetSource() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.IdGet">
            <summary>设置 ExcelBorderItem.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.SetIndexInt32">
            <summary>设置 ExcelBorderItem.SetIndex(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.StyleGet">
            <summary>设置 ExcelBorderItem.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.StyleSetExcelBorderStyle">
            <summary>设置 ExcelBorderItem.set_Style(ExcelBorderStyle value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.AllInstances.ColorGet">
            <summary>设置 ExcelBorderItem.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.AllInstances.GetSource">
            <summary>设置 ExcelBorderItem.GetSource() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.AllInstances.IdGet">
            <summary>设置 ExcelBorderItem.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.AllInstances.SetIndexInt32">
            <summary>设置 ExcelBorderItem.SetIndex(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.AllInstances.StyleGet">
            <summary>设置 ExcelBorderItem.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelBorderItem.AllInstances.StyleSetExcelBorderStyle">
            <summary>设置 ExcelBorderItem.set_Style(ExcelBorderStyle value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelColor">
            <summary>OfficeOpenXml.Style.ExcelColor 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelColor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelColor.#ctor(OfficeOpenXml.Style.ExcelColor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelColor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelColor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.GetSource">
            <summary>设置 ExcelColor.GetSource() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.IdGet">
            <summary>设置 ExcelColor.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.IndexedGet">
            <summary>设置 ExcelColor.get_Indexed() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.IndexedSetInt32">
            <summary>设置 ExcelColor.set_Indexed(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.RgbGet">
            <summary>设置 ExcelColor.get_Rgb() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.RgbSetString">
            <summary>设置 ExcelColor.set_Rgb(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.SetColorColor">
            <summary>设置 ExcelColor.SetColor(Color color) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.SetIndexInt32">
            <summary>设置 ExcelColor.SetIndex(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.ThemeGet">
            <summary>设置 ExcelColor.get_Theme() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.TintGet">
            <summary>设置 ExcelColor.get_Tint() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.TintSetDecimal">
            <summary>设置 ExcelColor.set_Tint(Decimal value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelColor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.AllInstances.GetSource">
            <summary>设置 ExcelColor.GetSource() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.AllInstances.IdGet">
            <summary>设置 ExcelColor.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.AllInstances.IndexedGet">
            <summary>设置 ExcelColor.get_Indexed() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.AllInstances.IndexedSetInt32">
            <summary>设置 ExcelColor.set_Indexed(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.AllInstances.RgbGet">
            <summary>设置 ExcelColor.get_Rgb() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.AllInstances.RgbSetString">
            <summary>设置 ExcelColor.set_Rgb(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.AllInstances.SetColorColor">
            <summary>设置 ExcelColor.SetColor(Color color) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.AllInstances.SetIndexInt32">
            <summary>设置 ExcelColor.SetIndex(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.AllInstances.ThemeGet">
            <summary>设置 ExcelColor.get_Theme() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.AllInstances.TintGet">
            <summary>设置 ExcelColor.get_Tint() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelColor.AllInstances.TintSetDecimal">
            <summary>设置 ExcelColor.set_Tint(Decimal value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelFill">
            <summary>OfficeOpenXml.Style.ExcelFill 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelFill.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelFill.#ctor(OfficeOpenXml.Style.ExcelFill)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelFill.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelFill.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFill.BackgroundColorGet">
            <summary>设置 ExcelFill.get_BackgroundColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFill.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFill.GradientGet">
            <summary>设置 ExcelFill.get_Gradient() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFill.IdGet">
            <summary>设置 ExcelFill.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFill.PatternColorGet">
            <summary>设置 ExcelFill.get_PatternColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFill.PatternTypeGet">
            <summary>设置 ExcelFill.get_PatternType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFill.PatternTypeSetExcelFillStyle">
            <summary>设置 ExcelFill.set_PatternType(ExcelFillStyle value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelFill.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFill.AllInstances.BackgroundColorGet">
            <summary>设置 ExcelFill.get_BackgroundColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFill.AllInstances.GradientGet">
            <summary>设置 ExcelFill.get_Gradient() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFill.AllInstances.IdGet">
            <summary>设置 ExcelFill.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFill.AllInstances.PatternColorGet">
            <summary>设置 ExcelFill.get_PatternColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFill.AllInstances.PatternTypeGet">
            <summary>设置 ExcelFill.get_PatternType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFill.AllInstances.PatternTypeSetExcelFillStyle">
            <summary>设置 ExcelFill.set_PatternType(ExcelFillStyle value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelFont">
            <summary>OfficeOpenXml.Style.ExcelFont 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelFont.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelFont.#ctor(OfficeOpenXml.Style.ExcelFont)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelFont.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelFont.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.BoldGet">
            <summary>设置 ExcelFont.get_Bold() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.BoldSetBoolean">
            <summary>设置 ExcelFont.set_Bold(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.ColorGet">
            <summary>设置 ExcelFont.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.FamilyGet">
            <summary>设置 ExcelFont.get_Family() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.FamilySetInt32">
            <summary>设置 ExcelFont.set_Family(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.IdGet">
            <summary>设置 ExcelFont.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.ItalicGet">
            <summary>设置 ExcelFont.get_Italic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.ItalicSetBoolean">
            <summary>设置 ExcelFont.set_Italic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.NameGet">
            <summary>设置 ExcelFont.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.NameSetString">
            <summary>设置 ExcelFont.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.SchemeGet">
            <summary>设置 ExcelFont.get_Scheme() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.SchemeSetString">
            <summary>设置 ExcelFont.set_Scheme(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.SetFromFontFont">
            <summary>设置 ExcelFont.SetFromFont(Font Font) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.SizeGet">
            <summary>设置 ExcelFont.get_Size() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.SizeSetSingle">
            <summary>设置 ExcelFont.set_Size(Single value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.StrikeGet">
            <summary>设置 ExcelFont.get_Strike() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.StrikeSetBoolean">
            <summary>设置 ExcelFont.set_Strike(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.UnderLineGet">
            <summary>设置 ExcelFont.get_UnderLine() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.UnderLineSetBoolean">
            <summary>设置 ExcelFont.set_UnderLine(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.UnderLineTypeGet">
            <summary>设置 ExcelFont.get_UnderLineType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.UnderLineTypeSetExcelUnderLineType">
            <summary>设置 ExcelFont.set_UnderLineType(ExcelUnderLineType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.VerticalAlignGet">
            <summary>设置 ExcelFont.get_VerticalAlign() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.VerticalAlignSetExcelVerticalAlignmentFont">
            <summary>设置 ExcelFont.set_VerticalAlign(ExcelVerticalAlignmentFont value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.BoldGet">
            <summary>设置 ExcelFont.get_Bold() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.BoldSetBoolean">
            <summary>设置 ExcelFont.set_Bold(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.ColorGet">
            <summary>设置 ExcelFont.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.FamilyGet">
            <summary>设置 ExcelFont.get_Family() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.FamilySetInt32">
            <summary>设置 ExcelFont.set_Family(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.IdGet">
            <summary>设置 ExcelFont.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.ItalicGet">
            <summary>设置 ExcelFont.get_Italic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.ItalicSetBoolean">
            <summary>设置 ExcelFont.set_Italic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.NameGet">
            <summary>设置 ExcelFont.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.NameSetString">
            <summary>设置 ExcelFont.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.SchemeGet">
            <summary>设置 ExcelFont.get_Scheme() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.SchemeSetString">
            <summary>设置 ExcelFont.set_Scheme(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.SetFromFontFont">
            <summary>设置 ExcelFont.SetFromFont(Font Font) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.SizeGet">
            <summary>设置 ExcelFont.get_Size() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.SizeSetSingle">
            <summary>设置 ExcelFont.set_Size(Single value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.StrikeGet">
            <summary>设置 ExcelFont.get_Strike() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.StrikeSetBoolean">
            <summary>设置 ExcelFont.set_Strike(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.UnderLineGet">
            <summary>设置 ExcelFont.get_UnderLine() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.UnderLineSetBoolean">
            <summary>设置 ExcelFont.set_UnderLine(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.UnderLineTypeGet">
            <summary>设置 ExcelFont.get_UnderLineType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.UnderLineTypeSetExcelUnderLineType">
            <summary>设置 ExcelFont.set_UnderLineType(ExcelUnderLineType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.VerticalAlignGet">
            <summary>设置 ExcelFont.get_VerticalAlign() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelFont.AllInstances.VerticalAlignSetExcelVerticalAlignmentFont">
            <summary>设置 ExcelFont.set_VerticalAlign(ExcelVerticalAlignmentFont value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill">
            <summary>OfficeOpenXml.Style.ExcelGradientFill 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.#ctor(OfficeOpenXml.Style.ExcelGradientFill)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.BottomGet">
            <summary>设置 ExcelGradientFill.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.BottomSetDouble">
            <summary>设置 ExcelGradientFill.set_Bottom(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.Color1Get">
            <summary>设置 ExcelGradientFill.get_Color1() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.Color2Get">
            <summary>设置 ExcelGradientFill.get_Color2() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.DegreeGet">
            <summary>设置 ExcelGradientFill.get_Degree() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.DegreeSetDouble">
            <summary>设置 ExcelGradientFill.set_Degree(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.IdGet">
            <summary>设置 ExcelGradientFill.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.LeftGet">
            <summary>设置 ExcelGradientFill.get_Left() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.LeftSetDouble">
            <summary>设置 ExcelGradientFill.set_Left(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.RightGet">
            <summary>设置 ExcelGradientFill.get_Right() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.RightSetDouble">
            <summary>设置 ExcelGradientFill.set_Right(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.TopGet">
            <summary>设置 ExcelGradientFill.get_Top() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.TopSetDouble">
            <summary>设置 ExcelGradientFill.set_Top(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.TypeGet">
            <summary>设置 ExcelGradientFill.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.TypeSetExcelFillGradientType">
            <summary>设置 ExcelGradientFill.set_Type(ExcelFillGradientType value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.BottomGet">
            <summary>设置 ExcelGradientFill.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.BottomSetDouble">
            <summary>设置 ExcelGradientFill.set_Bottom(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.Color1Get">
            <summary>设置 ExcelGradientFill.get_Color1() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.Color2Get">
            <summary>设置 ExcelGradientFill.get_Color2() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.DegreeGet">
            <summary>设置 ExcelGradientFill.get_Degree() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.DegreeSetDouble">
            <summary>设置 ExcelGradientFill.set_Degree(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.IdGet">
            <summary>设置 ExcelGradientFill.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.LeftGet">
            <summary>设置 ExcelGradientFill.get_Left() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.LeftSetDouble">
            <summary>设置 ExcelGradientFill.set_Left(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.RightGet">
            <summary>设置 ExcelGradientFill.get_Right() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.RightSetDouble">
            <summary>设置 ExcelGradientFill.set_Right(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.TopGet">
            <summary>设置 ExcelGradientFill.get_Top() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.TopSetDouble">
            <summary>设置 ExcelGradientFill.set_Top(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.TypeGet">
            <summary>设置 ExcelGradientFill.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelGradientFill.AllInstances.TypeSetExcelFillGradientType">
            <summary>设置 ExcelGradientFill.set_Type(ExcelFillGradientType value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat">
            <summary>OfficeOpenXml.Style.ExcelNumberFormat 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.#ctor(OfficeOpenXml.Style.ExcelNumberFormat)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.BuildInGet">
            <summary>设置 ExcelNumberFormat.get_BuildIn() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.BuildInSetBoolean">
            <summary>设置 ExcelNumberFormat.set_BuildIn(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.FormatGet">
            <summary>设置 ExcelNumberFormat.get_Format() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.FormatSetString">
            <summary>设置 ExcelNumberFormat.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.GetFromBuildIdFromFormatString">
            <summary>设置 ExcelNumberFormat.GetFromBuildIdFromFormat(String format) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.GetFromBuildInFromIDInt32">
            <summary>设置 ExcelNumberFormat.GetFromBuildInFromID(Int32 _numFmtId) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.IdGet">
            <summary>设置 ExcelNumberFormat.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.NumFmtIDGet">
            <summary>设置 ExcelNumberFormat.get_NumFmtID() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.AllInstances.BuildInGet">
            <summary>设置 ExcelNumberFormat.get_BuildIn() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.AllInstances.BuildInSetBoolean">
            <summary>设置 ExcelNumberFormat.set_BuildIn(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.AllInstances.FormatGet">
            <summary>设置 ExcelNumberFormat.get_Format() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.AllInstances.FormatSetString">
            <summary>设置 ExcelNumberFormat.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.AllInstances.IdGet">
            <summary>设置 ExcelNumberFormat.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelNumberFormat.AllInstances.NumFmtIDGet">
            <summary>设置 ExcelNumberFormat.get_NumFmtID() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelParagraph">
            <summary>OfficeOpenXml.Style.ExcelParagraph 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelParagraph.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelParagraph.#ctor(OfficeOpenXml.Style.ExcelParagraph)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelParagraph.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelParagraph.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraph.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraph.ConstructorXmlNamespaceManagerXmlNodeStringStringArray">
            <summary>设置 ExcelParagraph.ExcelParagraph(XmlNamespaceManager ns, XmlNode rootNode, String path, String[] schemaNodeOrder) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraph.TextGet">
            <summary>设置 ExcelParagraph.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraph.TextSetString">
            <summary>设置 ExcelParagraph.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelParagraph.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraph.AllInstances.TextGet">
            <summary>设置 ExcelParagraph.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraph.AllInstances.TextSetString">
            <summary>设置 ExcelParagraph.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection">
            <summary>OfficeOpenXml.Style.ExcelParagraphCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.#ctor(OfficeOpenXml.Style.ExcelParagraphCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.Style.ExcelParagraph})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.AddString">
            <summary>设置 ExcelParagraphCollection.Add(String Text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.Clear">
            <summary>设置 ExcelParagraphCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.ConstructorXmlNamespaceManagerXmlNodeStringStringArray">
            <summary>设置 ExcelParagraphCollection.ExcelParagraphCollection(XmlNamespaceManager ns, XmlNode topNode, String path, String[] schemaNodeOrder) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.CountGet">
            <summary>设置 ExcelParagraphCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.ItemGetInt32">
            <summary>设置 ExcelParagraphCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.RemoveAtInt32">
            <summary>设置 ExcelParagraphCollection.RemoveAt(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.RemoveExcelRichText">
            <summary>设置 ExcelParagraphCollection.Remove(ExcelRichText Item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.SystemCollectionsGenericIEnumerableOfficeOpenXmlStyleExcelParagraphGetEnumerator">
            <summary>设置 ExcelParagraphCollection.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.Style.ExcelParagraph&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelParagraphCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.TextGet">
            <summary>设置 ExcelParagraphCollection.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.TextSetString">
            <summary>设置 ExcelParagraphCollection.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.AllInstances.AddString">
            <summary>设置 ExcelParagraphCollection.Add(String Text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.AllInstances.Clear">
            <summary>设置 ExcelParagraphCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.AllInstances.CountGet">
            <summary>设置 ExcelParagraphCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.AllInstances.ItemGetInt32">
            <summary>设置 ExcelParagraphCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.AllInstances.RemoveAtInt32">
            <summary>设置 ExcelParagraphCollection.RemoveAt(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.AllInstances.RemoveExcelRichText">
            <summary>设置 ExcelParagraphCollection.Remove(ExcelRichText Item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.AllInstances.SystemCollectionsGenericIEnumerableOfficeOpenXmlStyleExcelParagraphGetEnumerator">
            <summary>设置 ExcelParagraphCollection.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.Style.ExcelParagraph&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelParagraphCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.AllInstances.TextGet">
            <summary>设置 ExcelParagraphCollection.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelParagraphCollection.AllInstances.TextSetString">
            <summary>设置 ExcelParagraphCollection.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelRichText">
            <summary>OfficeOpenXml.Style.ExcelRichText 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelRichText.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelRichText.#ctor(OfficeOpenXml.Style.ExcelRichText)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelRichText.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelRichText.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.BoldGet">
            <summary>设置 ExcelRichText.get_Bold() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.BoldSetBoolean">
            <summary>设置 ExcelRichText.set_Bold(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.ColorGet">
            <summary>设置 ExcelRichText.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.ColorSetColor">
            <summary>设置 ExcelRichText.set_Color(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelRichText.ExcelRichText(XmlNamespaceManager ns, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.FontNameGet">
            <summary>设置 ExcelRichText.get_FontName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.FontNameSetString">
            <summary>设置 ExcelRichText.set_FontName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.ItalicGet">
            <summary>设置 ExcelRichText.get_Italic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.ItalicSetBoolean">
            <summary>设置 ExcelRichText.set_Italic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.PreserveSpaceGet">
            <summary>设置 ExcelRichText.get_PreserveSpace() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.PreserveSpaceSetBoolean">
            <summary>设置 ExcelRichText.set_PreserveSpace(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.SizeGet">
            <summary>设置 ExcelRichText.get_Size() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.SizeSetSingle">
            <summary>设置 ExcelRichText.set_Size(Single value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.StrikeGet">
            <summary>设置 ExcelRichText.get_Strike() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.StrikeSetBoolean">
            <summary>设置 ExcelRichText.set_Strike(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.TextGet">
            <summary>设置 ExcelRichText.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.TextSetString">
            <summary>设置 ExcelRichText.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.UnderLineGet">
            <summary>设置 ExcelRichText.get_UnderLine() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.UnderLineSetBoolean">
            <summary>设置 ExcelRichText.set_UnderLine(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.VerticalAlignGet">
            <summary>设置 ExcelRichText.get_VerticalAlign() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.VerticalAlignSetExcelVerticalAlignmentFont">
            <summary>设置 ExcelRichText.set_VerticalAlign(ExcelVerticalAlignmentFont value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.BoldGet">
            <summary>设置 ExcelRichText.get_Bold() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.BoldSetBoolean">
            <summary>设置 ExcelRichText.set_Bold(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.ColorGet">
            <summary>设置 ExcelRichText.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.ColorSetColor">
            <summary>设置 ExcelRichText.set_Color(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.FontNameGet">
            <summary>设置 ExcelRichText.get_FontName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.FontNameSetString">
            <summary>设置 ExcelRichText.set_FontName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.ItalicGet">
            <summary>设置 ExcelRichText.get_Italic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.ItalicSetBoolean">
            <summary>设置 ExcelRichText.set_Italic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.PreserveSpaceGet">
            <summary>设置 ExcelRichText.get_PreserveSpace() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.PreserveSpaceSetBoolean">
            <summary>设置 ExcelRichText.set_PreserveSpace(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.SizeGet">
            <summary>设置 ExcelRichText.get_Size() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.SizeSetSingle">
            <summary>设置 ExcelRichText.set_Size(Single value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.StrikeGet">
            <summary>设置 ExcelRichText.get_Strike() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.StrikeSetBoolean">
            <summary>设置 ExcelRichText.set_Strike(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.TextGet">
            <summary>设置 ExcelRichText.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.TextSetString">
            <summary>设置 ExcelRichText.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.UnderLineGet">
            <summary>设置 ExcelRichText.get_UnderLine() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.UnderLineSetBoolean">
            <summary>设置 ExcelRichText.set_UnderLine(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.VerticalAlignGet">
            <summary>设置 ExcelRichText.get_VerticalAlign() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichText.AllInstances.VerticalAlignSetExcelVerticalAlignmentFont">
            <summary>设置 ExcelRichText.set_VerticalAlign(ExcelVerticalAlignmentFont value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection">
            <summary>OfficeOpenXml.Style.ExcelRichTextCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.#ctor(OfficeOpenXml.Style.ExcelRichTextCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.Style.ExcelRichText})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.AddString">
            <summary>设置 ExcelRichTextCollection.Add(String Text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.Clear">
            <summary>设置 ExcelRichTextCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelRichTextCollection.ExcelRichTextCollection(XmlNamespaceManager ns, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.ConstructorXmlNamespaceManagerXmlNodeExcelRangeBase">
            <summary>设置 ExcelRichTextCollection.ExcelRichTextCollection(XmlNamespaceManager ns, XmlNode topNode, ExcelRangeBase cells) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.CountGet">
            <summary>设置 ExcelRichTextCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.ItemGetInt32">
            <summary>设置 ExcelRichTextCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.RemoveAtInt32">
            <summary>设置 ExcelRichTextCollection.RemoveAt(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.RemoveExcelRichText">
            <summary>设置 ExcelRichTextCollection.Remove(ExcelRichText Item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.SystemCollectionsGenericIEnumerableOfficeOpenXmlStyleExcelRichTextGetEnumerator">
            <summary>设置 ExcelRichTextCollection.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.Style.ExcelRichText&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelRichTextCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.TextGet">
            <summary>设置 ExcelRichTextCollection.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.TextSetString">
            <summary>设置 ExcelRichTextCollection.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.UpdateCells">
            <summary>设置 ExcelRichTextCollection.UpdateCells() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.AllInstances.AddString">
            <summary>设置 ExcelRichTextCollection.Add(String Text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.AllInstances.Clear">
            <summary>设置 ExcelRichTextCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.AllInstances.CountGet">
            <summary>设置 ExcelRichTextCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.AllInstances.ItemGetInt32">
            <summary>设置 ExcelRichTextCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.AllInstances.RemoveAtInt32">
            <summary>设置 ExcelRichTextCollection.RemoveAt(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.AllInstances.RemoveExcelRichText">
            <summary>设置 ExcelRichTextCollection.Remove(ExcelRichText Item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.AllInstances.SystemCollectionsGenericIEnumerableOfficeOpenXmlStyleExcelRichTextGetEnumerator">
            <summary>设置 ExcelRichTextCollection.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.Style.ExcelRichText&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelRichTextCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.AllInstances.TextGet">
            <summary>设置 ExcelRichTextCollection.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.AllInstances.TextSetString">
            <summary>设置 ExcelRichTextCollection.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelRichTextCollection.AllInstances.UpdateCells">
            <summary>设置 ExcelRichTextCollection.UpdateCells() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelStyle">
            <summary>OfficeOpenXml.Style.ExcelStyle 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelStyle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelStyle.#ctor(OfficeOpenXml.Style.ExcelStyle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelStyle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelStyle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.BorderGet">
            <summary>设置 ExcelStyle.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.BorderSetBorder">
            <summary>设置 ExcelStyle.set_Border(Border value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.FillGet">
            <summary>设置 ExcelStyle.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.FillSetExcelFill">
            <summary>设置 ExcelStyle.set_Fill(ExcelFill value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.FontGet">
            <summary>设置 ExcelStyle.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.FontSetExcelFont">
            <summary>设置 ExcelStyle.set_Font(ExcelFont value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.HiddenGet">
            <summary>设置 ExcelStyle.get_Hidden() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.HiddenSetBoolean">
            <summary>设置 ExcelStyle.set_Hidden(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.HorizontalAlignmentGet">
            <summary>设置 ExcelStyle.get_HorizontalAlignment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.HorizontalAlignmentSetExcelHorizontalAlignment">
            <summary>设置 ExcelStyle.set_HorizontalAlignment(ExcelHorizontalAlignment value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.IdGet">
            <summary>设置 ExcelStyle.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.IndentGet">
            <summary>设置 ExcelStyle.get_Indent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.IndentSetInt32">
            <summary>设置 ExcelStyle.set_Indent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.LockedGet">
            <summary>设置 ExcelStyle.get_Locked() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.LockedSetBoolean">
            <summary>设置 ExcelStyle.set_Locked(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.NumberformatGet">
            <summary>设置 ExcelStyle.get_Numberformat() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.NumberformatSetExcelNumberFormat">
            <summary>设置 ExcelStyle.set_Numberformat(ExcelNumberFormat value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.PositionIDGet">
            <summary>设置 ExcelStyle.get_PositionID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.PositionIDSetInt32">
            <summary>设置 ExcelStyle.set_PositionID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.ReadingOrderGet">
            <summary>设置 ExcelStyle.get_ReadingOrder() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.ReadingOrderSetExcelReadingOrder">
            <summary>设置 ExcelStyle.set_ReadingOrder(ExcelReadingOrder value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.ShrinkToFitGet">
            <summary>设置 ExcelStyle.get_ShrinkToFit() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.ShrinkToFitSetBoolean">
            <summary>设置 ExcelStyle.set_ShrinkToFit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.StylesGet">
            <summary>设置 ExcelStyle.get_Styles() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.StylesSetExcelStyles">
            <summary>设置 ExcelStyle.set_Styles(ExcelStyles value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.TextRotationGet">
            <summary>设置 ExcelStyle.get_TextRotation() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.TextRotationSetInt32">
            <summary>设置 ExcelStyle.set_TextRotation(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.VerticalAlignmentGet">
            <summary>设置 ExcelStyle.get_VerticalAlignment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.VerticalAlignmentSetExcelVerticalAlignment">
            <summary>设置 ExcelStyle.set_VerticalAlignment(ExcelVerticalAlignment value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.WrapTextGet">
            <summary>设置 ExcelStyle.get_WrapText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.WrapTextSetBoolean">
            <summary>设置 ExcelStyle.set_WrapText(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.XfIdGet">
            <summary>设置 ExcelStyle.get_XfId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.XfIdSetInt32">
            <summary>设置 ExcelStyle.set_XfId(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.BorderGet">
            <summary>设置 ExcelStyle.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.BorderSetBorder">
            <summary>设置 ExcelStyle.set_Border(Border value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.FillGet">
            <summary>设置 ExcelStyle.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.FillSetExcelFill">
            <summary>设置 ExcelStyle.set_Fill(ExcelFill value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.FontGet">
            <summary>设置 ExcelStyle.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.FontSetExcelFont">
            <summary>设置 ExcelStyle.set_Font(ExcelFont value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.HiddenGet">
            <summary>设置 ExcelStyle.get_Hidden() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.HiddenSetBoolean">
            <summary>设置 ExcelStyle.set_Hidden(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.HorizontalAlignmentGet">
            <summary>设置 ExcelStyle.get_HorizontalAlignment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.HorizontalAlignmentSetExcelHorizontalAlignment">
            <summary>设置 ExcelStyle.set_HorizontalAlignment(ExcelHorizontalAlignment value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.IdGet">
            <summary>设置 ExcelStyle.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.IndentGet">
            <summary>设置 ExcelStyle.get_Indent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.IndentSetInt32">
            <summary>设置 ExcelStyle.set_Indent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.LockedGet">
            <summary>设置 ExcelStyle.get_Locked() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.LockedSetBoolean">
            <summary>设置 ExcelStyle.set_Locked(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.NumberformatGet">
            <summary>设置 ExcelStyle.get_Numberformat() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.NumberformatSetExcelNumberFormat">
            <summary>设置 ExcelStyle.set_Numberformat(ExcelNumberFormat value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.PositionIDGet">
            <summary>设置 ExcelStyle.get_PositionID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.PositionIDSetInt32">
            <summary>设置 ExcelStyle.set_PositionID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.ReadingOrderGet">
            <summary>设置 ExcelStyle.get_ReadingOrder() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.ReadingOrderSetExcelReadingOrder">
            <summary>设置 ExcelStyle.set_ReadingOrder(ExcelReadingOrder value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.ShrinkToFitGet">
            <summary>设置 ExcelStyle.get_ShrinkToFit() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.ShrinkToFitSetBoolean">
            <summary>设置 ExcelStyle.set_ShrinkToFit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.StylesGet">
            <summary>设置 ExcelStyle.get_Styles() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.StylesSetExcelStyles">
            <summary>设置 ExcelStyle.set_Styles(ExcelStyles value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.TextRotationGet">
            <summary>设置 ExcelStyle.get_TextRotation() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.TextRotationSetInt32">
            <summary>设置 ExcelStyle.set_TextRotation(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.VerticalAlignmentGet">
            <summary>设置 ExcelStyle.get_VerticalAlignment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.VerticalAlignmentSetExcelVerticalAlignment">
            <summary>设置 ExcelStyle.set_VerticalAlignment(ExcelVerticalAlignment value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.WrapTextGet">
            <summary>设置 ExcelStyle.get_WrapText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.WrapTextSetBoolean">
            <summary>设置 ExcelStyle.set_WrapText(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.XfIdGet">
            <summary>设置 ExcelStyle.get_XfId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelStyle.AllInstances.XfIdSetInt32">
            <summary>设置 ExcelStyle.set_XfId(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelTextFont">
            <summary>OfficeOpenXml.Style.ExcelTextFont 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.#ctor(OfficeOpenXml.Style.ExcelTextFont)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.BoldGet">
            <summary>设置 ExcelTextFont.get_Bold() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.BoldSetBoolean">
            <summary>设置 ExcelTextFont.set_Bold(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.ColorGet">
            <summary>设置 ExcelTextFont.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.ColorSetColor">
            <summary>设置 ExcelTextFont.set_Color(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.ComplexFontGet">
            <summary>设置 ExcelTextFont.get_ComplexFont() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.ComplexFontSetString">
            <summary>设置 ExcelTextFont.set_ComplexFont(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.ConstructorXmlNamespaceManagerXmlNodeStringStringArray">
            <summary>设置 ExcelTextFont.ExcelTextFont(XmlNamespaceManager namespaceManager, XmlNode rootNode, String path, String[] schemaNodeOrder) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.CreateTopNode">
            <summary>设置 ExcelTextFont.CreateTopNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.ItalicGet">
            <summary>设置 ExcelTextFont.get_Italic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.ItalicSetBoolean">
            <summary>设置 ExcelTextFont.set_Italic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.LatinFontGet">
            <summary>设置 ExcelTextFont.get_LatinFont() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.LatinFontSetString">
            <summary>设置 ExcelTextFont.set_LatinFont(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.SetFromFontFont">
            <summary>设置 ExcelTextFont.SetFromFont(Font Font) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.SizeGet">
            <summary>设置 ExcelTextFont.get_Size() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.SizeSetSingle">
            <summary>设置 ExcelTextFont.set_Size(Single value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.StrikeGet">
            <summary>设置 ExcelTextFont.get_Strike() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.StrikeSeteStrikeType">
            <summary>设置 ExcelTextFont.set_Strike(eStrikeType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.TranslateStrikeString">
            <summary>设置 ExcelTextFont.TranslateStrike(String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.TranslateStrikeTexteStrikeType">
            <summary>设置 ExcelTextFont.TranslateStrikeText(eStrikeType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.TranslateUnderlineString">
            <summary>设置 ExcelTextFont.TranslateUnderline(String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.TranslateUnderlineTexteUnderLineType">
            <summary>设置 ExcelTextFont.TranslateUnderlineText(eUnderLineType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.UnderLineColorGet">
            <summary>设置 ExcelTextFont.get_UnderLineColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.UnderLineColorSetColor">
            <summary>设置 ExcelTextFont.set_UnderLineColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.UnderLineGet">
            <summary>设置 ExcelTextFont.get_UnderLine() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.UnderLineSeteUnderLineType">
            <summary>设置 ExcelTextFont.set_UnderLine(eUnderLineType value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.BoldGet">
            <summary>设置 ExcelTextFont.get_Bold() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.BoldSetBoolean">
            <summary>设置 ExcelTextFont.set_Bold(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.ColorGet">
            <summary>设置 ExcelTextFont.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.ColorSetColor">
            <summary>设置 ExcelTextFont.set_Color(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.ComplexFontGet">
            <summary>设置 ExcelTextFont.get_ComplexFont() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.ComplexFontSetString">
            <summary>设置 ExcelTextFont.set_ComplexFont(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.CreateTopNode">
            <summary>设置 ExcelTextFont.CreateTopNode() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.ItalicGet">
            <summary>设置 ExcelTextFont.get_Italic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.ItalicSetBoolean">
            <summary>设置 ExcelTextFont.set_Italic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.LatinFontGet">
            <summary>设置 ExcelTextFont.get_LatinFont() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.LatinFontSetString">
            <summary>设置 ExcelTextFont.set_LatinFont(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.SetFromFontFont">
            <summary>设置 ExcelTextFont.SetFromFont(Font Font) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.SizeGet">
            <summary>设置 ExcelTextFont.get_Size() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.SizeSetSingle">
            <summary>设置 ExcelTextFont.set_Size(Single value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.StrikeGet">
            <summary>设置 ExcelTextFont.get_Strike() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.StrikeSeteStrikeType">
            <summary>设置 ExcelTextFont.set_Strike(eStrikeType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.TranslateStrikeString">
            <summary>设置 ExcelTextFont.TranslateStrike(String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.TranslateStrikeTexteStrikeType">
            <summary>设置 ExcelTextFont.TranslateStrikeText(eStrikeType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.TranslateUnderlineString">
            <summary>设置 ExcelTextFont.TranslateUnderline(String text) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.TranslateUnderlineTexteUnderLineType">
            <summary>设置 ExcelTextFont.TranslateUnderlineText(eUnderLineType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.UnderLineColorGet">
            <summary>设置 ExcelTextFont.get_UnderLineColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.UnderLineColorSetColor">
            <summary>设置 ExcelTextFont.set_UnderLineColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.UnderLineGet">
            <summary>设置 ExcelTextFont.get_UnderLine() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimExcelTextFont.AllInstances.UnderLineSeteUnderLineType">
            <summary>设置 ExcelTextFont.set_UnderLine(eUnderLineType value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimStyleBase">
            <summary>OfficeOpenXml.Style.StyleBase 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimStyleBase.#ctor(OfficeOpenXml.Style.StyleBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimStyleBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.Fakes.ShimStyleBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimStyleBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimStyleBase.IndexGet">
            <summary>设置 StyleBase.get_Index() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimStyleBase.IndexSetInt32">
            <summary>设置 StyleBase.set_Index(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimStyleBase.SetIndexInt32">
            <summary>设置 StyleBase.SetIndex(Int32 index) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.Fakes.ShimStyleBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimStyleBase.AllInstances.IndexGet">
            <summary>设置 StyleBase.get_Index() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimStyleBase.AllInstances.IndexSetInt32">
            <summary>设置 StyleBase.set_Index(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.Fakes.ShimStyleBase.AllInstances.SetIndexInt32">
            <summary>设置 StyleBase.SetIndex(Int32 index) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml">
            <summary>OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.#ctor(OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.ColorGet">
            <summary>设置 ExcelBorderItemXml.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.ColorSetExcelColorXml">
            <summary>设置 ExcelBorderItemXml.set_Color(ExcelColorXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.ConstructorXmlNamespaceManager">
            <summary>设置 ExcelBorderItemXml.ExcelBorderItemXml(XmlNamespaceManager nameSpaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelBorderItemXml.ExcelBorderItemXml(XmlNamespaceManager nsm, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.Copy">
            <summary>设置 ExcelBorderItemXml.Copy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.CreateXmlNodeXmlNode">
            <summary>设置 ExcelBorderItemXml.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.ExistsGet">
            <summary>设置 ExcelBorderItemXml.get_Exists() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.ExistsSetBoolean">
            <summary>设置 ExcelBorderItemXml.set_Exists(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.GetBorderStyleString">
            <summary>设置 ExcelBorderItemXml.GetBorderStyle(String style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.IdGet">
            <summary>设置 ExcelBorderItemXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.SetBorderStringExcelBorderStyle">
            <summary>设置 ExcelBorderItemXml.SetBorderString(ExcelBorderStyle Style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.StyleGet">
            <summary>设置 ExcelBorderItemXml.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.StyleSetExcelBorderStyle">
            <summary>设置 ExcelBorderItemXml.set_Style(ExcelBorderStyle value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.AllInstances.ColorGet">
            <summary>设置 ExcelBorderItemXml.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.AllInstances.ColorSetExcelColorXml">
            <summary>设置 ExcelBorderItemXml.set_Color(ExcelColorXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.AllInstances.Copy">
            <summary>设置 ExcelBorderItemXml.Copy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.AllInstances.CreateXmlNodeXmlNode">
            <summary>设置 ExcelBorderItemXml.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.AllInstances.ExistsGet">
            <summary>设置 ExcelBorderItemXml.get_Exists() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.AllInstances.ExistsSetBoolean">
            <summary>设置 ExcelBorderItemXml.set_Exists(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.AllInstances.GetBorderStyleString">
            <summary>设置 ExcelBorderItemXml.GetBorderStyle(String style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.AllInstances.IdGet">
            <summary>设置 ExcelBorderItemXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.AllInstances.SetBorderStringExcelBorderStyle">
            <summary>设置 ExcelBorderItemXml.SetBorderString(ExcelBorderStyle Style) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.AllInstances.StyleGet">
            <summary>设置 ExcelBorderItemXml.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderItemXml.AllInstances.StyleSetExcelBorderStyle">
            <summary>设置 ExcelBorderItemXml.set_Style(ExcelBorderStyle value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml">
            <summary>OfficeOpenXml.Style.XmlAccess.ExcelBorderXml 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.#ctor(OfficeOpenXml.Style.XmlAccess.ExcelBorderXml)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.BottomGet">
            <summary>设置 ExcelBorderXml.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.BottomSetExcelBorderItemXml">
            <summary>设置 ExcelBorderXml.set_Bottom(ExcelBorderItemXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.ConstructorXmlNamespaceManager">
            <summary>设置 ExcelBorderXml.ExcelBorderXml(XmlNamespaceManager nameSpaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelBorderXml.ExcelBorderXml(XmlNamespaceManager nsm, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.Copy">
            <summary>设置 ExcelBorderXml.Copy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.CreateXmlNodeXmlNode">
            <summary>设置 ExcelBorderXml.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.DiagonalDownGet">
            <summary>设置 ExcelBorderXml.get_DiagonalDown() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.DiagonalDownSetBoolean">
            <summary>设置 ExcelBorderXml.set_DiagonalDown(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.DiagonalGet">
            <summary>设置 ExcelBorderXml.get_Diagonal() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.DiagonalSetExcelBorderItemXml">
            <summary>设置 ExcelBorderXml.set_Diagonal(ExcelBorderItemXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.DiagonalUpGet">
            <summary>设置 ExcelBorderXml.get_DiagonalUp() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.DiagonalUpSetBoolean">
            <summary>设置 ExcelBorderXml.set_DiagonalUp(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.IdGet">
            <summary>设置 ExcelBorderXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.LeftGet">
            <summary>设置 ExcelBorderXml.get_Left() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.LeftSetExcelBorderItemXml">
            <summary>设置 ExcelBorderXml.set_Left(ExcelBorderItemXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.RightGet">
            <summary>设置 ExcelBorderXml.get_Right() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.RightSetExcelBorderItemXml">
            <summary>设置 ExcelBorderXml.set_Right(ExcelBorderItemXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.TopGet">
            <summary>设置 ExcelBorderXml.get_Top() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.TopSetExcelBorderItemXml">
            <summary>设置 ExcelBorderXml.set_Top(ExcelBorderItemXml value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.BottomGet">
            <summary>设置 ExcelBorderXml.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.BottomSetExcelBorderItemXml">
            <summary>设置 ExcelBorderXml.set_Bottom(ExcelBorderItemXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.Copy">
            <summary>设置 ExcelBorderXml.Copy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.CreateXmlNodeXmlNode">
            <summary>设置 ExcelBorderXml.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.DiagonalDownGet">
            <summary>设置 ExcelBorderXml.get_DiagonalDown() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.DiagonalDownSetBoolean">
            <summary>设置 ExcelBorderXml.set_DiagonalDown(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.DiagonalGet">
            <summary>设置 ExcelBorderXml.get_Diagonal() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.DiagonalSetExcelBorderItemXml">
            <summary>设置 ExcelBorderXml.set_Diagonal(ExcelBorderItemXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.DiagonalUpGet">
            <summary>设置 ExcelBorderXml.get_DiagonalUp() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.DiagonalUpSetBoolean">
            <summary>设置 ExcelBorderXml.set_DiagonalUp(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.IdGet">
            <summary>设置 ExcelBorderXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.LeftGet">
            <summary>设置 ExcelBorderXml.get_Left() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.LeftSetExcelBorderItemXml">
            <summary>设置 ExcelBorderXml.set_Left(ExcelBorderItemXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.RightGet">
            <summary>设置 ExcelBorderXml.get_Right() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.RightSetExcelBorderItemXml">
            <summary>设置 ExcelBorderXml.set_Right(ExcelBorderItemXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.TopGet">
            <summary>设置 ExcelBorderXml.get_Top() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelBorderXml.AllInstances.TopSetExcelBorderItemXml">
            <summary>设置 ExcelBorderXml.set_Top(ExcelBorderItemXml value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml">
            <summary>OfficeOpenXml.Style.XmlAccess.ExcelColorXml 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.#ctor(OfficeOpenXml.Style.XmlAccess.ExcelColorXml)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AutoGet">
            <summary>设置 ExcelColorXml.get_Auto() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AutoSetBoolean">
            <summary>设置 ExcelColorXml.set_Auto(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.Clear">
            <summary>设置 ExcelColorXml.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.ConstructorXmlNamespaceManager">
            <summary>设置 ExcelColorXml.ExcelColorXml(XmlNamespaceManager nameSpaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelColorXml.ExcelColorXml(XmlNamespaceManager nsm, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.Copy">
            <summary>设置 ExcelColorXml.Copy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.CreateXmlNodeXmlNode">
            <summary>设置 ExcelColorXml.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.ExistsGet">
            <summary>设置 ExcelColorXml.get_Exists() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.IdGet">
            <summary>设置 ExcelColorXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.IndexedGet">
            <summary>设置 ExcelColorXml.get_Indexed() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.IndexedSetInt32">
            <summary>设置 ExcelColorXml.set_Indexed(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.RgbGet">
            <summary>设置 ExcelColorXml.get_Rgb() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.RgbSetString">
            <summary>设置 ExcelColorXml.set_Rgb(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.SetColorColor">
            <summary>设置 ExcelColorXml.SetColor(Color color) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.ThemeGet">
            <summary>设置 ExcelColorXml.get_Theme() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.TintGet">
            <summary>设置 ExcelColorXml.get_Tint() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.TintSetDecimal">
            <summary>设置 ExcelColorXml.set_Tint(Decimal value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.AutoGet">
            <summary>设置 ExcelColorXml.get_Auto() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.AutoSetBoolean">
            <summary>设置 ExcelColorXml.set_Auto(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.Clear">
            <summary>设置 ExcelColorXml.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.Copy">
            <summary>设置 ExcelColorXml.Copy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.CreateXmlNodeXmlNode">
            <summary>设置 ExcelColorXml.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.ExistsGet">
            <summary>设置 ExcelColorXml.get_Exists() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.IdGet">
            <summary>设置 ExcelColorXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.IndexedGet">
            <summary>设置 ExcelColorXml.get_Indexed() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.IndexedSetInt32">
            <summary>设置 ExcelColorXml.set_Indexed(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.RgbGet">
            <summary>设置 ExcelColorXml.get_Rgb() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.RgbSetString">
            <summary>设置 ExcelColorXml.set_Rgb(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.SetColorColor">
            <summary>设置 ExcelColorXml.SetColor(Color color) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.ThemeGet">
            <summary>设置 ExcelColorXml.get_Theme() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.TintGet">
            <summary>设置 ExcelColorXml.get_Tint() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelColorXml.AllInstances.TintSetDecimal">
            <summary>设置 ExcelColorXml.set_Tint(Decimal value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml">
            <summary>OfficeOpenXml.Style.XmlAccess.ExcelFillXml 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.#ctor(OfficeOpenXml.Style.XmlAccess.ExcelFillXml)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.BackgroundColorGet">
            <summary>设置 ExcelFillXml.get_BackgroundColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.BackgroundColorSetExcelColorXml">
            <summary>设置 ExcelFillXml.set_BackgroundColor(ExcelColorXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.ConstructorXmlNamespaceManager">
            <summary>设置 ExcelFillXml.ExcelFillXml(XmlNamespaceManager nameSpaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelFillXml.ExcelFillXml(XmlNamespaceManager nsm, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.Copy">
            <summary>设置 ExcelFillXml.Copy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.CreateXmlNodeXmlNode">
            <summary>设置 ExcelFillXml.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.GetPatternTypeString">
            <summary>设置 ExcelFillXml.GetPatternType(String patternType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.IdGet">
            <summary>设置 ExcelFillXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.PatternColorGet">
            <summary>设置 ExcelFillXml.get_PatternColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.PatternColorSetExcelColorXml">
            <summary>设置 ExcelFillXml.set_PatternColor(ExcelColorXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.PatternTypeGet">
            <summary>设置 ExcelFillXml.get_PatternType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.PatternTypeSetExcelFillStyle">
            <summary>设置 ExcelFillXml.set_PatternType(ExcelFillStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.SetPatternStringExcelFillStyle">
            <summary>设置 ExcelFillXml.SetPatternString(ExcelFillStyle pattern) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.AllInstances.BackgroundColorGet">
            <summary>设置 ExcelFillXml.get_BackgroundColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.AllInstances.BackgroundColorSetExcelColorXml">
            <summary>设置 ExcelFillXml.set_BackgroundColor(ExcelColorXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.AllInstances.Copy">
            <summary>设置 ExcelFillXml.Copy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.AllInstances.CreateXmlNodeXmlNode">
            <summary>设置 ExcelFillXml.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.AllInstances.GetPatternTypeString">
            <summary>设置 ExcelFillXml.GetPatternType(String patternType) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.AllInstances.IdGet">
            <summary>设置 ExcelFillXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.AllInstances.PatternColorGet">
            <summary>设置 ExcelFillXml.get_PatternColor() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.AllInstances.PatternColorSetExcelColorXml">
            <summary>设置 ExcelFillXml.set_PatternColor(ExcelColorXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.AllInstances.PatternTypeGet">
            <summary>设置 ExcelFillXml.get_PatternType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.AllInstances.PatternTypeSetExcelFillStyle">
            <summary>设置 ExcelFillXml.set_PatternType(ExcelFillStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFillXml.AllInstances.SetPatternStringExcelFillStyle">
            <summary>设置 ExcelFillXml.SetPatternString(ExcelFillStyle pattern) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml">
            <summary>OfficeOpenXml.Style.XmlAccess.ExcelFontXml 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.#ctor(OfficeOpenXml.Style.XmlAccess.ExcelFontXml)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.BoldGet">
            <summary>设置 ExcelFontXml.get_Bold() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.BoldSetBoolean">
            <summary>设置 ExcelFontXml.set_Bold(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.ColorGet">
            <summary>设置 ExcelFontXml.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.ColorSetExcelColorXml">
            <summary>设置 ExcelFontXml.set_Color(ExcelColorXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.ConstructorXmlNamespaceManager">
            <summary>设置 ExcelFontXml.ExcelFontXml(XmlNamespaceManager nameSpaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelFontXml.ExcelFontXml(XmlNamespaceManager nsm, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.Copy">
            <summary>设置 ExcelFontXml.Copy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.CreateXmlNodeXmlNode">
            <summary>设置 ExcelFontXml.CreateXmlNode(XmlNode topElement) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.FamilyGet">
            <summary>设置 ExcelFontXml.get_Family() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.FamilySetInt32">
            <summary>设置 ExcelFontXml.set_Family(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.IdGet">
            <summary>设置 ExcelFontXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.ItalicGet">
            <summary>设置 ExcelFontXml.get_Italic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.ItalicSetBoolean">
            <summary>设置 ExcelFontXml.set_Italic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.NameGet">
            <summary>设置 ExcelFontXml.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.NameSetString">
            <summary>设置 ExcelFontXml.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.SchemeGet">
            <summary>设置 ExcelFontXml.get_Scheme() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.SchemeSetString">
            <summary>设置 ExcelFontXml.set_Scheme(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.SetFromFontFont">
            <summary>设置 ExcelFontXml.SetFromFont(Font Font) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.SizeGet">
            <summary>设置 ExcelFontXml.get_Size() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.SizeSetSingle">
            <summary>设置 ExcelFontXml.set_Size(Single value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.StrikeGet">
            <summary>设置 ExcelFontXml.get_Strike() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.StrikeSetBoolean">
            <summary>设置 ExcelFontXml.set_Strike(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.UnderLineGet">
            <summary>设置 ExcelFontXml.get_UnderLine() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.UnderLineSetBoolean">
            <summary>设置 ExcelFontXml.set_UnderLine(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.UnderLineTypeGet">
            <summary>设置 ExcelFontXml.get_UnderLineType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.UnderLineTypeSetExcelUnderLineType">
            <summary>设置 ExcelFontXml.set_UnderLineType(ExcelUnderLineType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.VerticalAlignGet">
            <summary>设置 ExcelFontXml.get_VerticalAlign() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.VerticalAlignSetString">
            <summary>设置 ExcelFontXml.set_VerticalAlign(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.BoldGet">
            <summary>设置 ExcelFontXml.get_Bold() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.BoldSetBoolean">
            <summary>设置 ExcelFontXml.set_Bold(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.ColorGet">
            <summary>设置 ExcelFontXml.get_Color() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.ColorSetExcelColorXml">
            <summary>设置 ExcelFontXml.set_Color(ExcelColorXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.Copy">
            <summary>设置 ExcelFontXml.Copy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.CreateXmlNodeXmlNode">
            <summary>设置 ExcelFontXml.CreateXmlNode(XmlNode topElement) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.FamilyGet">
            <summary>设置 ExcelFontXml.get_Family() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.FamilySetInt32">
            <summary>设置 ExcelFontXml.set_Family(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.IdGet">
            <summary>设置 ExcelFontXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.ItalicGet">
            <summary>设置 ExcelFontXml.get_Italic() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.ItalicSetBoolean">
            <summary>设置 ExcelFontXml.set_Italic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.NameGet">
            <summary>设置 ExcelFontXml.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.NameSetString">
            <summary>设置 ExcelFontXml.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.SchemeGet">
            <summary>设置 ExcelFontXml.get_Scheme() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.SchemeSetString">
            <summary>设置 ExcelFontXml.set_Scheme(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.SetFromFontFont">
            <summary>设置 ExcelFontXml.SetFromFont(Font Font) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.SizeGet">
            <summary>设置 ExcelFontXml.get_Size() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.SizeSetSingle">
            <summary>设置 ExcelFontXml.set_Size(Single value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.StrikeGet">
            <summary>设置 ExcelFontXml.get_Strike() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.StrikeSetBoolean">
            <summary>设置 ExcelFontXml.set_Strike(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.UnderLineGet">
            <summary>设置 ExcelFontXml.get_UnderLine() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.UnderLineSetBoolean">
            <summary>设置 ExcelFontXml.set_UnderLine(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.UnderLineTypeGet">
            <summary>设置 ExcelFontXml.get_UnderLineType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.UnderLineTypeSetExcelUnderLineType">
            <summary>设置 ExcelFontXml.set_UnderLineType(ExcelUnderLineType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.VerticalAlignGet">
            <summary>设置 ExcelFontXml.get_VerticalAlign() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelFontXml.AllInstances.VerticalAlignSetString">
            <summary>设置 ExcelFontXml.set_VerticalAlign(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml">
            <summary>OfficeOpenXml.Style.XmlAccess.ExcelGradientFillXml 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.#ctor(OfficeOpenXml.Style.XmlAccess.ExcelGradientFillXml)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.BottomGet">
            <summary>设置 ExcelGradientFillXml.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.BottomSetDouble">
            <summary>设置 ExcelGradientFillXml.set_Bottom(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.ConstructorXmlNamespaceManager">
            <summary>设置 ExcelGradientFillXml.ExcelGradientFillXml(XmlNamespaceManager nameSpaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelGradientFillXml.ExcelGradientFillXml(XmlNamespaceManager nsm, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.Copy">
            <summary>设置 ExcelGradientFillXml.Copy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.CreateXmlNodeXmlNode">
            <summary>设置 ExcelGradientFillXml.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.DegreeGet">
            <summary>设置 ExcelGradientFillXml.get_Degree() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.DegreeSetDouble">
            <summary>设置 ExcelGradientFillXml.set_Degree(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.GradientColor1Get">
            <summary>设置 ExcelGradientFillXml.get_GradientColor1() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.GradientColor1SetExcelColorXml">
            <summary>设置 ExcelGradientFillXml.set_GradientColor1(ExcelColorXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.GradientColor2Get">
            <summary>设置 ExcelGradientFillXml.get_GradientColor2() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.GradientColor2SetExcelColorXml">
            <summary>设置 ExcelGradientFillXml.set_GradientColor2(ExcelColorXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.IdGet">
            <summary>设置 ExcelGradientFillXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.LeftGet">
            <summary>设置 ExcelGradientFillXml.get_Left() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.LeftSetDouble">
            <summary>设置 ExcelGradientFillXml.set_Left(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.RightGet">
            <summary>设置 ExcelGradientFillXml.get_Right() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.RightSetDouble">
            <summary>设置 ExcelGradientFillXml.set_Right(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.TopGet">
            <summary>设置 ExcelGradientFillXml.get_Top() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.TopSetDouble">
            <summary>设置 ExcelGradientFillXml.set_Top(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.TypeGet">
            <summary>设置 ExcelGradientFillXml.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.TypeSetExcelFillGradientType">
            <summary>设置 ExcelGradientFillXml.set_Type(ExcelFillGradientType value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.BottomGet">
            <summary>设置 ExcelGradientFillXml.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.BottomSetDouble">
            <summary>设置 ExcelGradientFillXml.set_Bottom(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.Copy">
            <summary>设置 ExcelGradientFillXml.Copy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.CreateXmlNodeXmlNode">
            <summary>设置 ExcelGradientFillXml.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.DegreeGet">
            <summary>设置 ExcelGradientFillXml.get_Degree() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.DegreeSetDouble">
            <summary>设置 ExcelGradientFillXml.set_Degree(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.GradientColor1Get">
            <summary>设置 ExcelGradientFillXml.get_GradientColor1() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.GradientColor1SetExcelColorXml">
            <summary>设置 ExcelGradientFillXml.set_GradientColor1(ExcelColorXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.GradientColor2Get">
            <summary>设置 ExcelGradientFillXml.get_GradientColor2() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.GradientColor2SetExcelColorXml">
            <summary>设置 ExcelGradientFillXml.set_GradientColor2(ExcelColorXml value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.IdGet">
            <summary>设置 ExcelGradientFillXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.LeftGet">
            <summary>设置 ExcelGradientFillXml.get_Left() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.LeftSetDouble">
            <summary>设置 ExcelGradientFillXml.set_Left(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.RightGet">
            <summary>设置 ExcelGradientFillXml.get_Right() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.RightSetDouble">
            <summary>设置 ExcelGradientFillXml.set_Right(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.TopGet">
            <summary>设置 ExcelGradientFillXml.get_Top() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.TopSetDouble">
            <summary>设置 ExcelGradientFillXml.set_Top(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.TypeGet">
            <summary>设置 ExcelGradientFillXml.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelGradientFillXml.AllInstances.TypeSetExcelFillGradientType">
            <summary>设置 ExcelGradientFillXml.set_Type(ExcelFillGradientType value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml">
            <summary>OfficeOpenXml.Style.XmlAccess.ExcelNamedStyleXml 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.#ctor(OfficeOpenXml.Style.XmlAccess.ExcelNamedStyleXml)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.BuildInIdGet">
            <summary>设置 ExcelNamedStyleXml.get_BuildInId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.BuildInIdSetInt32">
            <summary>设置 ExcelNamedStyleXml.set_BuildInId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.ConstructorXmlNamespaceManagerExcelStyles">
            <summary>设置 ExcelNamedStyleXml.ExcelNamedStyleXml(XmlNamespaceManager nameSpaceManager, ExcelStyles styles) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.ConstructorXmlNamespaceManagerXmlNodeExcelStyles">
            <summary>设置 ExcelNamedStyleXml.ExcelNamedStyleXml(XmlNamespaceManager NameSpaceManager, XmlNode topNode, ExcelStyles styles) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.CreateXmlNodeXmlNode">
            <summary>设置 ExcelNamedStyleXml.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.CustomBuildinGet">
            <summary>设置 ExcelNamedStyleXml.get_CustomBuildin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.CustomBuildinSetBoolean">
            <summary>设置 ExcelNamedStyleXml.set_CustomBuildin(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.IdGet">
            <summary>设置 ExcelNamedStyleXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.NameGet">
            <summary>设置 ExcelNamedStyleXml.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.NameSetString">
            <summary>设置 ExcelNamedStyleXml.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.StyleGet">
            <summary>设置 ExcelNamedStyleXml.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.StyleSetExcelStyle">
            <summary>设置 ExcelNamedStyleXml.set_Style(ExcelStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.StyleXfIdGet">
            <summary>设置 ExcelNamedStyleXml.get_StyleXfId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.StyleXfIdSetInt32">
            <summary>设置 ExcelNamedStyleXml.set_StyleXfId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.XfIdGet">
            <summary>设置 ExcelNamedStyleXml.get_XfId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.XfIdSetInt32">
            <summary>设置 ExcelNamedStyleXml.set_XfId(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances.BuildInIdGet">
            <summary>设置 ExcelNamedStyleXml.get_BuildInId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances.BuildInIdSetInt32">
            <summary>设置 ExcelNamedStyleXml.set_BuildInId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances.CreateXmlNodeXmlNode">
            <summary>设置 ExcelNamedStyleXml.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances.CustomBuildinGet">
            <summary>设置 ExcelNamedStyleXml.get_CustomBuildin() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances.CustomBuildinSetBoolean">
            <summary>设置 ExcelNamedStyleXml.set_CustomBuildin(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances.IdGet">
            <summary>设置 ExcelNamedStyleXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances.NameGet">
            <summary>设置 ExcelNamedStyleXml.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances.NameSetString">
            <summary>设置 ExcelNamedStyleXml.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances.StyleGet">
            <summary>设置 ExcelNamedStyleXml.get_Style() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances.StyleSetExcelStyle">
            <summary>设置 ExcelNamedStyleXml.set_Style(ExcelStyle value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances.StyleXfIdGet">
            <summary>设置 ExcelNamedStyleXml.get_StyleXfId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances.StyleXfIdSetInt32">
            <summary>设置 ExcelNamedStyleXml.set_StyleXfId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances.XfIdGet">
            <summary>设置 ExcelNamedStyleXml.get_XfId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNamedStyleXml.AllInstances.XfIdSetInt32">
            <summary>设置 ExcelNamedStyleXml.set_XfId(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml">
            <summary>OfficeOpenXml.Style.XmlAccess.ExcelNumberFormatXml 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.#ctor(OfficeOpenXml.Style.XmlAccess.ExcelNumberFormatXml)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.AddBuildInXmlNamespaceManagerExcelStyleCollectionOfExcelNumberFormatXml">
            <summary>设置 ExcelNumberFormatXml.AddBuildIn(XmlNamespaceManager NameSpaceManager, ExcelStyleCollection`1&lt;ExcelNumberFormatXml&gt; NumberFormats) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.BuildInGet">
            <summary>设置 ExcelNumberFormatXml.get_BuildIn() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.BuildInSetBoolean">
            <summary>设置 ExcelNumberFormatXml.set_BuildIn(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.ConstructorXmlNamespaceManager">
            <summary>设置 ExcelNumberFormatXml.ExcelNumberFormatXml(XmlNamespaceManager nameSpaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.ConstructorXmlNamespaceManagerBoolean">
            <summary>设置 ExcelNumberFormatXml.ExcelNumberFormatXml(XmlNamespaceManager nameSpaceManager, Boolean buildIn) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelNumberFormatXml.ExcelNumberFormatXml(XmlNamespaceManager nsm, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.CreateXmlNodeXmlNode">
            <summary>设置 ExcelNumberFormatXml.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.FormatGet">
            <summary>设置 ExcelNumberFormatXml.get_Format() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.FormatSetString">
            <summary>设置 ExcelNumberFormatXml.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.GetNewIDInt32String">
            <summary>设置 ExcelNumberFormatXml.GetNewID(Int32 NumFmtId, String Format) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.IdGet">
            <summary>设置 ExcelNumberFormatXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.NumFmtIdGet">
            <summary>设置 ExcelNumberFormatXml.get_NumFmtId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.NumFmtIdSetInt32">
            <summary>设置 ExcelNumberFormatXml.set_NumFmtId(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.AllInstances.BuildInGet">
            <summary>设置 ExcelNumberFormatXml.get_BuildIn() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.AllInstances.BuildInSetBoolean">
            <summary>设置 ExcelNumberFormatXml.set_BuildIn(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.AllInstances.CreateXmlNodeXmlNode">
            <summary>设置 ExcelNumberFormatXml.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.AllInstances.FormatGet">
            <summary>设置 ExcelNumberFormatXml.get_Format() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.AllInstances.FormatSetString">
            <summary>设置 ExcelNumberFormatXml.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.AllInstances.GetNewIDInt32String">
            <summary>设置 ExcelNumberFormatXml.GetNewID(Int32 NumFmtId, String Format) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.AllInstances.IdGet">
            <summary>设置 ExcelNumberFormatXml.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.AllInstances.NumFmtIdGet">
            <summary>设置 ExcelNumberFormatXml.get_NumFmtId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelNumberFormatXml.AllInstances.NumFmtIdSetInt32">
            <summary>设置 ExcelNumberFormatXml.set_NumFmtId(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs">
            <summary>OfficeOpenXml.Style.XmlAccess.ExcelXfs 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.#ctor(OfficeOpenXml.Style.XmlAccess.ExcelXfs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.BorderGet">
            <summary>设置 ExcelXfs.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.BorderIdGet">
            <summary>设置 ExcelXfs.get_BorderId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.BorderIdSetInt32">
            <summary>设置 ExcelXfs.set_BorderId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.ConstructorXmlNamespaceManagerExcelStyles">
            <summary>设置 ExcelXfs.ExcelXfs(XmlNamespaceManager nameSpaceManager, ExcelStyles styles) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.ConstructorXmlNamespaceManagerXmlNodeExcelStyles">
            <summary>设置 ExcelXfs.ExcelXfs(XmlNamespaceManager nsm, XmlNode topNode, ExcelStyles styles) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.Copy">
            <summary>设置 ExcelXfs.Copy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.CopyExcelStyles">
            <summary>设置 ExcelXfs.Copy(ExcelStyles styles) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.CreateXmlNodeXmlNode">
            <summary>设置 ExcelXfs.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.CreateXmlNodeXmlNodeBoolean">
            <summary>设置 ExcelXfs.CreateXmlNode(XmlNode topNode, Boolean isCellStyleXsf) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.FillGet">
            <summary>设置 ExcelXfs.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.FillIdGet">
            <summary>设置 ExcelXfs.get_FillId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.FillIdSetInt32">
            <summary>设置 ExcelXfs.set_FillId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.FontGet">
            <summary>设置 ExcelXfs.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.FontIdGet">
            <summary>设置 ExcelXfs.get_FontId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.FontIdSetInt32">
            <summary>设置 ExcelXfs.set_FontId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.GetHorizontalAlignString">
            <summary>设置 ExcelXfs.GetHorizontalAlign(String align) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.GetReadingOrderString">
            <summary>设置 ExcelXfs.GetReadingOrder(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.GetVerticalAlignString">
            <summary>设置 ExcelXfs.GetVerticalAlign(String align) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.HiddenGet">
            <summary>设置 ExcelXfs.get_Hidden() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.HiddenSetBoolean">
            <summary>设置 ExcelXfs.set_Hidden(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.HorizontalAlignmentGet">
            <summary>设置 ExcelXfs.get_HorizontalAlignment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.HorizontalAlignmentSetExcelHorizontalAlignment">
            <summary>设置 ExcelXfs.set_HorizontalAlignment(ExcelHorizontalAlignment value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.IdGet">
            <summary>设置 ExcelXfs.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.IndentGet">
            <summary>设置 ExcelXfs.get_Indent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.IndentSetInt32">
            <summary>设置 ExcelXfs.set_Indent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.LockedGet">
            <summary>设置 ExcelXfs.get_Locked() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.LockedSetBoolean">
            <summary>设置 ExcelXfs.set_Locked(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.NumberFormatIdGet">
            <summary>设置 ExcelXfs.get_NumberFormatId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.NumberFormatIdSetInt32">
            <summary>设置 ExcelXfs.set_NumberFormatId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.NumberformatGet">
            <summary>设置 ExcelXfs.get_Numberformat() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.ReadingOrderGet">
            <summary>设置 ExcelXfs.get_ReadingOrder() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.ReadingOrderSetExcelReadingOrder">
            <summary>设置 ExcelXfs.set_ReadingOrder(ExcelReadingOrder value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.RegisterEventExcelXfs">
            <summary>设置 ExcelXfs.RegisterEvent(ExcelXfs xf) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.SetAlignStringEnum">
            <summary>设置 ExcelXfs.SetAlignString(Enum align) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.ShrinkToFitGet">
            <summary>设置 ExcelXfs.get_ShrinkToFit() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.ShrinkToFitSetBoolean">
            <summary>设置 ExcelXfs.set_ShrinkToFit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.StylesGet">
            <summary>设置 ExcelXfs.get_Styles() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.StylesSetExcelStyles">
            <summary>设置 ExcelXfs.set_Styles(ExcelStyles value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.TextRotationGet">
            <summary>设置 ExcelXfs.get_TextRotation() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.TextRotationSetInt32">
            <summary>设置 ExcelXfs.set_TextRotation(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.VerticalAlignmentGet">
            <summary>设置 ExcelXfs.get_VerticalAlignment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.VerticalAlignmentSetExcelVerticalAlignment">
            <summary>设置 ExcelXfs.set_VerticalAlignment(ExcelVerticalAlignment value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.WrapTextGet">
            <summary>设置 ExcelXfs.get_WrapText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.WrapTextSetBoolean">
            <summary>设置 ExcelXfs.set_WrapText(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.XfIdGet">
            <summary>设置 ExcelXfs.get_XfId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.XfIdSetInt32">
            <summary>设置 ExcelXfs.set_XfId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.Xf_ChangedEventObjectEventArgs">
            <summary>设置 ExcelXfs.Xf_ChangedEvent(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.isBuildInGet">
            <summary>设置 ExcelXfs.get_isBuildIn() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.isBuildInSetBoolean">
            <summary>设置 ExcelXfs.set_isBuildIn(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.BorderGet">
            <summary>设置 ExcelXfs.get_Border() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.BorderIdGet">
            <summary>设置 ExcelXfs.get_BorderId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.BorderIdSetInt32">
            <summary>设置 ExcelXfs.set_BorderId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.Copy">
            <summary>设置 ExcelXfs.Copy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.CopyExcelStyles">
            <summary>设置 ExcelXfs.Copy(ExcelStyles styles) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.CreateXmlNodeXmlNode">
            <summary>设置 ExcelXfs.CreateXmlNode(XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.CreateXmlNodeXmlNodeBoolean">
            <summary>设置 ExcelXfs.CreateXmlNode(XmlNode topNode, Boolean isCellStyleXsf) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.FillGet">
            <summary>设置 ExcelXfs.get_Fill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.FillIdGet">
            <summary>设置 ExcelXfs.get_FillId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.FillIdSetInt32">
            <summary>设置 ExcelXfs.set_FillId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.FontGet">
            <summary>设置 ExcelXfs.get_Font() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.FontIdGet">
            <summary>设置 ExcelXfs.get_FontId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.FontIdSetInt32">
            <summary>设置 ExcelXfs.set_FontId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.GetHorizontalAlignString">
            <summary>设置 ExcelXfs.GetHorizontalAlign(String align) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.GetReadingOrderString">
            <summary>设置 ExcelXfs.GetReadingOrder(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.GetVerticalAlignString">
            <summary>设置 ExcelXfs.GetVerticalAlign(String align) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.HiddenGet">
            <summary>设置 ExcelXfs.get_Hidden() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.HiddenSetBoolean">
            <summary>设置 ExcelXfs.set_Hidden(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.HorizontalAlignmentGet">
            <summary>设置 ExcelXfs.get_HorizontalAlignment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.HorizontalAlignmentSetExcelHorizontalAlignment">
            <summary>设置 ExcelXfs.set_HorizontalAlignment(ExcelHorizontalAlignment value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.IdGet">
            <summary>设置 ExcelXfs.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.IndentGet">
            <summary>设置 ExcelXfs.get_Indent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.IndentSetInt32">
            <summary>设置 ExcelXfs.set_Indent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.LockedGet">
            <summary>设置 ExcelXfs.get_Locked() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.LockedSetBoolean">
            <summary>设置 ExcelXfs.set_Locked(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.NumberFormatIdGet">
            <summary>设置 ExcelXfs.get_NumberFormatId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.NumberFormatIdSetInt32">
            <summary>设置 ExcelXfs.set_NumberFormatId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.NumberformatGet">
            <summary>设置 ExcelXfs.get_Numberformat() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.ReadingOrderGet">
            <summary>设置 ExcelXfs.get_ReadingOrder() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.ReadingOrderSetExcelReadingOrder">
            <summary>设置 ExcelXfs.set_ReadingOrder(ExcelReadingOrder value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.RegisterEventExcelXfs">
            <summary>设置 ExcelXfs.RegisterEvent(ExcelXfs xf) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.SetAlignStringEnum">
            <summary>设置 ExcelXfs.SetAlignString(Enum align) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.ShrinkToFitGet">
            <summary>设置 ExcelXfs.get_ShrinkToFit() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.ShrinkToFitSetBoolean">
            <summary>设置 ExcelXfs.set_ShrinkToFit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.StylesGet">
            <summary>设置 ExcelXfs.get_Styles() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.StylesSetExcelStyles">
            <summary>设置 ExcelXfs.set_Styles(ExcelStyles value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.TextRotationGet">
            <summary>设置 ExcelXfs.get_TextRotation() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.TextRotationSetInt32">
            <summary>设置 ExcelXfs.set_TextRotation(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.VerticalAlignmentGet">
            <summary>设置 ExcelXfs.get_VerticalAlignment() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.VerticalAlignmentSetExcelVerticalAlignment">
            <summary>设置 ExcelXfs.set_VerticalAlignment(ExcelVerticalAlignment value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.WrapTextGet">
            <summary>设置 ExcelXfs.get_WrapText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.WrapTextSetBoolean">
            <summary>设置 ExcelXfs.set_WrapText(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.XfIdGet">
            <summary>设置 ExcelXfs.get_XfId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.XfIdSetInt32">
            <summary>设置 ExcelXfs.set_XfId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.Xf_ChangedEventObjectEventArgs">
            <summary>设置 ExcelXfs.Xf_ChangedEvent(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.isBuildInGet">
            <summary>设置 ExcelXfs.get_isBuildIn() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimExcelXfs.AllInstances.isBuildInSetBoolean">
            <summary>设置 ExcelXfs.set_isBuildIn(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimStyleXmlHelper">
            <summary>OfficeOpenXml.Style.XmlAccess.StyleXmlHelper 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimStyleXmlHelper.#ctor(OfficeOpenXml.Style.XmlAccess.StyleXmlHelper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimStyleXmlHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Style.XmlAccess.Fakes.ShimStyleXmlHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimStyleXmlHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimStyleXmlHelper.ConstructorXmlNamespaceManager">
            <summary>设置 StyleXmlHelper.StyleXmlHelper(XmlNamespaceManager nameSpaceManager) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Style.XmlAccess.Fakes.ShimStyleXmlHelper.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 StyleXmlHelper.StyleXmlHelper(XmlNamespaceManager nameSpaceManager, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Style.XmlAccess.Fakes.ShimStyleXmlHelper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.Fakes.ShimExcelTable">
            <summary>OfficeOpenXml.Table.ExcelTable 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTable.#ctor(OfficeOpenXml.Table.ExcelTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AddressGet">
            <summary>设置 ExcelTable.get_Address() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AddressSetExcelAddressBase">
            <summary>设置 ExcelTable.set_Address(ExcelAddressBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AutoFilterAddressGet">
            <summary>设置 ExcelTable.get_AutoFilterAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ColumnsGet">
            <summary>设置 ExcelTable.get_Columns() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ConstructorExcelWorksheetExcelAddressBaseStringInt32">
            <summary>设置 ExcelTable.ExcelTable(ExcelWorksheet sheet, ExcelAddressBase address, String name, Int32 tblId) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ConstructorPackageRelationshipExcelWorksheet">
            <summary>设置 ExcelTable.ExcelTable(PackageRelationship rel, ExcelWorksheet sheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.DataCellStyleNameGet">
            <summary>设置 ExcelTable.get_DataCellStyleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.DataCellStyleNameSetString">
            <summary>设置 ExcelTable.set_DataCellStyleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.GetStartXmlStringInt32">
            <summary>设置 ExcelTable.GetStartXml(String name, Int32 tblId) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.HeaderRowCellStyleGet">
            <summary>设置 ExcelTable.get_HeaderRowCellStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.HeaderRowCellStyleSetString">
            <summary>设置 ExcelTable.set_HeaderRowCellStyle(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.IdGet">
            <summary>设置 ExcelTable.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.IdSetInt32">
            <summary>设置 ExcelTable.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.NameGet">
            <summary>设置 ExcelTable.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.NameSetString">
            <summary>设置 ExcelTable.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.PartGet">
            <summary>设置 ExcelTable.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.PartSetPackagePart">
            <summary>设置 ExcelTable.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.RelationshipIDGet">
            <summary>设置 ExcelTable.get_RelationshipID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.RelationshipIDSetString">
            <summary>设置 ExcelTable.set_RelationshipID(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ShowColumnStripesGet">
            <summary>设置 ExcelTable.get_ShowColumnStripes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ShowColumnStripesSetBoolean">
            <summary>设置 ExcelTable.set_ShowColumnStripes(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ShowFilterGet">
            <summary>设置 ExcelTable.get_ShowFilter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ShowFilterSetBoolean">
            <summary>设置 ExcelTable.set_ShowFilter(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ShowFirstColumnGet">
            <summary>设置 ExcelTable.get_ShowFirstColumn() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ShowFirstColumnSetBoolean">
            <summary>设置 ExcelTable.set_ShowFirstColumn(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ShowHeaderGet">
            <summary>设置 ExcelTable.get_ShowHeader() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ShowHeaderSetBoolean">
            <summary>设置 ExcelTable.set_ShowHeader(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ShowLastColumnGet">
            <summary>设置 ExcelTable.get_ShowLastColumn() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ShowLastColumnSetBoolean">
            <summary>设置 ExcelTable.set_ShowLastColumn(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ShowRowStripesGet">
            <summary>设置 ExcelTable.get_ShowRowStripes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ShowRowStripesSetBoolean">
            <summary>设置 ExcelTable.set_ShowRowStripes(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ShowTotalGet">
            <summary>设置 ExcelTable.get_ShowTotal() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.ShowTotalSetBoolean">
            <summary>设置 ExcelTable.set_ShowTotal(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.StyleNameGet">
            <summary>设置 ExcelTable.get_StyleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.StyleNameSetString">
            <summary>设置 ExcelTable.set_StyleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.TableStyleGet">
            <summary>设置 ExcelTable.get_TableStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.TableStyleSetTableStyles">
            <summary>设置 ExcelTable.set_TableStyle(TableStyles value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.TableUriGet">
            <summary>设置 ExcelTable.get_TableUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.TableUriSetUri">
            <summary>设置 ExcelTable.set_TableUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.TableXmlGet">
            <summary>设置 ExcelTable.get_TableXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.TableXmlSetXmlDocument">
            <summary>设置 ExcelTable.set_TableXml(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.TotalsRowCellStyleGet">
            <summary>设置 ExcelTable.get_TotalsRowCellStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.TotalsRowCellStyleSetString">
            <summary>设置 ExcelTable.set_TotalsRowCellStyle(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.WorkSheetGet">
            <summary>设置 ExcelTable.get_WorkSheet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.WorkSheetSetExcelWorksheet">
            <summary>设置 ExcelTable.set_WorkSheet(ExcelWorksheet value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.WriteAutoFilterBoolean">
            <summary>设置 ExcelTable.WriteAutoFilter(Boolean showTotal) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.cleanDisplayNameString">
            <summary>设置 ExcelTable.cleanDisplayName(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.init">
            <summary>设置 ExcelTable.init() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.AddressGet">
            <summary>设置 ExcelTable.get_Address() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.AddressSetExcelAddressBase">
            <summary>设置 ExcelTable.set_Address(ExcelAddressBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.AutoFilterAddressGet">
            <summary>设置 ExcelTable.get_AutoFilterAddress() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ColumnsGet">
            <summary>设置 ExcelTable.get_Columns() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.DataCellStyleNameGet">
            <summary>设置 ExcelTable.get_DataCellStyleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.DataCellStyleNameSetString">
            <summary>设置 ExcelTable.set_DataCellStyleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.GetStartXmlStringInt32">
            <summary>设置 ExcelTable.GetStartXml(String name, Int32 tblId) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.HeaderRowCellStyleGet">
            <summary>设置 ExcelTable.get_HeaderRowCellStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.HeaderRowCellStyleSetString">
            <summary>设置 ExcelTable.set_HeaderRowCellStyle(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.IdGet">
            <summary>设置 ExcelTable.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.IdSetInt32">
            <summary>设置 ExcelTable.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.NameGet">
            <summary>设置 ExcelTable.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.NameSetString">
            <summary>设置 ExcelTable.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.PartGet">
            <summary>设置 ExcelTable.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.PartSetPackagePart">
            <summary>设置 ExcelTable.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.RelationshipIDGet">
            <summary>设置 ExcelTable.get_RelationshipID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.RelationshipIDSetString">
            <summary>设置 ExcelTable.set_RelationshipID(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ShowColumnStripesGet">
            <summary>设置 ExcelTable.get_ShowColumnStripes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ShowColumnStripesSetBoolean">
            <summary>设置 ExcelTable.set_ShowColumnStripes(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ShowFilterGet">
            <summary>设置 ExcelTable.get_ShowFilter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ShowFilterSetBoolean">
            <summary>设置 ExcelTable.set_ShowFilter(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ShowFirstColumnGet">
            <summary>设置 ExcelTable.get_ShowFirstColumn() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ShowFirstColumnSetBoolean">
            <summary>设置 ExcelTable.set_ShowFirstColumn(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ShowHeaderGet">
            <summary>设置 ExcelTable.get_ShowHeader() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ShowHeaderSetBoolean">
            <summary>设置 ExcelTable.set_ShowHeader(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ShowLastColumnGet">
            <summary>设置 ExcelTable.get_ShowLastColumn() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ShowLastColumnSetBoolean">
            <summary>设置 ExcelTable.set_ShowLastColumn(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ShowRowStripesGet">
            <summary>设置 ExcelTable.get_ShowRowStripes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ShowRowStripesSetBoolean">
            <summary>设置 ExcelTable.set_ShowRowStripes(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ShowTotalGet">
            <summary>设置 ExcelTable.get_ShowTotal() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.ShowTotalSetBoolean">
            <summary>设置 ExcelTable.set_ShowTotal(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.StyleNameGet">
            <summary>设置 ExcelTable.get_StyleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.StyleNameSetString">
            <summary>设置 ExcelTable.set_StyleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.TableStyleGet">
            <summary>设置 ExcelTable.get_TableStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.TableStyleSetTableStyles">
            <summary>设置 ExcelTable.set_TableStyle(TableStyles value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.TableUriGet">
            <summary>设置 ExcelTable.get_TableUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.TableUriSetUri">
            <summary>设置 ExcelTable.set_TableUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.TableXmlGet">
            <summary>设置 ExcelTable.get_TableXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.TableXmlSetXmlDocument">
            <summary>设置 ExcelTable.set_TableXml(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.TotalsRowCellStyleGet">
            <summary>设置 ExcelTable.get_TotalsRowCellStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.TotalsRowCellStyleSetString">
            <summary>设置 ExcelTable.set_TotalsRowCellStyle(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.WorkSheetGet">
            <summary>设置 ExcelTable.get_WorkSheet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.WorkSheetSetExcelWorksheet">
            <summary>设置 ExcelTable.set_WorkSheet(ExcelWorksheet value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.WriteAutoFilterBoolean">
            <summary>设置 ExcelTable.WriteAutoFilter(Boolean showTotal) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.cleanDisplayNameString">
            <summary>设置 ExcelTable.cleanDisplayName(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTable.AllInstances.init">
            <summary>设置 ExcelTable.init() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection">
            <summary>OfficeOpenXml.Table.ExcelTableCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.#ctor(OfficeOpenXml.Table.ExcelTableCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.Table.ExcelTable})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.AddExcelAddressBaseString">
            <summary>设置 ExcelTableCollection.Add(ExcelAddressBase Range, String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.AddExcelTable">
            <summary>设置 ExcelTableCollection.Add(ExcelTable tbl) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.ConstructorExcelWorksheet">
            <summary>设置 ExcelTableCollection.ExcelTableCollection(ExcelWorksheet ws) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.CountGet">
            <summary>设置 ExcelTableCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.GetEnumerator">
            <summary>设置 ExcelTableCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.GetFromRangeExcelRangeBase">
            <summary>设置 ExcelTableCollection.GetFromRange(ExcelRangeBase Range) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.GetNewTableName">
            <summary>设置 ExcelTableCollection.GetNewTableName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.ItemGetInt32">
            <summary>设置 ExcelTableCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.ItemGetString">
            <summary>设置 ExcelTableCollection.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelTableCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.AllInstances.AddExcelAddressBaseString">
            <summary>设置 ExcelTableCollection.Add(ExcelAddressBase Range, String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.AllInstances.AddExcelTable">
            <summary>设置 ExcelTableCollection.Add(ExcelTable tbl) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.AllInstances.CountGet">
            <summary>设置 ExcelTableCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.AllInstances.GetEnumerator">
            <summary>设置 ExcelTableCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.AllInstances.GetFromRangeExcelRangeBase">
            <summary>设置 ExcelTableCollection.GetFromRange(ExcelRangeBase Range) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.AllInstances.GetNewTableName">
            <summary>设置 ExcelTableCollection.GetNewTableName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.AllInstances.ItemGetInt32">
            <summary>设置 ExcelTableCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.AllInstances.ItemGetString">
            <summary>设置 ExcelTableCollection.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelTableCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn">
            <summary>OfficeOpenXml.Table.ExcelTableColumn 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.#ctor(OfficeOpenXml.Table.ExcelTableColumn)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.CalculatedColumnFormulaGet">
            <summary>设置 ExcelTableColumn.get_CalculatedColumnFormula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.CalculatedColumnFormulaSetString">
            <summary>设置 ExcelTableColumn.set_CalculatedColumnFormula(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.ConstructorXmlNamespaceManagerXmlNodeExcelTableInt32">
            <summary>设置 ExcelTableColumn.ExcelTableColumn(XmlNamespaceManager ns, XmlNode topNode, ExcelTable tbl, Int32 pos) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.DataCellStyleNameGet">
            <summary>设置 ExcelTableColumn.get_DataCellStyleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.DataCellStyleNameSetString">
            <summary>设置 ExcelTableColumn.set_DataCellStyleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.IdGet">
            <summary>设置 ExcelTableColumn.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.IdSetInt32">
            <summary>设置 ExcelTableColumn.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.NameGet">
            <summary>设置 ExcelTableColumn.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.NameSetString">
            <summary>设置 ExcelTableColumn.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.PositionGet">
            <summary>设置 ExcelTableColumn.get_Position() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.PositionSetInt32">
            <summary>设置 ExcelTableColumn.set_Position(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.TotalsRowFormulaGet">
            <summary>设置 ExcelTableColumn.get_TotalsRowFormula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.TotalsRowFormulaSetString">
            <summary>设置 ExcelTableColumn.set_TotalsRowFormula(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.TotalsRowFunctionGet">
            <summary>设置 ExcelTableColumn.get_TotalsRowFunction() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.TotalsRowFunctionSetRowFunctions">
            <summary>设置 ExcelTableColumn.set_TotalsRowFunction(RowFunctions value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.TotalsRowLabelGet">
            <summary>设置 ExcelTableColumn.get_TotalsRowLabel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.TotalsRowLabelSetString">
            <summary>设置 ExcelTableColumn.set_TotalsRowLabel(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.CalculatedColumnFormulaGet">
            <summary>设置 ExcelTableColumn.get_CalculatedColumnFormula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.CalculatedColumnFormulaSetString">
            <summary>设置 ExcelTableColumn.set_CalculatedColumnFormula(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.DataCellStyleNameGet">
            <summary>设置 ExcelTableColumn.get_DataCellStyleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.DataCellStyleNameSetString">
            <summary>设置 ExcelTableColumn.set_DataCellStyleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.IdGet">
            <summary>设置 ExcelTableColumn.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.IdSetInt32">
            <summary>设置 ExcelTableColumn.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.NameGet">
            <summary>设置 ExcelTableColumn.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.NameSetString">
            <summary>设置 ExcelTableColumn.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.PositionGet">
            <summary>设置 ExcelTableColumn.get_Position() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.PositionSetInt32">
            <summary>设置 ExcelTableColumn.set_Position(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.TotalsRowFormulaGet">
            <summary>设置 ExcelTableColumn.get_TotalsRowFormula() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.TotalsRowFormulaSetString">
            <summary>设置 ExcelTableColumn.set_TotalsRowFormula(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.TotalsRowFunctionGet">
            <summary>设置 ExcelTableColumn.get_TotalsRowFunction() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.TotalsRowFunctionSetRowFunctions">
            <summary>设置 ExcelTableColumn.set_TotalsRowFunction(RowFunctions value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.TotalsRowLabelGet">
            <summary>设置 ExcelTableColumn.get_TotalsRowLabel() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumn.AllInstances.TotalsRowLabelSetString">
            <summary>设置 ExcelTableColumn.set_TotalsRowLabel(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection">
            <summary>OfficeOpenXml.Table.ExcelTableColumnCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.#ctor(OfficeOpenXml.Table.ExcelTableColumnCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.Table.ExcelTableColumn})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.ConstructorExcelTable">
            <summary>设置 ExcelTableColumnCollection.ExcelTableColumnCollection(ExcelTable table) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.CountGet">
            <summary>设置 ExcelTableColumnCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.ItemGetInt32">
            <summary>设置 ExcelTableColumnCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.ItemGetString">
            <summary>设置 ExcelTableColumnCollection.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.SystemCollectionsGenericIEnumerableOfficeOpenXmlTableExcelTableColumnGetEnumerator">
            <summary>设置 ExcelTableColumnCollection.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.Table.ExcelTableColumn&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelTableColumnCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.TableGet">
            <summary>设置 ExcelTableColumnCollection.get_Table() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.TableSetExcelTable">
            <summary>设置 ExcelTableColumnCollection.set_Table(ExcelTable value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.AllInstances.CountGet">
            <summary>设置 ExcelTableColumnCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.AllInstances.ItemGetInt32">
            <summary>设置 ExcelTableColumnCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.AllInstances.ItemGetString">
            <summary>设置 ExcelTableColumnCollection.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.AllInstances.SystemCollectionsGenericIEnumerableOfficeOpenXmlTableExcelTableColumnGetEnumerator">
            <summary>设置 ExcelTableColumnCollection.System.Collections.Generic.IEnumerable&lt;OfficeOpenXml.Table.ExcelTableColumn&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelTableColumnCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.AllInstances.TableGet">
            <summary>设置 ExcelTableColumnCollection.get_Table() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.ShimExcelTableColumnCollection.AllInstances.TableSetExcelTable">
            <summary>设置 ExcelTableColumnCollection.set_Table(ExcelTable value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.Fakes.StubExcelTableColumnCollection">
            <summary>OfficeOpenXml.Table.ExcelTableColumnCollection 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.StubExcelTableColumnCollection.#ctor(OfficeOpenXml.Table.ExcelTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.Fakes.StubExcelTableColumnCollection.InitializeStub">
            <summary>初始化 type StubExcelTableColumnCollection 的新实例</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.StubExcelTableColumnCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.StubExcelTableColumnCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.Fakes.StubExcelTableColumnCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition">
            <summary>OfficeOpenXml.Table.PivotTable.ExcelPivotCacheDefinition 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.#ctor(OfficeOpenXml.Table.PivotTable.ExcelPivotCacheDefinition)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.CacheDefinitionUriGet">
            <summary>设置 ExcelPivotCacheDefinition.get_CacheDefinitionUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.CacheDefinitionUriSetUri">
            <summary>设置 ExcelPivotCacheDefinition.set_CacheDefinitionUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.CacheDefinitionXmlGet">
            <summary>设置 ExcelPivotCacheDefinition.get_CacheDefinitionXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.CacheDefinitionXmlSetXmlDocument">
            <summary>设置 ExcelPivotCacheDefinition.set_CacheDefinitionXml(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.CacheRecordUriGet">
            <summary>设置 ExcelPivotCacheDefinition.get_CacheRecordUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.CacheRecordUriSetUri">
            <summary>设置 ExcelPivotCacheDefinition.set_CacheRecordUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.CacheSourceGet">
            <summary>设置 ExcelPivotCacheDefinition.get_CacheSource() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.ConstructorXmlNamespaceManagerExcelPivotTable">
            <summary>设置 ExcelPivotCacheDefinition.ExcelPivotCacheDefinition(XmlNamespaceManager ns, ExcelPivotTable pivotTable) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.ConstructorXmlNamespaceManagerExcelPivotTableExcelRangeBaseInt32">
            <summary>设置 ExcelPivotCacheDefinition.ExcelPivotCacheDefinition(XmlNamespaceManager ns, ExcelPivotTable pivotTable, ExcelRangeBase sourceAddress, Int32 tblId) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.GetStartXmlExcelRangeBase">
            <summary>设置 ExcelPivotCacheDefinition.GetStartXml(ExcelRangeBase sourceAddress) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.PartGet">
            <summary>设置 ExcelPivotCacheDefinition.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.PartSetPackagePart">
            <summary>设置 ExcelPivotCacheDefinition.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.PivotTableGet">
            <summary>设置 ExcelPivotCacheDefinition.get_PivotTable() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.PivotTableSetExcelPivotTable">
            <summary>设置 ExcelPivotCacheDefinition.set_PivotTable(ExcelPivotTable value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.RecordRelationshipGet">
            <summary>设置 ExcelPivotCacheDefinition.get_RecordRelationship() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.RecordRelationshipIDGet">
            <summary>设置 ExcelPivotCacheDefinition.get_RecordRelationshipID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.RecordRelationshipIDSetString">
            <summary>设置 ExcelPivotCacheDefinition.set_RecordRelationshipID(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.RecordRelationshipSetPackageRelationship">
            <summary>设置 ExcelPivotCacheDefinition.set_RecordRelationship(PackageRelationship value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.RelationshipGet">
            <summary>设置 ExcelPivotCacheDefinition.get_Relationship() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.RelationshipSetPackageRelationship">
            <summary>设置 ExcelPivotCacheDefinition.set_Relationship(PackageRelationship value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.SourceRangeGet">
            <summary>设置 ExcelPivotCacheDefinition.get_SourceRange() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.SourceRangeSetExcelRangeBase">
            <summary>设置 ExcelPivotCacheDefinition.set_SourceRange(ExcelRangeBase value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.CacheDefinitionUriGet">
            <summary>设置 ExcelPivotCacheDefinition.get_CacheDefinitionUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.CacheDefinitionUriSetUri">
            <summary>设置 ExcelPivotCacheDefinition.set_CacheDefinitionUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.CacheDefinitionXmlGet">
            <summary>设置 ExcelPivotCacheDefinition.get_CacheDefinitionXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.CacheDefinitionXmlSetXmlDocument">
            <summary>设置 ExcelPivotCacheDefinition.set_CacheDefinitionXml(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.CacheRecordUriGet">
            <summary>设置 ExcelPivotCacheDefinition.get_CacheRecordUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.CacheRecordUriSetUri">
            <summary>设置 ExcelPivotCacheDefinition.set_CacheRecordUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.CacheSourceGet">
            <summary>设置 ExcelPivotCacheDefinition.get_CacheSource() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.GetStartXmlExcelRangeBase">
            <summary>设置 ExcelPivotCacheDefinition.GetStartXml(ExcelRangeBase sourceAddress) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.PartGet">
            <summary>设置 ExcelPivotCacheDefinition.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.PartSetPackagePart">
            <summary>设置 ExcelPivotCacheDefinition.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.PivotTableGet">
            <summary>设置 ExcelPivotCacheDefinition.get_PivotTable() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.PivotTableSetExcelPivotTable">
            <summary>设置 ExcelPivotCacheDefinition.set_PivotTable(ExcelPivotTable value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.RecordRelationshipGet">
            <summary>设置 ExcelPivotCacheDefinition.get_RecordRelationship() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.RecordRelationshipIDGet">
            <summary>设置 ExcelPivotCacheDefinition.get_RecordRelationshipID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.RecordRelationshipIDSetString">
            <summary>设置 ExcelPivotCacheDefinition.set_RecordRelationshipID(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.RecordRelationshipSetPackageRelationship">
            <summary>设置 ExcelPivotCacheDefinition.set_RecordRelationship(PackageRelationship value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.RelationshipGet">
            <summary>设置 ExcelPivotCacheDefinition.get_Relationship() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.RelationshipSetPackageRelationship">
            <summary>设置 ExcelPivotCacheDefinition.set_Relationship(PackageRelationship value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.SourceRangeGet">
            <summary>设置 ExcelPivotCacheDefinition.get_SourceRange() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotCacheDefinition.AllInstances.SourceRangeSetExcelRangeBase">
            <summary>设置 ExcelPivotCacheDefinition.set_SourceRange(ExcelRangeBase value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable">
            <summary>OfficeOpenXml.Table.PivotTable.ExcelPivotTable 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.#ctor(OfficeOpenXml.Table.PivotTable.ExcelPivotTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AddressGet">
            <summary>设置 ExcelPivotTable.get_Address() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AddressSetExcelAddressBase">
            <summary>设置 ExcelPivotTable.set_Address(ExcelAddressBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ApplyBorderFormatsGet">
            <summary>设置 ExcelPivotTable.get_ApplyBorderFormats() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ApplyBorderFormatsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ApplyBorderFormats(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ApplyFontFormatsGet">
            <summary>设置 ExcelPivotTable.get_ApplyFontFormats() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ApplyFontFormatsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ApplyFontFormats(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ApplyNumberFormatsGet">
            <summary>设置 ExcelPivotTable.get_ApplyNumberFormats() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ApplyNumberFormatsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ApplyNumberFormats(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ApplyPatternFormatsGet">
            <summary>设置 ExcelPivotTable.get_ApplyPatternFormats() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ApplyPatternFormatsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ApplyPatternFormats(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ApplyWidthHeightFormatsGet">
            <summary>设置 ExcelPivotTable.get_ApplyWidthHeightFormats() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ApplyWidthHeightFormatsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ApplyWidthHeightFormats(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.CacheDefinitionGet">
            <summary>设置 ExcelPivotTable.get_CacheDefinition() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.CacheIDGet">
            <summary>设置 ExcelPivotTable.get_CacheID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.CacheIDSetInt32">
            <summary>设置 ExcelPivotTable.set_CacheID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ColumGrandTotalsGet">
            <summary>设置 ExcelPivotTable.get_ColumGrandTotals() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ColumGrandTotalsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ColumGrandTotals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ColumnFieldsGet">
            <summary>设置 ExcelPivotTable.get_ColumnFields() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.CompactDataGet">
            <summary>设置 ExcelPivotTable.get_CompactData() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.CompactDataSetBoolean">
            <summary>设置 ExcelPivotTable.set_CompactData(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.CompactGet">
            <summary>设置 ExcelPivotTable.get_Compact() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.CompactSetBoolean">
            <summary>设置 ExcelPivotTable.set_Compact(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ConstructorExcelWorksheetExcelAddressBaseExcelRangeBaseStringInt32">
            <summary>设置 ExcelPivotTable.ExcelPivotTable(ExcelWorksheet sheet, ExcelAddressBase address, ExcelRangeBase sourceAddress, String name, Int32 tblId) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ConstructorPackageRelationshipExcelWorksheet">
            <summary>设置 ExcelPivotTable.ExcelPivotTable(PackageRelationship rel, ExcelWorksheet sheet) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.DataCaptionGet">
            <summary>设置 ExcelPivotTable.get_DataCaption() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.DataCaptionSetString">
            <summary>设置 ExcelPivotTable.set_DataCaption(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.DataFieldsGet">
            <summary>设置 ExcelPivotTable.get_DataFields() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.DataOnRowsGet">
            <summary>设置 ExcelPivotTable.get_DataOnRows() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.DataOnRowsSetBoolean">
            <summary>设置 ExcelPivotTable.set_DataOnRows(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.EnableDrillGet">
            <summary>设置 ExcelPivotTable.get_EnableDrill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.EnableDrillSetBoolean">
            <summary>设置 ExcelPivotTable.set_EnableDrill(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ErrorCaptionGet">
            <summary>设置 ExcelPivotTable.get_ErrorCaption() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ErrorCaptionSetString">
            <summary>设置 ExcelPivotTable.set_ErrorCaption(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.FieldPrintTitlesGet">
            <summary>设置 ExcelPivotTable.get_FieldPrintTitles() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.FieldPrintTitlesSetBoolean">
            <summary>设置 ExcelPivotTable.set_FieldPrintTitles(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.FieldsGet">
            <summary>设置 ExcelPivotTable.get_Fields() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.FirstDataColGet">
            <summary>设置 ExcelPivotTable.get_FirstDataCol() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.FirstDataColSetInt32">
            <summary>设置 ExcelPivotTable.set_FirstDataCol(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.FirstDataRowGet">
            <summary>设置 ExcelPivotTable.get_FirstDataRow() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.FirstDataRowSetInt32">
            <summary>设置 ExcelPivotTable.set_FirstDataRow(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.FirstHeaderRowGet">
            <summary>设置 ExcelPivotTable.get_FirstHeaderRow() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.FirstHeaderRowSetInt32">
            <summary>设置 ExcelPivotTable.set_FirstHeaderRow(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.GetStartXmlStringInt32ExcelAddressBaseExcelAddressBase">
            <summary>设置 ExcelPivotTable.GetStartXml(String name, Int32 id, ExcelAddressBase address, ExcelAddressBase sourceAddress) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.GrandTotalCaptionGet">
            <summary>设置 ExcelPivotTable.get_GrandTotalCaption() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.GrandTotalCaptionSetString">
            <summary>设置 ExcelPivotTable.set_GrandTotalCaption(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.GridDropZonesGet">
            <summary>设置 ExcelPivotTable.get_GridDropZones() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.GridDropZonesSetBoolean">
            <summary>设置 ExcelPivotTable.set_GridDropZones(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.IdGet">
            <summary>设置 ExcelPivotTable.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.IdSetInt32">
            <summary>设置 ExcelPivotTable.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.IndentGet">
            <summary>设置 ExcelPivotTable.get_Indent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.IndentSetInt32">
            <summary>设置 ExcelPivotTable.set_Indent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ItemPrintTitlesGet">
            <summary>设置 ExcelPivotTable.get_ItemPrintTitles() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ItemPrintTitlesSetBoolean">
            <summary>设置 ExcelPivotTable.set_ItemPrintTitles(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.LoadFields">
            <summary>设置 ExcelPivotTable.LoadFields() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.MissingCaptionGet">
            <summary>设置 ExcelPivotTable.get_MissingCaption() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.MissingCaptionSetString">
            <summary>设置 ExcelPivotTable.set_MissingCaption(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.MultipleFieldFiltersGet">
            <summary>设置 ExcelPivotTable.get_MultipleFieldFilters() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.MultipleFieldFiltersSetBoolean">
            <summary>设置 ExcelPivotTable.set_MultipleFieldFilters(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.NameGet">
            <summary>设置 ExcelPivotTable.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.NameSetString">
            <summary>设置 ExcelPivotTable.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.OutlineDataGet">
            <summary>设置 ExcelPivotTable.get_OutlineData() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.OutlineDataSetBoolean">
            <summary>设置 ExcelPivotTable.set_OutlineData(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.OutlineGet">
            <summary>设置 ExcelPivotTable.get_Outline() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.OutlineSetBoolean">
            <summary>设置 ExcelPivotTable.set_Outline(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.PageFieldsGet">
            <summary>设置 ExcelPivotTable.get_PageFields() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.PageWrapGet">
            <summary>设置 ExcelPivotTable.get_PageWrap() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.PageWrapSetInt32">
            <summary>设置 ExcelPivotTable.set_PageWrap(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.PartGet">
            <summary>设置 ExcelPivotTable.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.PartSetPackagePart">
            <summary>设置 ExcelPivotTable.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.PivotTableUriGet">
            <summary>设置 ExcelPivotTable.get_PivotTableUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.PivotTableUriSetUri">
            <summary>设置 ExcelPivotTable.set_PivotTableUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.PivotTableXmlGet">
            <summary>设置 ExcelPivotTable.get_PivotTableXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.PivotTableXmlSetXmlDocument">
            <summary>设置 ExcelPivotTable.set_PivotTableXml(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.PrintDrillGet">
            <summary>设置 ExcelPivotTable.get_PrintDrill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.PrintDrillSetBoolean">
            <summary>设置 ExcelPivotTable.set_PrintDrill(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.RelationshipGet">
            <summary>设置 ExcelPivotTable.get_Relationship() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.RelationshipSetPackageRelationship">
            <summary>设置 ExcelPivotTable.set_Relationship(PackageRelationship value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.RowFieldsGet">
            <summary>设置 ExcelPivotTable.get_RowFields() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.RowGrandTotalsGet">
            <summary>设置 ExcelPivotTable.get_RowGrandTotals() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.RowGrandTotalsSetBoolean">
            <summary>设置 ExcelPivotTable.set_RowGrandTotals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.RowHeaderCaptionGet">
            <summary>设置 ExcelPivotTable.get_RowHeaderCaption() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.RowHeaderCaptionSetString">
            <summary>设置 ExcelPivotTable.set_RowHeaderCaption(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ShowCalcMemberGet">
            <summary>设置 ExcelPivotTable.get_ShowCalcMember() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ShowCalcMemberSetBoolean">
            <summary>设置 ExcelPivotTable.set_ShowCalcMember(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ShowDataTipsGet">
            <summary>设置 ExcelPivotTable.get_ShowDataTips() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ShowDataTipsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ShowDataTips(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ShowDrillGet">
            <summary>设置 ExcelPivotTable.get_ShowDrill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ShowDrillSetBoolean">
            <summary>设置 ExcelPivotTable.set_ShowDrill(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ShowErrorGet">
            <summary>设置 ExcelPivotTable.get_ShowError() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ShowErrorSetBoolean">
            <summary>设置 ExcelPivotTable.set_ShowError(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ShowHeadersGet">
            <summary>设置 ExcelPivotTable.get_ShowHeaders() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ShowHeadersSetBoolean">
            <summary>设置 ExcelPivotTable.set_ShowHeaders(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ShowMemberPropertyTipsGet">
            <summary>设置 ExcelPivotTable.get_ShowMemberPropertyTips() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.ShowMemberPropertyTipsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ShowMemberPropertyTips(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.StyleNameGet">
            <summary>设置 ExcelPivotTable.get_StyleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.StyleNameSetString">
            <summary>设置 ExcelPivotTable.set_StyleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.TableStyleGet">
            <summary>设置 ExcelPivotTable.get_TableStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.TableStyleSetTableStyles">
            <summary>设置 ExcelPivotTable.set_TableStyle(TableStyles value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.UseAutoFormattingGet">
            <summary>设置 ExcelPivotTable.get_UseAutoFormatting() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.UseAutoFormattingSetBoolean">
            <summary>设置 ExcelPivotTable.set_UseAutoFormatting(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.WorkSheetGet">
            <summary>设置 ExcelPivotTable.get_WorkSheet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.WorkSheetSetExcelWorksheet">
            <summary>设置 ExcelPivotTable.set_WorkSheet(ExcelWorksheet value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.cleanDisplayNameString">
            <summary>设置 ExcelPivotTable.cleanDisplayName(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.init">
            <summary>设置 ExcelPivotTable.init() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.AddressGet">
            <summary>设置 ExcelPivotTable.get_Address() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.AddressSetExcelAddressBase">
            <summary>设置 ExcelPivotTable.set_Address(ExcelAddressBase value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ApplyBorderFormatsGet">
            <summary>设置 ExcelPivotTable.get_ApplyBorderFormats() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ApplyBorderFormatsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ApplyBorderFormats(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ApplyFontFormatsGet">
            <summary>设置 ExcelPivotTable.get_ApplyFontFormats() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ApplyFontFormatsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ApplyFontFormats(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ApplyNumberFormatsGet">
            <summary>设置 ExcelPivotTable.get_ApplyNumberFormats() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ApplyNumberFormatsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ApplyNumberFormats(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ApplyPatternFormatsGet">
            <summary>设置 ExcelPivotTable.get_ApplyPatternFormats() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ApplyPatternFormatsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ApplyPatternFormats(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ApplyWidthHeightFormatsGet">
            <summary>设置 ExcelPivotTable.get_ApplyWidthHeightFormats() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ApplyWidthHeightFormatsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ApplyWidthHeightFormats(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.CacheDefinitionGet">
            <summary>设置 ExcelPivotTable.get_CacheDefinition() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.CacheIDGet">
            <summary>设置 ExcelPivotTable.get_CacheID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.CacheIDSetInt32">
            <summary>设置 ExcelPivotTable.set_CacheID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ColumGrandTotalsGet">
            <summary>设置 ExcelPivotTable.get_ColumGrandTotals() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ColumGrandTotalsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ColumGrandTotals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ColumnFieldsGet">
            <summary>设置 ExcelPivotTable.get_ColumnFields() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.CompactDataGet">
            <summary>设置 ExcelPivotTable.get_CompactData() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.CompactDataSetBoolean">
            <summary>设置 ExcelPivotTable.set_CompactData(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.CompactGet">
            <summary>设置 ExcelPivotTable.get_Compact() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.CompactSetBoolean">
            <summary>设置 ExcelPivotTable.set_Compact(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.DataCaptionGet">
            <summary>设置 ExcelPivotTable.get_DataCaption() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.DataCaptionSetString">
            <summary>设置 ExcelPivotTable.set_DataCaption(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.DataFieldsGet">
            <summary>设置 ExcelPivotTable.get_DataFields() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.DataOnRowsGet">
            <summary>设置 ExcelPivotTable.get_DataOnRows() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.DataOnRowsSetBoolean">
            <summary>设置 ExcelPivotTable.set_DataOnRows(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.EnableDrillGet">
            <summary>设置 ExcelPivotTable.get_EnableDrill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.EnableDrillSetBoolean">
            <summary>设置 ExcelPivotTable.set_EnableDrill(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ErrorCaptionGet">
            <summary>设置 ExcelPivotTable.get_ErrorCaption() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ErrorCaptionSetString">
            <summary>设置 ExcelPivotTable.set_ErrorCaption(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.FieldPrintTitlesGet">
            <summary>设置 ExcelPivotTable.get_FieldPrintTitles() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.FieldPrintTitlesSetBoolean">
            <summary>设置 ExcelPivotTable.set_FieldPrintTitles(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.FieldsGet">
            <summary>设置 ExcelPivotTable.get_Fields() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.FirstDataColGet">
            <summary>设置 ExcelPivotTable.get_FirstDataCol() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.FirstDataColSetInt32">
            <summary>设置 ExcelPivotTable.set_FirstDataCol(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.FirstDataRowGet">
            <summary>设置 ExcelPivotTable.get_FirstDataRow() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.FirstDataRowSetInt32">
            <summary>设置 ExcelPivotTable.set_FirstDataRow(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.FirstHeaderRowGet">
            <summary>设置 ExcelPivotTable.get_FirstHeaderRow() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.FirstHeaderRowSetInt32">
            <summary>设置 ExcelPivotTable.set_FirstHeaderRow(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.GetStartXmlStringInt32ExcelAddressBaseExcelAddressBase">
            <summary>设置 ExcelPivotTable.GetStartXml(String name, Int32 id, ExcelAddressBase address, ExcelAddressBase sourceAddress) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.GrandTotalCaptionGet">
            <summary>设置 ExcelPivotTable.get_GrandTotalCaption() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.GrandTotalCaptionSetString">
            <summary>设置 ExcelPivotTable.set_GrandTotalCaption(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.GridDropZonesGet">
            <summary>设置 ExcelPivotTable.get_GridDropZones() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.GridDropZonesSetBoolean">
            <summary>设置 ExcelPivotTable.set_GridDropZones(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.IdGet">
            <summary>设置 ExcelPivotTable.get_Id() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.IdSetInt32">
            <summary>设置 ExcelPivotTable.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.IndentGet">
            <summary>设置 ExcelPivotTable.get_Indent() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.IndentSetInt32">
            <summary>设置 ExcelPivotTable.set_Indent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ItemPrintTitlesGet">
            <summary>设置 ExcelPivotTable.get_ItemPrintTitles() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ItemPrintTitlesSetBoolean">
            <summary>设置 ExcelPivotTable.set_ItemPrintTitles(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.LoadFields">
            <summary>设置 ExcelPivotTable.LoadFields() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.MissingCaptionGet">
            <summary>设置 ExcelPivotTable.get_MissingCaption() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.MissingCaptionSetString">
            <summary>设置 ExcelPivotTable.set_MissingCaption(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.MultipleFieldFiltersGet">
            <summary>设置 ExcelPivotTable.get_MultipleFieldFilters() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.MultipleFieldFiltersSetBoolean">
            <summary>设置 ExcelPivotTable.set_MultipleFieldFilters(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.NameGet">
            <summary>设置 ExcelPivotTable.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.NameSetString">
            <summary>设置 ExcelPivotTable.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.OutlineDataGet">
            <summary>设置 ExcelPivotTable.get_OutlineData() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.OutlineDataSetBoolean">
            <summary>设置 ExcelPivotTable.set_OutlineData(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.OutlineGet">
            <summary>设置 ExcelPivotTable.get_Outline() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.OutlineSetBoolean">
            <summary>设置 ExcelPivotTable.set_Outline(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.PageFieldsGet">
            <summary>设置 ExcelPivotTable.get_PageFields() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.PageWrapGet">
            <summary>设置 ExcelPivotTable.get_PageWrap() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.PageWrapSetInt32">
            <summary>设置 ExcelPivotTable.set_PageWrap(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.PartGet">
            <summary>设置 ExcelPivotTable.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.PartSetPackagePart">
            <summary>设置 ExcelPivotTable.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.PivotTableUriGet">
            <summary>设置 ExcelPivotTable.get_PivotTableUri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.PivotTableUriSetUri">
            <summary>设置 ExcelPivotTable.set_PivotTableUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.PivotTableXmlGet">
            <summary>设置 ExcelPivotTable.get_PivotTableXml() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.PivotTableXmlSetXmlDocument">
            <summary>设置 ExcelPivotTable.set_PivotTableXml(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.PrintDrillGet">
            <summary>设置 ExcelPivotTable.get_PrintDrill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.PrintDrillSetBoolean">
            <summary>设置 ExcelPivotTable.set_PrintDrill(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.RelationshipGet">
            <summary>设置 ExcelPivotTable.get_Relationship() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.RelationshipSetPackageRelationship">
            <summary>设置 ExcelPivotTable.set_Relationship(PackageRelationship value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.RowFieldsGet">
            <summary>设置 ExcelPivotTable.get_RowFields() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.RowGrandTotalsGet">
            <summary>设置 ExcelPivotTable.get_RowGrandTotals() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.RowGrandTotalsSetBoolean">
            <summary>设置 ExcelPivotTable.set_RowGrandTotals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.RowHeaderCaptionGet">
            <summary>设置 ExcelPivotTable.get_RowHeaderCaption() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.RowHeaderCaptionSetString">
            <summary>设置 ExcelPivotTable.set_RowHeaderCaption(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ShowCalcMemberGet">
            <summary>设置 ExcelPivotTable.get_ShowCalcMember() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ShowCalcMemberSetBoolean">
            <summary>设置 ExcelPivotTable.set_ShowCalcMember(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ShowDataTipsGet">
            <summary>设置 ExcelPivotTable.get_ShowDataTips() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ShowDataTipsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ShowDataTips(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ShowDrillGet">
            <summary>设置 ExcelPivotTable.get_ShowDrill() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ShowDrillSetBoolean">
            <summary>设置 ExcelPivotTable.set_ShowDrill(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ShowErrorGet">
            <summary>设置 ExcelPivotTable.get_ShowError() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ShowErrorSetBoolean">
            <summary>设置 ExcelPivotTable.set_ShowError(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ShowHeadersGet">
            <summary>设置 ExcelPivotTable.get_ShowHeaders() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ShowHeadersSetBoolean">
            <summary>设置 ExcelPivotTable.set_ShowHeaders(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ShowMemberPropertyTipsGet">
            <summary>设置 ExcelPivotTable.get_ShowMemberPropertyTips() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.ShowMemberPropertyTipsSetBoolean">
            <summary>设置 ExcelPivotTable.set_ShowMemberPropertyTips(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.StyleNameGet">
            <summary>设置 ExcelPivotTable.get_StyleName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.StyleNameSetString">
            <summary>设置 ExcelPivotTable.set_StyleName(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.TableStyleGet">
            <summary>设置 ExcelPivotTable.get_TableStyle() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.TableStyleSetTableStyles">
            <summary>设置 ExcelPivotTable.set_TableStyle(TableStyles value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.UseAutoFormattingGet">
            <summary>设置 ExcelPivotTable.get_UseAutoFormatting() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.UseAutoFormattingSetBoolean">
            <summary>设置 ExcelPivotTable.set_UseAutoFormatting(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.WorkSheetGet">
            <summary>设置 ExcelPivotTable.get_WorkSheet() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.WorkSheetSetExcelWorksheet">
            <summary>设置 ExcelPivotTable.set_WorkSheet(ExcelWorksheet value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.cleanDisplayNameString">
            <summary>设置 ExcelPivotTable.cleanDisplayName(String name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTable.AllInstances.init">
            <summary>设置 ExcelPivotTable.init() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection">
            <summary>OfficeOpenXml.Table.PivotTable.ExcelPivotTableCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.#ctor(OfficeOpenXml.Table.PivotTable.ExcelPivotTableCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.Table.PivotTable.ExcelPivotTable})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.AddExcelAddressBaseExcelRangeBaseString">
            <summary>设置 ExcelPivotTableCollection.Add(ExcelAddressBase Range, ExcelRangeBase Source, String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.AddExcelPivotTable">
            <summary>设置 ExcelPivotTableCollection.Add(ExcelPivotTable tbl) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.ConstructorExcelWorksheet">
            <summary>设置 ExcelPivotTableCollection.ExcelPivotTableCollection(ExcelWorksheet ws) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.CountGet">
            <summary>设置 ExcelPivotTableCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.GetEnumerator">
            <summary>设置 ExcelPivotTableCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.GetNewTableName">
            <summary>设置 ExcelPivotTableCollection.GetNewTableName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.ItemGetInt32">
            <summary>设置 ExcelPivotTableCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.ItemGetString">
            <summary>设置 ExcelPivotTableCollection.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelPivotTableCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.AllInstances.AddExcelAddressBaseExcelRangeBaseString">
            <summary>设置 ExcelPivotTableCollection.Add(ExcelAddressBase Range, ExcelRangeBase Source, String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.AllInstances.AddExcelPivotTable">
            <summary>设置 ExcelPivotTableCollection.Add(ExcelPivotTable tbl) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.AllInstances.CountGet">
            <summary>设置 ExcelPivotTableCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.AllInstances.GetEnumerator">
            <summary>设置 ExcelPivotTableCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.AllInstances.GetNewTableName">
            <summary>设置 ExcelPivotTableCollection.GetNewTableName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.AllInstances.ItemGetInt32">
            <summary>设置 ExcelPivotTableCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.AllInstances.ItemGetString">
            <summary>设置 ExcelPivotTableCollection.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelPivotTableCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField">
            <summary>OfficeOpenXml.Table.PivotTable.ExcelPivotTableDataField 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.#ctor(OfficeOpenXml.Table.PivotTable.ExcelPivotTableDataField)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.BaseFieldGet">
            <summary>设置 ExcelPivotTableDataField.get_BaseField() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.BaseFieldSetInt32">
            <summary>设置 ExcelPivotTableDataField.set_BaseField(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.BaseItemGet">
            <summary>设置 ExcelPivotTableDataField.get_BaseItem() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.BaseItemSetInt32">
            <summary>设置 ExcelPivotTableDataField.set_BaseItem(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.ConstructorXmlNamespaceManagerXmlNodeExcelPivotTableField">
            <summary>设置 ExcelPivotTableDataField.ExcelPivotTableDataField(XmlNamespaceManager ns, XmlNode topNode, ExcelPivotTableField field) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.FieldGet">
            <summary>设置 ExcelPivotTableDataField.get_Field() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.FieldSetExcelPivotTableField">
            <summary>设置 ExcelPivotTableDataField.set_Field(ExcelPivotTableField value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.FormatGet">
            <summary>设置 ExcelPivotTableDataField.get_Format() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.FormatSetString">
            <summary>设置 ExcelPivotTableDataField.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.FunctionGet">
            <summary>设置 ExcelPivotTableDataField.get_Function() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.FunctionSetDataFieldFunctions">
            <summary>设置 ExcelPivotTableDataField.set_Function(DataFieldFunctions value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.IndexGet">
            <summary>设置 ExcelPivotTableDataField.get_Index() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.IndexSetInt32">
            <summary>设置 ExcelPivotTableDataField.set_Index(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.NameGet">
            <summary>设置 ExcelPivotTableDataField.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.NameSetString">
            <summary>设置 ExcelPivotTableDataField.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.NumFmtIdGet">
            <summary>设置 ExcelPivotTableDataField.get_NumFmtId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.NumFmtIdSetInt32">
            <summary>设置 ExcelPivotTableDataField.set_NumFmtId(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.BaseFieldGet">
            <summary>设置 ExcelPivotTableDataField.get_BaseField() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.BaseFieldSetInt32">
            <summary>设置 ExcelPivotTableDataField.set_BaseField(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.BaseItemGet">
            <summary>设置 ExcelPivotTableDataField.get_BaseItem() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.BaseItemSetInt32">
            <summary>设置 ExcelPivotTableDataField.set_BaseItem(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.FieldGet">
            <summary>设置 ExcelPivotTableDataField.get_Field() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.FieldSetExcelPivotTableField">
            <summary>设置 ExcelPivotTableDataField.set_Field(ExcelPivotTableField value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.FormatGet">
            <summary>设置 ExcelPivotTableDataField.get_Format() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.FormatSetString">
            <summary>设置 ExcelPivotTableDataField.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.FunctionGet">
            <summary>设置 ExcelPivotTableDataField.get_Function() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.FunctionSetDataFieldFunctions">
            <summary>设置 ExcelPivotTableDataField.set_Function(DataFieldFunctions value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.IndexGet">
            <summary>设置 ExcelPivotTableDataField.get_Index() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.IndexSetInt32">
            <summary>设置 ExcelPivotTableDataField.set_Index(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.NameGet">
            <summary>设置 ExcelPivotTableDataField.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.NameSetString">
            <summary>设置 ExcelPivotTableDataField.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.NumFmtIdGet">
            <summary>设置 ExcelPivotTableDataField.get_NumFmtId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataField.AllInstances.NumFmtIdSetInt32">
            <summary>设置 ExcelPivotTableDataField.set_NumFmtId(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection">
            <summary>OfficeOpenXml.Table.PivotTable.ExcelPivotTableDataFieldCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.#ctor(OfficeOpenXml.Table.PivotTable.ExcelPivotTableDataFieldCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.Table.PivotTable.ExcelPivotTableDataField})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.AddExcelPivotTableField">
            <summary>设置 ExcelPivotTableDataFieldCollection.Add(ExcelPivotTableField field) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.ConstructorExcelPivotTable">
            <summary>设置 ExcelPivotTableDataFieldCollection.ExcelPivotTableDataFieldCollection(ExcelPivotTable table) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.ExistsDfNameStringExcelPivotTableDataField">
            <summary>设置 ExcelPivotTableDataFieldCollection.ExistsDfName(String name, ExcelPivotTableDataField datafield) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.RemoveExcelPivotTableDataField">
            <summary>设置 ExcelPivotTableDataFieldCollection.Remove(ExcelPivotTableDataField dataField) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.ValidateDupNameExcelPivotTableDataField">
            <summary>设置 ExcelPivotTableDataFieldCollection.ValidateDupName(ExcelPivotTableDataField dataField) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.AllInstances.AddExcelPivotTableField">
            <summary>设置 ExcelPivotTableDataFieldCollection.Add(ExcelPivotTableField field) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.AllInstances.ExistsDfNameStringExcelPivotTableDataField">
            <summary>设置 ExcelPivotTableDataFieldCollection.ExistsDfName(String name, ExcelPivotTableDataField datafield) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.AllInstances.RemoveExcelPivotTableDataField">
            <summary>设置 ExcelPivotTableDataFieldCollection.Remove(ExcelPivotTableDataField dataField) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableDataFieldCollection.AllInstances.ValidateDupNameExcelPivotTableDataField">
            <summary>设置 ExcelPivotTableDataFieldCollection.ValidateDupName(ExcelPivotTableDataField dataField) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField">
            <summary>OfficeOpenXml.Table.PivotTable.ExcelPivotTableField 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.#ctor(OfficeOpenXml.Table.PivotTable.ExcelPivotTableField)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AddCacheFieldExcelPivotTableFieldDateTimeDateTimeInt32">
            <summary>设置 ExcelPivotTableField.AddCacheField(ExcelPivotTableField field, DateTime startDate, DateTime endDate, Int32 interval) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AddDateGroupItemsExcelPivotTableFieldGroupeDateGroupByDateTimeDateTimeInt32">
            <summary>设置 ExcelPivotTableField.AddDateGroupItems(ExcelPivotTableFieldGroup group, eDateGroupBy GroupBy, DateTime StartDate, DateTime EndDate, Int32 interval) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AddDateGroupingInt32DateTimeDateTime">
            <summary>设置 ExcelPivotTableField.AddDateGrouping(Int32 days, DateTime startDate, DateTime endDate) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AddDateGroupingeDateGroupBy">
            <summary>设置 ExcelPivotTableField.AddDateGrouping(eDateGroupBy groupBy) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AddDateGroupingeDateGroupByDateTimeDateTime">
            <summary>设置 ExcelPivotTableField.AddDateGrouping(eDateGroupBy groupBy, DateTime startDate, DateTime endDate) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AddDateGroupingeDateGroupByDateTimeDateTimeInt32">
            <summary>设置 ExcelPivotTableField.AddDateGrouping(eDateGroupBy groupBy, DateTime startDate, DateTime endDate, Int32 groupInterval) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AddFieldItemsInt32">
            <summary>设置 ExcelPivotTableField.AddFieldItems(Int32 items) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AddFieldeDateGroupByDateTimeDateTimeBooleanRef">
            <summary>设置 ExcelPivotTableField.AddField(eDateGroupBy groupBy, DateTime startDate, DateTime endDate, Boolean&amp; firstField) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AddGroupItemXmlElementString">
            <summary>设置 ExcelPivotTableField.AddGroupItem(XmlElement groupItems, String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AddNumericGroupItemsExcelPivotTableFieldNumericGroupDoubleDoubleDouble">
            <summary>设置 ExcelPivotTableField.AddNumericGroupItems(ExcelPivotTableFieldNumericGroup group, Double start, Double end, Double interval) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AddNumericGroupingDoubleDoubleDouble">
            <summary>设置 ExcelPivotTableField.AddNumericGrouping(Double Start, Double End, Double Interval) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AddTimeSerieInt32XmlElement">
            <summary>设置 ExcelPivotTableField.AddTimeSerie(Int32 count, XmlElement groupItems) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AppendFieldXmlNodeInt32StringString">
            <summary>设置 ExcelPivotTableField.AppendField(XmlNode rowsNode, Int32 index, String fieldNodeText, String indexAttrText) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AxisGet">
            <summary>设置 ExcelPivotTableField.get_Axis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AxisSetePivotFieldAxis">
            <summary>设置 ExcelPivotTableField.set_Axis(ePivotFieldAxis value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.BaseIndexGet">
            <summary>设置 ExcelPivotTableField.get_BaseIndex() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.BaseIndexSetInt32">
            <summary>设置 ExcelPivotTableField.set_BaseIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.CompactGet">
            <summary>设置 ExcelPivotTableField.get_Compact() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.CompactSetBoolean">
            <summary>设置 ExcelPivotTableField.set_Compact(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.ConstructorXmlNamespaceManagerXmlNodeExcelPivotTableInt32Int32">
            <summary>设置 ExcelPivotTableField.ExcelPivotTableField(XmlNamespaceManager ns, XmlNode topNode, ExcelPivotTable table, Int32 index, Int32 baseIndex) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.DateGroupingGet">
            <summary>设置 ExcelPivotTableField.get_DateGrouping() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.DateGroupingSeteDateGroupBy">
            <summary>设置 ExcelPivotTableField.set_DateGrouping(eDateGroupBy value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.GroupingGet">
            <summary>设置 ExcelPivotTableField.get_Grouping() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.IncludeNewItemsInFilterGet">
            <summary>设置 ExcelPivotTableField.get_IncludeNewItemsInFilter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.IncludeNewItemsInFilterSetBoolean">
            <summary>设置 ExcelPivotTableField.set_IncludeNewItemsInFilter(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.IndexGet">
            <summary>设置 ExcelPivotTableField.get_Index() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.IndexSetInt32">
            <summary>设置 ExcelPivotTableField.set_Index(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.IsColumnFieldGet">
            <summary>设置 ExcelPivotTableField.get_IsColumnField() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.IsColumnFieldSetBoolean">
            <summary>设置 ExcelPivotTableField.set_IsColumnField(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.IsDataFieldGet">
            <summary>设置 ExcelPivotTableField.get_IsDataField() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.IsPageFieldGet">
            <summary>设置 ExcelPivotTableField.get_IsPageField() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.IsPageFieldSetBoolean">
            <summary>设置 ExcelPivotTableField.set_IsPageField(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.IsRowFieldGet">
            <summary>设置 ExcelPivotTableField.get_IsRowField() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.IsRowFieldSetBoolean">
            <summary>设置 ExcelPivotTableField.set_IsRowField(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.ItemsGet">
            <summary>设置 ExcelPivotTableField.get_Items() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.NameGet">
            <summary>设置 ExcelPivotTableField.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.NameSetString">
            <summary>设置 ExcelPivotTableField.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.OutlineGet">
            <summary>设置 ExcelPivotTableField.get_Outline() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.OutlineSetBoolean">
            <summary>设置 ExcelPivotTableField.set_Outline(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.PageFieldSettingsGet">
            <summary>设置 ExcelPivotTableField.get_PageFieldSettings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.SetCacheFieldNodeXmlNode">
            <summary>设置 ExcelPivotTableField.SetCacheFieldNode(XmlNode cacheField) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.SetDateGroupeDateGroupByDateTimeDateTimeInt32">
            <summary>设置 ExcelPivotTableField.SetDateGroup(eDateGroupBy GroupBy, DateTime StartDate, DateTime EndDate, Int32 interval) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.SetNumericGroupDoubleDoubleDouble">
            <summary>设置 ExcelPivotTableField.SetNumericGroup(Double start, Double end, Double interval) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.ShowAllGet">
            <summary>设置 ExcelPivotTableField.get_ShowAll() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.ShowAllSetBoolean">
            <summary>设置 ExcelPivotTableField.set_ShowAll(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.SortGet">
            <summary>设置 ExcelPivotTableField.get_Sort() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.SortSeteSortType">
            <summary>设置 ExcelPivotTableField.set_Sort(eSortType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.SubTotalFunctionsGet">
            <summary>设置 ExcelPivotTableField.get_SubTotalFunctions() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.SubTotalFunctionsSeteSubTotalFunctions">
            <summary>设置 ExcelPivotTableField.set_SubTotalFunctions(eSubTotalFunctions value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.SubtotalTopGet">
            <summary>设置 ExcelPivotTableField.get_SubtotalTop() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.SubtotalTopSetBoolean">
            <summary>设置 ExcelPivotTableField.set_SubtotalTop(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.ValidateGrouping">
            <summary>设置 ExcelPivotTableField.ValidateGrouping() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AddCacheFieldExcelPivotTableFieldDateTimeDateTimeInt32">
            <summary>设置 ExcelPivotTableField.AddCacheField(ExcelPivotTableField field, DateTime startDate, DateTime endDate, Int32 interval) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AddDateGroupItemsExcelPivotTableFieldGroupeDateGroupByDateTimeDateTimeInt32">
            <summary>设置 ExcelPivotTableField.AddDateGroupItems(ExcelPivotTableFieldGroup group, eDateGroupBy GroupBy, DateTime StartDate, DateTime EndDate, Int32 interval) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AddDateGroupingInt32DateTimeDateTime">
            <summary>设置 ExcelPivotTableField.AddDateGrouping(Int32 days, DateTime startDate, DateTime endDate) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AddDateGroupingeDateGroupBy">
            <summary>设置 ExcelPivotTableField.AddDateGrouping(eDateGroupBy groupBy) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AddDateGroupingeDateGroupByDateTimeDateTime">
            <summary>设置 ExcelPivotTableField.AddDateGrouping(eDateGroupBy groupBy, DateTime startDate, DateTime endDate) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AddDateGroupingeDateGroupByDateTimeDateTimeInt32">
            <summary>设置 ExcelPivotTableField.AddDateGrouping(eDateGroupBy groupBy, DateTime startDate, DateTime endDate, Int32 groupInterval) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AddFieldItemsInt32">
            <summary>设置 ExcelPivotTableField.AddFieldItems(Int32 items) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AddFieldeDateGroupByDateTimeDateTimeBooleanRef">
            <summary>设置 ExcelPivotTableField.AddField(eDateGroupBy groupBy, DateTime startDate, DateTime endDate, Boolean&amp; firstField) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AddGroupItemXmlElementString">
            <summary>设置 ExcelPivotTableField.AddGroupItem(XmlElement groupItems, String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AddNumericGroupItemsExcelPivotTableFieldNumericGroupDoubleDoubleDouble">
            <summary>设置 ExcelPivotTableField.AddNumericGroupItems(ExcelPivotTableFieldNumericGroup group, Double start, Double end, Double interval) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AddNumericGroupingDoubleDoubleDouble">
            <summary>设置 ExcelPivotTableField.AddNumericGrouping(Double Start, Double End, Double Interval) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AddTimeSerieInt32XmlElement">
            <summary>设置 ExcelPivotTableField.AddTimeSerie(Int32 count, XmlElement groupItems) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AppendFieldXmlNodeInt32StringString">
            <summary>设置 ExcelPivotTableField.AppendField(XmlNode rowsNode, Int32 index, String fieldNodeText, String indexAttrText) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AxisGet">
            <summary>设置 ExcelPivotTableField.get_Axis() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.AxisSetePivotFieldAxis">
            <summary>设置 ExcelPivotTableField.set_Axis(ePivotFieldAxis value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.BaseIndexGet">
            <summary>设置 ExcelPivotTableField.get_BaseIndex() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.BaseIndexSetInt32">
            <summary>设置 ExcelPivotTableField.set_BaseIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.CompactGet">
            <summary>设置 ExcelPivotTableField.get_Compact() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.CompactSetBoolean">
            <summary>设置 ExcelPivotTableField.set_Compact(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.DateGroupingGet">
            <summary>设置 ExcelPivotTableField.get_DateGrouping() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.DateGroupingSeteDateGroupBy">
            <summary>设置 ExcelPivotTableField.set_DateGrouping(eDateGroupBy value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.GroupingGet">
            <summary>设置 ExcelPivotTableField.get_Grouping() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.IncludeNewItemsInFilterGet">
            <summary>设置 ExcelPivotTableField.get_IncludeNewItemsInFilter() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.IncludeNewItemsInFilterSetBoolean">
            <summary>设置 ExcelPivotTableField.set_IncludeNewItemsInFilter(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.IndexGet">
            <summary>设置 ExcelPivotTableField.get_Index() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.IndexSetInt32">
            <summary>设置 ExcelPivotTableField.set_Index(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.IsColumnFieldGet">
            <summary>设置 ExcelPivotTableField.get_IsColumnField() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.IsColumnFieldSetBoolean">
            <summary>设置 ExcelPivotTableField.set_IsColumnField(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.IsDataFieldGet">
            <summary>设置 ExcelPivotTableField.get_IsDataField() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.IsPageFieldGet">
            <summary>设置 ExcelPivotTableField.get_IsPageField() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.IsPageFieldSetBoolean">
            <summary>设置 ExcelPivotTableField.set_IsPageField(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.IsRowFieldGet">
            <summary>设置 ExcelPivotTableField.get_IsRowField() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.IsRowFieldSetBoolean">
            <summary>设置 ExcelPivotTableField.set_IsRowField(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.ItemsGet">
            <summary>设置 ExcelPivotTableField.get_Items() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.NameGet">
            <summary>设置 ExcelPivotTableField.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.NameSetString">
            <summary>设置 ExcelPivotTableField.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.OutlineGet">
            <summary>设置 ExcelPivotTableField.get_Outline() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.OutlineSetBoolean">
            <summary>设置 ExcelPivotTableField.set_Outline(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.PageFieldSettingsGet">
            <summary>设置 ExcelPivotTableField.get_PageFieldSettings() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.SetCacheFieldNodeXmlNode">
            <summary>设置 ExcelPivotTableField.SetCacheFieldNode(XmlNode cacheField) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.SetDateGroupeDateGroupByDateTimeDateTimeInt32">
            <summary>设置 ExcelPivotTableField.SetDateGroup(eDateGroupBy GroupBy, DateTime StartDate, DateTime EndDate, Int32 interval) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.SetNumericGroupDoubleDoubleDouble">
            <summary>设置 ExcelPivotTableField.SetNumericGroup(Double start, Double end, Double interval) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.ShowAllGet">
            <summary>设置 ExcelPivotTableField.get_ShowAll() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.ShowAllSetBoolean">
            <summary>设置 ExcelPivotTableField.set_ShowAll(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.SortGet">
            <summary>设置 ExcelPivotTableField.get_Sort() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.SortSeteSortType">
            <summary>设置 ExcelPivotTableField.set_Sort(eSortType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.SubTotalFunctionsGet">
            <summary>设置 ExcelPivotTableField.get_SubTotalFunctions() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.SubTotalFunctionsSeteSubTotalFunctions">
            <summary>设置 ExcelPivotTableField.set_SubTotalFunctions(eSubTotalFunctions value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.SubtotalTopGet">
            <summary>设置 ExcelPivotTableField.get_SubtotalTop() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.SubtotalTopSetBoolean">
            <summary>设置 ExcelPivotTableField.set_SubtotalTop(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableField.AllInstances.ValidateGrouping">
            <summary>设置 ExcelPivotTableField.ValidateGrouping() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection">
            <summary>OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.#ctor(OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.ConstructorExcelPivotTableString">
            <summary>设置 ExcelPivotTableFieldCollection.ExcelPivotTableFieldCollection(ExcelPivotTable table, String topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.GetDateGroupFieldeDateGroupBy">
            <summary>设置 ExcelPivotTableFieldCollection.GetDateGroupField(eDateGroupBy GroupBy) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.GetNumericGroupField">
            <summary>设置 ExcelPivotTableFieldCollection.GetNumericGroupField() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.ItemGetString">
            <summary>设置 ExcelPivotTableFieldCollection.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.AllInstances.GetDateGroupFieldeDateGroupBy">
            <summary>设置 ExcelPivotTableFieldCollection.GetDateGroupField(eDateGroupBy GroupBy) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.AllInstances.GetNumericGroupField">
            <summary>设置 ExcelPivotTableFieldCollection.GetNumericGroupField() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollection.AllInstances.ItemGetString">
            <summary>设置 ExcelPivotTableFieldCollection.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1">
            <summary>OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.#ctor(OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.AddInternalT0">
            <summary>设置 ExcelPivotTableFieldCollectionBase`1.AddInternal(!0 field) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.Clear">
            <summary>设置 ExcelPivotTableFieldCollectionBase`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.ConstructorExcelPivotTable">
            <summary>设置 ExcelPivotTableFieldCollectionBase`1.ExcelPivotTableFieldCollectionBase`1(ExcelPivotTable table) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.CountGet">
            <summary>设置 ExcelPivotTableFieldCollectionBase`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.GetEnumerator">
            <summary>设置 ExcelPivotTableFieldCollectionBase`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.ItemGetInt32">
            <summary>设置 ExcelPivotTableFieldCollectionBase`1.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelPivotTableFieldCollectionBase`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.AllInstances.AddInternalT0">
            <summary>设置 ExcelPivotTableFieldCollectionBase`1.AddInternal(!0 field) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.AllInstances.Clear">
            <summary>设置 ExcelPivotTableFieldCollectionBase`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.AllInstances.CountGet">
            <summary>设置 ExcelPivotTableFieldCollectionBase`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.AllInstances.GetEnumerator">
            <summary>设置 ExcelPivotTableFieldCollectionBase`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.AllInstances.ItemGetInt32">
            <summary>设置 ExcelPivotTableFieldCollectionBase`1.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldCollectionBase`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelPivotTableFieldCollectionBase`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup">
            <summary>OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldDateGroup 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.#ctor(OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldDateGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.AutoEndGet">
            <summary>设置 ExcelPivotTableFieldDateGroup.get_AutoEnd() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.AutoStartGet">
            <summary>设置 ExcelPivotTableFieldDateGroup.get_AutoStart() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelPivotTableFieldDateGroup.ExcelPivotTableFieldDateGroup(XmlNamespaceManager ns, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.GroupByGet">
            <summary>设置 ExcelPivotTableFieldDateGroup.get_GroupBy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.GroupBySeteDateGroupBy">
            <summary>设置 ExcelPivotTableFieldDateGroup.set_GroupBy(eDateGroupBy value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.AllInstances.AutoEndGet">
            <summary>设置 ExcelPivotTableFieldDateGroup.get_AutoEnd() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.AllInstances.AutoStartGet">
            <summary>设置 ExcelPivotTableFieldDateGroup.get_AutoStart() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.AllInstances.GroupByGet">
            <summary>设置 ExcelPivotTableFieldDateGroup.get_GroupBy() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldDateGroup.AllInstances.GroupBySeteDateGroupBy">
            <summary>设置 ExcelPivotTableFieldDateGroup.set_GroupBy(eDateGroupBy value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldGroup">
            <summary>OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldGroup 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldGroup.#ctor(OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldGroup.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelPivotTableFieldGroup.ExcelPivotTableFieldGroup(XmlNamespaceManager ns, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem">
            <summary>OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldItem 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.#ctor(OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.ConstructorXmlNamespaceManagerXmlNodeExcelPivotTableField">
            <summary>设置 ExcelPivotTableFieldItem.ExcelPivotTableFieldItem(XmlNamespaceManager ns, XmlNode topNode, ExcelPivotTableField field) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.TGet">
            <summary>设置 ExcelPivotTableFieldItem.get_T() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.TextGet">
            <summary>设置 ExcelPivotTableFieldItem.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.TextSetString">
            <summary>设置 ExcelPivotTableFieldItem.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.XGet">
            <summary>设置 ExcelPivotTableFieldItem.get_X() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.AllInstances.TGet">
            <summary>设置 ExcelPivotTableFieldItem.get_T() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.AllInstances.TextGet">
            <summary>设置 ExcelPivotTableFieldItem.get_Text() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.AllInstances.TextSetString">
            <summary>设置 ExcelPivotTableFieldItem.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldItem.AllInstances.XGet">
            <summary>设置 ExcelPivotTableFieldItem.get_X() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup">
            <summary>OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldNumericGroup 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.#ctor(OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldNumericGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.ConstructorXmlNamespaceManagerXmlNode">
            <summary>设置 ExcelPivotTableFieldNumericGroup.ExcelPivotTableFieldNumericGroup(XmlNamespaceManager ns, XmlNode topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.EndGet">
            <summary>设置 ExcelPivotTableFieldNumericGroup.get_End() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.EndSetDouble">
            <summary>设置 ExcelPivotTableFieldNumericGroup.set_End(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.IntervalGet">
            <summary>设置 ExcelPivotTableFieldNumericGroup.get_Interval() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.IntervalSetDouble">
            <summary>设置 ExcelPivotTableFieldNumericGroup.set_Interval(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.StartGet">
            <summary>设置 ExcelPivotTableFieldNumericGroup.get_Start() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.StartSetDouble">
            <summary>设置 ExcelPivotTableFieldNumericGroup.set_Start(Double value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.AllInstances.EndGet">
            <summary>设置 ExcelPivotTableFieldNumericGroup.get_End() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.AllInstances.EndSetDouble">
            <summary>设置 ExcelPivotTableFieldNumericGroup.set_End(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.AllInstances.IntervalGet">
            <summary>设置 ExcelPivotTableFieldNumericGroup.get_Interval() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.AllInstances.IntervalSetDouble">
            <summary>设置 ExcelPivotTableFieldNumericGroup.set_Interval(Double value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.AllInstances.StartGet">
            <summary>设置 ExcelPivotTableFieldNumericGroup.get_Start() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableFieldNumericGroup.AllInstances.StartSetDouble">
            <summary>设置 ExcelPivotTableFieldNumericGroup.set_Start(Double value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings">
            <summary>OfficeOpenXml.Table.PivotTable.ExcelPivotTablePageFieldSettings 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.#ctor(OfficeOpenXml.Table.PivotTable.ExcelPivotTablePageFieldSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.ConstructorXmlNamespaceManagerXmlNodeExcelPivotTableFieldInt32">
            <summary>设置 ExcelPivotTablePageFieldSettings.ExcelPivotTablePageFieldSettings(XmlNamespaceManager ns, XmlNode topNode, ExcelPivotTableField field, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.HierGet">
            <summary>设置 ExcelPivotTablePageFieldSettings.get_Hier() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.HierSetInt32">
            <summary>设置 ExcelPivotTablePageFieldSettings.set_Hier(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.IndexGet">
            <summary>设置 ExcelPivotTablePageFieldSettings.get_Index() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.IndexSetInt32">
            <summary>设置 ExcelPivotTablePageFieldSettings.set_Index(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.NameGet">
            <summary>设置 ExcelPivotTablePageFieldSettings.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.NameSetString">
            <summary>设置 ExcelPivotTablePageFieldSettings.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.NumFmtIdGet">
            <summary>设置 ExcelPivotTablePageFieldSettings.get_NumFmtId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.NumFmtIdSetInt32">
            <summary>设置 ExcelPivotTablePageFieldSettings.set_NumFmtId(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.AllInstances.HierGet">
            <summary>设置 ExcelPivotTablePageFieldSettings.get_Hier() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.AllInstances.HierSetInt32">
            <summary>设置 ExcelPivotTablePageFieldSettings.set_Hier(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.AllInstances.IndexGet">
            <summary>设置 ExcelPivotTablePageFieldSettings.get_Index() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.AllInstances.IndexSetInt32">
            <summary>设置 ExcelPivotTablePageFieldSettings.set_Index(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.AllInstances.NameGet">
            <summary>设置 ExcelPivotTablePageFieldSettings.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.AllInstances.NameSetString">
            <summary>设置 ExcelPivotTablePageFieldSettings.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.AllInstances.NumFmtIdGet">
            <summary>设置 ExcelPivotTablePageFieldSettings.get_NumFmtId() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTablePageFieldSettings.AllInstances.NumFmtIdSetInt32">
            <summary>设置 ExcelPivotTablePageFieldSettings.set_NumFmtId(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection">
            <summary>OfficeOpenXml.Table.PivotTable.ExcelPivotTableRowColumnFieldCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.#ctor(OfficeOpenXml.Table.PivotTable.ExcelPivotTableRowColumnFieldCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.AddExcelPivotTableField">
            <summary>设置 ExcelPivotTableRowColumnFieldCollection.Add(ExcelPivotTableField Field) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.ConstructorExcelPivotTableString">
            <summary>设置 ExcelPivotTableRowColumnFieldCollection.ExcelPivotTableRowColumnFieldCollection(ExcelPivotTable table, String topNode) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.InsertExcelPivotTableFieldInt32">
            <summary>设置 ExcelPivotTableRowColumnFieldCollection.Insert(ExcelPivotTableField Field, Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.RemoveAtInt32">
            <summary>设置 ExcelPivotTableRowColumnFieldCollection.RemoveAt(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.RemoveExcelPivotTableField">
            <summary>设置 ExcelPivotTableRowColumnFieldCollection.Remove(ExcelPivotTableField Field) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.SetFlagExcelPivotTableFieldBoolean">
            <summary>设置 ExcelPivotTableRowColumnFieldCollection.SetFlag(ExcelPivotTableField field, Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.AllInstances.AddExcelPivotTableField">
            <summary>设置 ExcelPivotTableRowColumnFieldCollection.Add(ExcelPivotTableField Field) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.AllInstances.InsertExcelPivotTableFieldInt32">
            <summary>设置 ExcelPivotTableRowColumnFieldCollection.Insert(ExcelPivotTableField Field, Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.AllInstances.RemoveAtInt32">
            <summary>设置 ExcelPivotTableRowColumnFieldCollection.RemoveAt(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.AllInstances.RemoveExcelPivotTableField">
            <summary>设置 ExcelPivotTableRowColumnFieldCollection.Remove(ExcelPivotTableField Field) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Table.PivotTable.Fakes.ShimExcelPivotTableRowColumnFieldCollection.AllInstances.SetFlagExcelPivotTableFieldBoolean">
            <summary>设置 ExcelPivotTableRowColumnFieldCollection.SetFlag(ExcelPivotTableField field, Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Utils.Fakes.ShimAddressUtility">
            <summary>OfficeOpenXml.Utils.AddressUtility 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimAddressUtility.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimAddressUtility.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimAddressUtility.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Utils.Fakes.ShimAddressUtility.AddRowNumbersToEntireColumnRangeStringRefString">
            <summary>设置 AddressUtility.AddRowNumbersToEntireColumnRange(String&amp; address, String range) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Utils.Fakes.ShimAddressUtility.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Utils.Fakes.ShimAddressUtility.ParseEntireColumnSelectionsString">
            <summary>设置 AddressUtility.ParseEntireColumnSelections(String address) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Utils.Fakes.ShimArgumentExtensions">
            <summary>OfficeOpenXml.Utils.ArgumentExtensions 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimArgumentExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimArgumentExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimArgumentExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimArgumentExtensions.IsInRangeOf1IArgumentOfM0M0M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{OfficeOpenXml.Utils.IArgument{``0},``0,``0,System.String})">
            <summary>设置 ArgumentExtensions.IsInRange(IArgument`1&lt;!!0&gt; argument, !!0 min, !!0 max, String argumentName) 的 填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimArgumentExtensions.IsNotNullOf1IArgumentOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{OfficeOpenXml.Utils.IArgument{``0},System.String})">
            <summary>设置 ArgumentExtensions.IsNotNull(IArgument`1&lt;!!0&gt; argument, String argumentName) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Utils.Fakes.ShimArgumentExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Utils.Fakes.ShimArgumentExtensions.IsNotNullOrEmptyIArgumentOfStringString">
            <summary>设置 ArgumentExtensions.IsNotNullOrEmpty(IArgument`1&lt;String&gt; argument, String argumentName) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Utils.Fakes.ShimRequire">
            <summary>OfficeOpenXml.Utils.Require 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimRequire.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimRequire.ArgumentOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,OfficeOpenXml.Utils.IArgument{``0}})">
            <summary>设置 Require.Argument(!!0 argument) 的 填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimRequire.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimRequire.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Utils.Fakes.ShimRequire.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:OfficeOpenXml.Utils.Fakes.ShimSqRefUtility">
            <summary>OfficeOpenXml.Utils.SqRefUtility 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimSqRefUtility.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimSqRefUtility.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.ShimSqRefUtility.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Utils.Fakes.ShimSqRefUtility.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.Utils.Fakes.ShimSqRefUtility.FromSqRefAddressString">
            <summary>设置 SqRefUtility.FromSqRefAddress(String address) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.Utils.Fakes.ShimSqRefUtility.ToSqRefAddressString">
            <summary>设置 SqRefUtility.ToSqRefAddress(String address) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.Utils.Fakes.StubIArgument`1">
            <summary>OfficeOpenXml.Utils.IArgument`1 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.Utils.Fakes.StubIArgument`1.#ctor">
            <summary>初始化 type StubIArgument 的新实例</summary>
        </member>
        <member name="F:OfficeOpenXml.Utils.Fakes.StubIArgument`1.ValueGet">
            <summary>设置 IArgument`1.get_Value() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.Utils.Fakes.StubIArgument`1.epp::OfficeOpenXml#Utils#IArgument{T}#Value">
            <summary>设置 IArgument`1.get_Value() 的 stub</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1">
            <summary>OfficeOpenXml.VBA.ExcelVBACollectionBase`1 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.#ctor(OfficeOpenXml.VBA.ExcelVBACollectionBase{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.Clear">
            <summary>设置 ExcelVBACollectionBase`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.Constructor">
            <summary>设置 ExcelVBACollectionBase`1.ExcelVBACollectionBase`1() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.CountGet">
            <summary>设置 ExcelVBACollectionBase`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.ExistsString">
            <summary>设置 ExcelVBACollectionBase`1.Exists(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.GetEnumerator">
            <summary>设置 ExcelVBACollectionBase`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.ItemGetInt32">
            <summary>设置 ExcelVBACollectionBase`1.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.ItemGetString">
            <summary>设置 ExcelVBACollectionBase`1.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.RemoveAtInt32">
            <summary>设置 ExcelVBACollectionBase`1.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.RemoveT0">
            <summary>设置 ExcelVBACollectionBase`1.Remove(!0 Item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelVBACollectionBase`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.AllInstances.Clear">
            <summary>设置 ExcelVBACollectionBase`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.AllInstances.CountGet">
            <summary>设置 ExcelVBACollectionBase`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.AllInstances.ExistsString">
            <summary>设置 ExcelVBACollectionBase`1.Exists(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.AllInstances.GetEnumerator">
            <summary>设置 ExcelVBACollectionBase`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.AllInstances.ItemGetInt32">
            <summary>设置 ExcelVBACollectionBase`1.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.AllInstances.ItemGetString">
            <summary>设置 ExcelVBACollectionBase`1.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.AllInstances.RemoveAtInt32">
            <summary>设置 ExcelVBACollectionBase`1.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.AllInstances.RemoveT0">
            <summary>设置 ExcelVBACollectionBase`1.Remove(!0 Item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBACollectionBase`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExcelVBACollectionBase`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule">
            <summary>OfficeOpenXml.VBA.ExcelVBAModule 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.#ctor(OfficeOpenXml.VBA.ExcelVBAModule)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AttributesGet">
            <summary>设置 ExcelVBAModule.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AttributesSetExcelVbaModuleAttributesCollection">
            <summary>设置 ExcelVBAModule.set_Attributes(ExcelVbaModuleAttributesCollection value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.ClassIDGet">
            <summary>设置 ExcelVBAModule.get_ClassID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.ClassIDSetString">
            <summary>设置 ExcelVBAModule.set_ClassID(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.CodeGet">
            <summary>设置 ExcelVBAModule.get_Code() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.CodeSetString">
            <summary>设置 ExcelVBAModule.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.Constructor">
            <summary>设置 ExcelVBAModule.ExcelVBAModule() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.CookieGet">
            <summary>设置 ExcelVBAModule.get_Cookie() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.CookieSetUInt16">
            <summary>设置 ExcelVBAModule.set_Cookie(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.DescriptionGet">
            <summary>设置 ExcelVBAModule.get_Description() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.DescriptionSetString">
            <summary>设置 ExcelVBAModule.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.HelpContextGet">
            <summary>设置 ExcelVBAModule.get_HelpContext() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.HelpContextSetInt32">
            <summary>设置 ExcelVBAModule.set_HelpContext(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.ModuleOffsetGet">
            <summary>设置 ExcelVBAModule.get_ModuleOffset() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.ModuleOffsetSetUInt32">
            <summary>设置 ExcelVBAModule.set_ModuleOffset(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.NameGet">
            <summary>设置 ExcelVBAModule.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.NameSetString">
            <summary>设置 ExcelVBAModule.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.PrivateGet">
            <summary>设置 ExcelVBAModule.get_Private() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.PrivateSetBoolean">
            <summary>设置 ExcelVBAModule.set_Private(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.ReadOnlyGet">
            <summary>设置 ExcelVBAModule.get_ReadOnly() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.ReadOnlySetBoolean">
            <summary>设置 ExcelVBAModule.set_ReadOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.ToString">
            <summary>设置 ExcelVBAModule.ToString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.TypeGet">
            <summary>设置 ExcelVBAModule.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.TypeSeteModuleType">
            <summary>设置 ExcelVBAModule.set_Type(eModuleType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.streamNameGet">
            <summary>设置 ExcelVBAModule.get_streamName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.streamNameSetString">
            <summary>设置 ExcelVBAModule.set_streamName(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.AttributesGet">
            <summary>设置 ExcelVBAModule.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.AttributesSetExcelVbaModuleAttributesCollection">
            <summary>设置 ExcelVBAModule.set_Attributes(ExcelVbaModuleAttributesCollection value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.ClassIDGet">
            <summary>设置 ExcelVBAModule.get_ClassID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.ClassIDSetString">
            <summary>设置 ExcelVBAModule.set_ClassID(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.CodeGet">
            <summary>设置 ExcelVBAModule.get_Code() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.CodeSetString">
            <summary>设置 ExcelVBAModule.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.CookieGet">
            <summary>设置 ExcelVBAModule.get_Cookie() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.CookieSetUInt16">
            <summary>设置 ExcelVBAModule.set_Cookie(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.DescriptionGet">
            <summary>设置 ExcelVBAModule.get_Description() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.DescriptionSetString">
            <summary>设置 ExcelVBAModule.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.HelpContextGet">
            <summary>设置 ExcelVBAModule.get_HelpContext() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.HelpContextSetInt32">
            <summary>设置 ExcelVBAModule.set_HelpContext(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.ModuleOffsetGet">
            <summary>设置 ExcelVBAModule.get_ModuleOffset() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.ModuleOffsetSetUInt32">
            <summary>设置 ExcelVBAModule.set_ModuleOffset(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.NameGet">
            <summary>设置 ExcelVBAModule.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.NameSetString">
            <summary>设置 ExcelVBAModule.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.PrivateGet">
            <summary>设置 ExcelVBAModule.get_Private() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.PrivateSetBoolean">
            <summary>设置 ExcelVBAModule.set_Private(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.ReadOnlyGet">
            <summary>设置 ExcelVBAModule.get_ReadOnly() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.ReadOnlySetBoolean">
            <summary>设置 ExcelVBAModule.set_ReadOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.ToString01">
            <summary>设置 ExcelVBAModule.ToString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.TypeGet">
            <summary>设置 ExcelVBAModule.get_Type() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.TypeSeteModuleType">
            <summary>设置 ExcelVBAModule.set_Type(eModuleType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.streamNameGet">
            <summary>设置 ExcelVBAModule.get_streamName() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVBAModule.AllInstances.streamNameSetString">
            <summary>设置 ExcelVBAModule.set_streamName(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute">
            <summary>OfficeOpenXml.VBA.ExcelVbaModuleAttribute 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.#ctor(OfficeOpenXml.VBA.ExcelVbaModuleAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.Constructor">
            <summary>设置 ExcelVbaModuleAttribute.ExcelVbaModuleAttribute() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.DataTypeGet">
            <summary>设置 ExcelVbaModuleAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.DataTypeSeteAttributeDataType">
            <summary>设置 ExcelVbaModuleAttribute.set_DataType(eAttributeDataType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.NameGet">
            <summary>设置 ExcelVbaModuleAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.NameSetString">
            <summary>设置 ExcelVbaModuleAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.ToString">
            <summary>设置 ExcelVbaModuleAttribute.ToString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.ValueGet">
            <summary>设置 ExcelVbaModuleAttribute.get_Value() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.ValueSetString">
            <summary>设置 ExcelVbaModuleAttribute.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.AllInstances.DataTypeGet">
            <summary>设置 ExcelVbaModuleAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.AllInstances.DataTypeSeteAttributeDataType">
            <summary>设置 ExcelVbaModuleAttribute.set_DataType(eAttributeDataType value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.AllInstances.NameGet">
            <summary>设置 ExcelVbaModuleAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.AllInstances.NameSetString">
            <summary>设置 ExcelVbaModuleAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.AllInstances.ToString01">
            <summary>设置 ExcelVbaModuleAttribute.ToString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.AllInstances.ValueGet">
            <summary>设置 ExcelVbaModuleAttribute.get_Value() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttribute.AllInstances.ValueSetString">
            <summary>设置 ExcelVbaModuleAttribute.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttributesCollection">
            <summary>OfficeOpenXml.VBA.ExcelVbaModuleAttributesCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttributesCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttributesCollection.#ctor(OfficeOpenXml.VBA.ExcelVbaModuleAttributesCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttributesCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttributesCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttributesCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttributesCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.VBA.ExcelVbaModuleAttribute})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttributesCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttributesCollection.Constructor">
            <summary>设置 ExcelVbaModuleAttributesCollection.ExcelVbaModuleAttributesCollection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttributesCollection.GetAttributeText">
            <summary>设置 ExcelVbaModuleAttributesCollection.GetAttributeText() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttributesCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleAttributesCollection.AllInstances.GetAttributeText">
            <summary>设置 ExcelVbaModuleAttributesCollection.GetAttributeText() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection">
            <summary>OfficeOpenXml.VBA.ExcelVbaModuleCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.#ctor(OfficeOpenXml.VBA.ExcelVbaModuleCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.VBA.ExcelVBAModule})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.AddClassStringBoolean">
            <summary>设置 ExcelVbaModuleCollection.AddClass(String Name, Boolean Exposed) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.AddExcelVBAModule">
            <summary>设置 ExcelVbaModuleCollection.Add(ExcelVBAModule Item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.AddModuleString">
            <summary>设置 ExcelVbaModuleCollection.AddModule(String Name) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.ConstructorExcelVbaProject">
            <summary>设置 ExcelVbaModuleCollection.ExcelVbaModuleCollection(ExcelVbaProject project) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.AllInstances.AddClassStringBoolean">
            <summary>设置 ExcelVbaModuleCollection.AddClass(String Name, Boolean Exposed) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.AllInstances.AddExcelVBAModule">
            <summary>设置 ExcelVbaModuleCollection.Add(ExcelVBAModule Item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaModuleCollection.AllInstances.AddModuleString">
            <summary>设置 ExcelVbaModuleCollection.AddModule(String Name) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject">
            <summary>OfficeOpenXml.VBA.ExcelVbaProject 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.#ctor(OfficeOpenXml.VBA.ExcelVbaProject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.CodePageGet">
            <summary>设置 ExcelVbaProject.get_CodePage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.CodePageSetInt32">
            <summary>设置 ExcelVbaProject.set_CodePage(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ConstantsGet">
            <summary>设置 ExcelVbaProject.get_Constants() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ConstantsSetString">
            <summary>设置 ExcelVbaProject.set_Constants(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ConstructorExcelWorkbook">
            <summary>设置 ExcelVbaProject.ExcelVbaProject(ExcelWorkbook wb) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.Create">
            <summary>设置 ExcelVbaProject.Create() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.CreateDirStream">
            <summary>设置 ExcelVbaProject.CreateDirStream() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.CreateProjectStream">
            <summary>设置 ExcelVbaProject.CreateProjectStream() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.CreateProjectwmStream">
            <summary>设置 ExcelVbaProject.CreateProjectwmStream() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.CreateVBAProjectStream">
            <summary>设置 ExcelVbaProject.CreateVBAProjectStream() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.DecryptString">
            <summary>设置 ExcelVbaProject.Decrypt(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.DescriptionGet">
            <summary>设置 ExcelVbaProject.get_Description() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.DescriptionSetString">
            <summary>设置 ExcelVbaProject.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.EncryptByteArray">
            <summary>设置 ExcelVbaProject.Encrypt(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.GetByteString">
            <summary>设置 ExcelVbaProject.GetByte(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.GetDocumentAttributesStringString">
            <summary>设置 ExcelVbaProject.GetDocumentAttributes(String name, String clsid) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.GetProject">
            <summary>设置 ExcelVbaProject.GetProject() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.GetStringBinaryReaderUInt32">
            <summary>设置 ExcelVbaProject.GetString(BinaryReader br, UInt32 size) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.GetStringBinaryReaderUInt32Encoding">
            <summary>设置 ExcelVbaProject.GetString(BinaryReader br, UInt32 size, Encoding enc) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.GetStringByteArrayInt32">
            <summary>设置 ExcelVbaProject.GetString(Byte[] value, Int32 max) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.GetUnicodeStringBinaryReaderUInt32">
            <summary>设置 ExcelVbaProject.GetUnicodeString(BinaryReader br, UInt32 size) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.HelpContextIDGet">
            <summary>设置 ExcelVbaProject.get_HelpContextID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.HelpContextIDSetInt32">
            <summary>设置 ExcelVbaProject.set_HelpContextID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.HelpFile1Get">
            <summary>设置 ExcelVbaProject.get_HelpFile1() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.HelpFile1SetString">
            <summary>设置 ExcelVbaProject.set_HelpFile1(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.HelpFile2Get">
            <summary>设置 ExcelVbaProject.get_HelpFile2() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.HelpFile2SetString">
            <summary>设置 ExcelVbaProject.set_HelpFile2(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.LcidGet">
            <summary>设置 ExcelVbaProject.get_Lcid() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.LcidInvokeGet">
            <summary>设置 ExcelVbaProject.get_LcidInvoke() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.LcidInvokeSetInt32">
            <summary>设置 ExcelVbaProject.set_LcidInvoke(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.LcidSetInt32">
            <summary>设置 ExcelVbaProject.set_Lcid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.LibFlagsGet">
            <summary>设置 ExcelVbaProject.get_LibFlags() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.LibFlagsSetInt32">
            <summary>设置 ExcelVbaProject.set_LibFlags(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.MajorVersionGet">
            <summary>设置 ExcelVbaProject.get_MajorVersion() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.MajorVersionSetInt32">
            <summary>设置 ExcelVbaProject.set_MajorVersion(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.MinorVersionGet">
            <summary>设置 ExcelVbaProject.get_MinorVersion() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.MinorVersionSetInt32">
            <summary>设置 ExcelVbaProject.set_MinorVersion(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ModulesGet">
            <summary>设置 ExcelVbaProject.get_Modules() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ModulesSetExcelVbaModuleCollection">
            <summary>设置 ExcelVbaProject.set_Modules(ExcelVbaModuleCollection value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.NameGet">
            <summary>设置 ExcelVbaProject.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.NameSetString">
            <summary>设置 ExcelVbaProject.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.PartGet">
            <summary>设置 ExcelVbaProject.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.PartSetPackagePart">
            <summary>设置 ExcelVbaProject.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ProjectIDGet">
            <summary>设置 ExcelVbaProject.get_ProjectID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ProjectIDSetString">
            <summary>设置 ExcelVbaProject.set_ProjectID(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ProjectStreamTextGet">
            <summary>设置 ExcelVbaProject.get_ProjectStreamText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ProjectStreamTextSetString">
            <summary>设置 ExcelVbaProject.set_ProjectStreamText(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ProtectionGet">
            <summary>设置 ExcelVbaProject.get_Protection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ReadDirStream">
            <summary>设置 ExcelVbaProject.ReadDirStream() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ReadModules">
            <summary>设置 ExcelVbaProject.ReadModules() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ReadProjectProperties">
            <summary>设置 ExcelVbaProject.ReadProjectProperties() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ReferencesGet">
            <summary>设置 ExcelVbaProject.get_References() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ReferencesSetExcelVbaReferenceCollection">
            <summary>设置 ExcelVbaProject.set_References(ExcelVbaReferenceCollection value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.Remove">
            <summary>设置 ExcelVbaProject.Remove() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.Save">
            <summary>设置 ExcelVbaProject.Save() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.SignatureGet">
            <summary>设置 ExcelVbaProject.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.SystemKindGet">
            <summary>设置 ExcelVbaProject.get_SystemKind() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.SystemKindSetExcelVbaProjecteSyskind">
            <summary>设置 ExcelVbaProject.set_SystemKind(eSyskind value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.ToString">
            <summary>设置 ExcelVbaProject.ToString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.UriGet">
            <summary>设置 ExcelVbaProject.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.UriSetUri">
            <summary>设置 ExcelVbaProject.set_Uri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.Validate">
            <summary>设置 ExcelVbaProject.Validate() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.WriteControlReferenceBinaryWriterExcelVbaReference">
            <summary>设置 ExcelVbaProject.WriteControlReference(BinaryWriter bw, ExcelVbaReference reference) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.WriteModuleRecordBinaryWriterExcelVBAModule">
            <summary>设置 ExcelVbaProject.WriteModuleRecord(BinaryWriter bw, ExcelVBAModule module) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.WriteNameReferenceBinaryWriterExcelVbaReference">
            <summary>设置 ExcelVbaProject.WriteNameReference(BinaryWriter bw, ExcelVbaReference reference) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.WriteOrginalReferenceBinaryWriterExcelVbaReference">
            <summary>设置 ExcelVbaProject.WriteOrginalReference(BinaryWriter bw, ExcelVbaReference reference) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.WritePassword">
            <summary>设置 ExcelVbaProject.WritePassword() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.WriteProjectReferenceBinaryWriterExcelVbaReference">
            <summary>设置 ExcelVbaProject.WriteProjectReference(BinaryWriter bw, ExcelVbaReference reference) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.WriteProtectionStat">
            <summary>设置 ExcelVbaProject.WriteProtectionStat() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.WriteRegisteredReferenceBinaryWriterExcelVbaReference">
            <summary>设置 ExcelVbaProject.WriteRegisteredReference(BinaryWriter bw, ExcelVbaReference reference) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.WriteVisibilityState">
            <summary>设置 ExcelVbaProject.WriteVisibilityState() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.CodePageGet">
            <summary>设置 ExcelVbaProject.get_CodePage() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.CodePageSetInt32">
            <summary>设置 ExcelVbaProject.set_CodePage(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ConstantsGet">
            <summary>设置 ExcelVbaProject.get_Constants() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ConstantsSetString">
            <summary>设置 ExcelVbaProject.set_Constants(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.Create">
            <summary>设置 ExcelVbaProject.Create() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.CreateDirStream">
            <summary>设置 ExcelVbaProject.CreateDirStream() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.CreateProjectStream">
            <summary>设置 ExcelVbaProject.CreateProjectStream() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.CreateProjectwmStream">
            <summary>设置 ExcelVbaProject.CreateProjectwmStream() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.CreateVBAProjectStream">
            <summary>设置 ExcelVbaProject.CreateVBAProjectStream() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.DecryptString">
            <summary>设置 ExcelVbaProject.Decrypt(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.DescriptionGet">
            <summary>设置 ExcelVbaProject.get_Description() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.DescriptionSetString">
            <summary>设置 ExcelVbaProject.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.EncryptByteArray">
            <summary>设置 ExcelVbaProject.Encrypt(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.GetByteString">
            <summary>设置 ExcelVbaProject.GetByte(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.GetDocumentAttributesStringString">
            <summary>设置 ExcelVbaProject.GetDocumentAttributes(String name, String clsid) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.GetProject">
            <summary>设置 ExcelVbaProject.GetProject() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.GetStringBinaryReaderUInt32">
            <summary>设置 ExcelVbaProject.GetString(BinaryReader br, UInt32 size) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.GetStringBinaryReaderUInt32Encoding">
            <summary>设置 ExcelVbaProject.GetString(BinaryReader br, UInt32 size, Encoding enc) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.GetStringByteArrayInt32">
            <summary>设置 ExcelVbaProject.GetString(Byte[] value, Int32 max) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.GetUnicodeStringBinaryReaderUInt32">
            <summary>设置 ExcelVbaProject.GetUnicodeString(BinaryReader br, UInt32 size) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.HelpContextIDGet">
            <summary>设置 ExcelVbaProject.get_HelpContextID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.HelpContextIDSetInt32">
            <summary>设置 ExcelVbaProject.set_HelpContextID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.HelpFile1Get">
            <summary>设置 ExcelVbaProject.get_HelpFile1() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.HelpFile1SetString">
            <summary>设置 ExcelVbaProject.set_HelpFile1(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.HelpFile2Get">
            <summary>设置 ExcelVbaProject.get_HelpFile2() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.HelpFile2SetString">
            <summary>设置 ExcelVbaProject.set_HelpFile2(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.LcidGet">
            <summary>设置 ExcelVbaProject.get_Lcid() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.LcidInvokeGet">
            <summary>设置 ExcelVbaProject.get_LcidInvoke() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.LcidInvokeSetInt32">
            <summary>设置 ExcelVbaProject.set_LcidInvoke(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.LcidSetInt32">
            <summary>设置 ExcelVbaProject.set_Lcid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.LibFlagsGet">
            <summary>设置 ExcelVbaProject.get_LibFlags() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.LibFlagsSetInt32">
            <summary>设置 ExcelVbaProject.set_LibFlags(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.MajorVersionGet">
            <summary>设置 ExcelVbaProject.get_MajorVersion() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.MajorVersionSetInt32">
            <summary>设置 ExcelVbaProject.set_MajorVersion(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.MinorVersionGet">
            <summary>设置 ExcelVbaProject.get_MinorVersion() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.MinorVersionSetInt32">
            <summary>设置 ExcelVbaProject.set_MinorVersion(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ModulesGet">
            <summary>设置 ExcelVbaProject.get_Modules() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ModulesSetExcelVbaModuleCollection">
            <summary>设置 ExcelVbaProject.set_Modules(ExcelVbaModuleCollection value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.NameGet">
            <summary>设置 ExcelVbaProject.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.NameSetString">
            <summary>设置 ExcelVbaProject.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.PartGet">
            <summary>设置 ExcelVbaProject.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.PartSetPackagePart">
            <summary>设置 ExcelVbaProject.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ProjectIDGet">
            <summary>设置 ExcelVbaProject.get_ProjectID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ProjectIDSetString">
            <summary>设置 ExcelVbaProject.set_ProjectID(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ProjectStreamTextGet">
            <summary>设置 ExcelVbaProject.get_ProjectStreamText() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ProjectStreamTextSetString">
            <summary>设置 ExcelVbaProject.set_ProjectStreamText(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ProtectionGet">
            <summary>设置 ExcelVbaProject.get_Protection() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ReadDirStream">
            <summary>设置 ExcelVbaProject.ReadDirStream() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ReadModules">
            <summary>设置 ExcelVbaProject.ReadModules() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ReadProjectProperties">
            <summary>设置 ExcelVbaProject.ReadProjectProperties() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ReferencesGet">
            <summary>设置 ExcelVbaProject.get_References() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ReferencesSetExcelVbaReferenceCollection">
            <summary>设置 ExcelVbaProject.set_References(ExcelVbaReferenceCollection value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.Remove">
            <summary>设置 ExcelVbaProject.Remove() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.Save">
            <summary>设置 ExcelVbaProject.Save() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.SignatureGet">
            <summary>设置 ExcelVbaProject.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.SystemKindGet">
            <summary>设置 ExcelVbaProject.get_SystemKind() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.SystemKindSetExcelVbaProjecteSyskind">
            <summary>设置 ExcelVbaProject.set_SystemKind(eSyskind value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.ToString01">
            <summary>设置 ExcelVbaProject.ToString() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.UriGet">
            <summary>设置 ExcelVbaProject.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.UriSetUri">
            <summary>设置 ExcelVbaProject.set_Uri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.Validate">
            <summary>设置 ExcelVbaProject.Validate() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.WriteControlReferenceBinaryWriterExcelVbaReference">
            <summary>设置 ExcelVbaProject.WriteControlReference(BinaryWriter bw, ExcelVbaReference reference) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.WriteModuleRecordBinaryWriterExcelVBAModule">
            <summary>设置 ExcelVbaProject.WriteModuleRecord(BinaryWriter bw, ExcelVBAModule module) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.WriteNameReferenceBinaryWriterExcelVbaReference">
            <summary>设置 ExcelVbaProject.WriteNameReference(BinaryWriter bw, ExcelVbaReference reference) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.WriteOrginalReferenceBinaryWriterExcelVbaReference">
            <summary>设置 ExcelVbaProject.WriteOrginalReference(BinaryWriter bw, ExcelVbaReference reference) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.WritePassword">
            <summary>设置 ExcelVbaProject.WritePassword() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.WriteProjectReferenceBinaryWriterExcelVbaReference">
            <summary>设置 ExcelVbaProject.WriteProjectReference(BinaryWriter bw, ExcelVbaReference reference) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.WriteProtectionStat">
            <summary>设置 ExcelVbaProject.WriteProtectionStat() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.WriteRegisteredReferenceBinaryWriterExcelVbaReference">
            <summary>设置 ExcelVbaProject.WriteRegisteredReference(BinaryWriter bw, ExcelVbaReference reference) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProject.AllInstances.WriteVisibilityState">
            <summary>设置 ExcelVbaProject.WriteVisibilityState() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection">
            <summary>OfficeOpenXml.VBA.ExcelVbaProtection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.#ctor(OfficeOpenXml.VBA.ExcelVbaProtection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.ConstructorExcelVbaProject">
            <summary>设置 ExcelVbaProtection.ExcelVbaProtection(ExcelVbaProject project) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.HostProtectedGet">
            <summary>设置 ExcelVbaProtection.get_HostProtected() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.HostProtectedSetBoolean">
            <summary>设置 ExcelVbaProtection.set_HostProtected(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.PasswordHashGet">
            <summary>设置 ExcelVbaProtection.get_PasswordHash() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.PasswordHashSetByteArray">
            <summary>设置 ExcelVbaProtection.set_PasswordHash(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.PasswordKeyGet">
            <summary>设置 ExcelVbaProtection.get_PasswordKey() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.PasswordKeySetByteArray">
            <summary>设置 ExcelVbaProtection.set_PasswordKey(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.SetPasswordString">
            <summary>设置 ExcelVbaProtection.SetPassword(String Password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.UserProtectedGet">
            <summary>设置 ExcelVbaProtection.get_UserProtected() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.UserProtectedSetBoolean">
            <summary>设置 ExcelVbaProtection.set_UserProtected(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.VbeProtectedGet">
            <summary>设置 ExcelVbaProtection.get_VbeProtected() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.VbeProtectedSetBoolean">
            <summary>设置 ExcelVbaProtection.set_VbeProtected(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.VisibilityStateGet">
            <summary>设置 ExcelVbaProtection.get_VisibilityState() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.VisibilityStateSetBoolean">
            <summary>设置 ExcelVbaProtection.set_VisibilityState(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.AllInstances.HostProtectedGet">
            <summary>设置 ExcelVbaProtection.get_HostProtected() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.AllInstances.HostProtectedSetBoolean">
            <summary>设置 ExcelVbaProtection.set_HostProtected(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.AllInstances.PasswordHashGet">
            <summary>设置 ExcelVbaProtection.get_PasswordHash() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.AllInstances.PasswordHashSetByteArray">
            <summary>设置 ExcelVbaProtection.set_PasswordHash(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.AllInstances.PasswordKeyGet">
            <summary>设置 ExcelVbaProtection.get_PasswordKey() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.AllInstances.PasswordKeySetByteArray">
            <summary>设置 ExcelVbaProtection.set_PasswordKey(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.AllInstances.SetPasswordString">
            <summary>设置 ExcelVbaProtection.SetPassword(String Password) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.AllInstances.UserProtectedGet">
            <summary>设置 ExcelVbaProtection.get_UserProtected() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.AllInstances.UserProtectedSetBoolean">
            <summary>设置 ExcelVbaProtection.set_UserProtected(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.AllInstances.VbeProtectedGet">
            <summary>设置 ExcelVbaProtection.get_VbeProtected() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.AllInstances.VbeProtectedSetBoolean">
            <summary>设置 ExcelVbaProtection.set_VbeProtected(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.AllInstances.VisibilityStateGet">
            <summary>设置 ExcelVbaProtection.get_VisibilityState() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaProtection.AllInstances.VisibilityStateSetBoolean">
            <summary>设置 ExcelVbaProtection.set_VisibilityState(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference">
            <summary>OfficeOpenXml.VBA.ExcelVbaReference 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.#ctor(OfficeOpenXml.VBA.ExcelVbaReference)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.Constructor">
            <summary>设置 ExcelVbaReference.ExcelVbaReference() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.LibidGet">
            <summary>设置 ExcelVbaReference.get_Libid() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.LibidSetString">
            <summary>设置 ExcelVbaReference.set_Libid(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.NameGet">
            <summary>设置 ExcelVbaReference.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.NameSetString">
            <summary>设置 ExcelVbaReference.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.ReferenceRecordIDGet">
            <summary>设置 ExcelVbaReference.get_ReferenceRecordID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.ReferenceRecordIDSetInt32">
            <summary>设置 ExcelVbaReference.set_ReferenceRecordID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.ToString">
            <summary>设置 ExcelVbaReference.ToString() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.AllInstances.LibidGet">
            <summary>设置 ExcelVbaReference.get_Libid() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.AllInstances.LibidSetString">
            <summary>设置 ExcelVbaReference.set_Libid(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.AllInstances.NameGet">
            <summary>设置 ExcelVbaReference.get_Name() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.AllInstances.NameSetString">
            <summary>设置 ExcelVbaReference.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.AllInstances.ReferenceRecordIDGet">
            <summary>设置 ExcelVbaReference.get_ReferenceRecordID() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.AllInstances.ReferenceRecordIDSetInt32">
            <summary>设置 ExcelVbaReference.set_ReferenceRecordID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReference.AllInstances.ToString01">
            <summary>设置 ExcelVbaReference.ToString() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceCollection">
            <summary>OfficeOpenXml.VBA.ExcelVbaReferenceCollection 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceCollection.#ctor(OfficeOpenXml.VBA.ExcelVbaReferenceCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceCollection.Bind(System.Collections.Generic.IEnumerable{OfficeOpenXml.VBA.ExcelVbaReference})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceCollection.AddExcelVbaReference">
            <summary>设置 ExcelVbaReferenceCollection.Add(ExcelVbaReference Item) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceCollection.Constructor">
            <summary>设置 ExcelVbaReferenceCollection.ExcelVbaReferenceCollection() 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceCollection.AllInstances.AddExcelVbaReference">
            <summary>设置 ExcelVbaReferenceCollection.Add(ExcelVbaReference Item) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl">
            <summary>OfficeOpenXml.VBA.ExcelVbaReferenceControl 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.#ctor(OfficeOpenXml.VBA.ExcelVbaReferenceControl)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.Constructor">
            <summary>设置 ExcelVbaReferenceControl.ExcelVbaReferenceControl() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.CookieGet">
            <summary>设置 ExcelVbaReferenceControl.get_Cookie() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.CookieSetUInt32">
            <summary>设置 ExcelVbaReferenceControl.set_Cookie(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.LibIdExternalGet">
            <summary>设置 ExcelVbaReferenceControl.get_LibIdExternal() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.LibIdExternalSetString">
            <summary>设置 ExcelVbaReferenceControl.set_LibIdExternal(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.LibIdTwiddledGet">
            <summary>设置 ExcelVbaReferenceControl.get_LibIdTwiddled() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.LibIdTwiddledSetString">
            <summary>设置 ExcelVbaReferenceControl.set_LibIdTwiddled(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.OriginalTypeLibGet">
            <summary>设置 ExcelVbaReferenceControl.get_OriginalTypeLib() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.OriginalTypeLibSetGuid">
            <summary>设置 ExcelVbaReferenceControl.set_OriginalTypeLib(Guid value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.AllInstances.CookieGet">
            <summary>设置 ExcelVbaReferenceControl.get_Cookie() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.AllInstances.CookieSetUInt32">
            <summary>设置 ExcelVbaReferenceControl.set_Cookie(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.AllInstances.LibIdExternalGet">
            <summary>设置 ExcelVbaReferenceControl.get_LibIdExternal() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.AllInstances.LibIdExternalSetString">
            <summary>设置 ExcelVbaReferenceControl.set_LibIdExternal(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.AllInstances.LibIdTwiddledGet">
            <summary>设置 ExcelVbaReferenceControl.get_LibIdTwiddled() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.AllInstances.LibIdTwiddledSetString">
            <summary>设置 ExcelVbaReferenceControl.set_LibIdTwiddled(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.AllInstances.OriginalTypeLibGet">
            <summary>设置 ExcelVbaReferenceControl.get_OriginalTypeLib() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceControl.AllInstances.OriginalTypeLibSetGuid">
            <summary>设置 ExcelVbaReferenceControl.set_OriginalTypeLib(Guid value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject">
            <summary>OfficeOpenXml.VBA.ExcelVbaReferenceProject 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.#ctor(OfficeOpenXml.VBA.ExcelVbaReferenceProject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.Constructor">
            <summary>设置 ExcelVbaReferenceProject.ExcelVbaReferenceProject() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.LibIdRelativeGet">
            <summary>设置 ExcelVbaReferenceProject.get_LibIdRelative() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.LibIdRelativeSetString">
            <summary>设置 ExcelVbaReferenceProject.set_LibIdRelative(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.MajorVersionGet">
            <summary>设置 ExcelVbaReferenceProject.get_MajorVersion() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.MajorVersionSetUInt32">
            <summary>设置 ExcelVbaReferenceProject.set_MajorVersion(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.MinorVersionGet">
            <summary>设置 ExcelVbaReferenceProject.get_MinorVersion() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.MinorVersionSetUInt16">
            <summary>设置 ExcelVbaReferenceProject.set_MinorVersion(UInt16 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.AllInstances.LibIdRelativeGet">
            <summary>设置 ExcelVbaReferenceProject.get_LibIdRelative() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.AllInstances.LibIdRelativeSetString">
            <summary>设置 ExcelVbaReferenceProject.set_LibIdRelative(String value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.AllInstances.MajorVersionGet">
            <summary>设置 ExcelVbaReferenceProject.get_MajorVersion() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.AllInstances.MajorVersionSetUInt32">
            <summary>设置 ExcelVbaReferenceProject.set_MajorVersion(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.AllInstances.MinorVersionGet">
            <summary>设置 ExcelVbaReferenceProject.get_MinorVersion() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaReferenceProject.AllInstances.MinorVersionSetUInt16">
            <summary>设置 ExcelVbaReferenceProject.set_MinorVersion(UInt16 value) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature">
            <summary>OfficeOpenXml.VBA.ExcelVbaSignature 的填充码类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.#ctor(OfficeOpenXml.VBA.ExcelVbaSignature)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.CertificateGet">
            <summary>设置 ExcelVbaSignature.get_Certificate() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.CertificateSetX509Certificate2">
            <summary>设置 ExcelVbaSignature.set_Certificate(X509Certificate2 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.ConstructorPackagePart">
            <summary>设置 ExcelVbaSignature.ExcelVbaSignature(PackagePart vbaPart) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.GetCertStore">
            <summary>设置 ExcelVbaSignature.GetCertStore() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.GetContentHashExcelVbaProject">
            <summary>设置 ExcelVbaSignature.GetContentHash(ExcelVbaProject proj) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.GetSignature">
            <summary>设置 ExcelVbaSignature.GetSignature() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.PartGet">
            <summary>设置 ExcelVbaSignature.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.PartSetPackagePart">
            <summary>设置 ExcelVbaSignature.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.SaveExcelVbaProject">
            <summary>设置 ExcelVbaSignature.Save(ExcelVbaProject proj) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.SignProjectExcelVbaProject">
            <summary>设置 ExcelVbaSignature.SignProject(ExcelVbaProject proj) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.UriGet">
            <summary>设置 ExcelVbaSignature.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.UriSetUri">
            <summary>设置 ExcelVbaSignature.set_Uri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.VerifierGet">
            <summary>设置 ExcelVbaSignature.get_Verifier() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.VerifierSetSignedCms">
            <summary>设置 ExcelVbaSignature.set_Verifier(SignedCms value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.WritePropBinaryWriterInt32ByteArray">
            <summary>设置 ExcelVbaSignature.WriteProp(BinaryWriter bw, Int32 id, Byte[] data) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances.CertificateGet">
            <summary>设置 ExcelVbaSignature.get_Certificate() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances.CertificateSetX509Certificate2">
            <summary>设置 ExcelVbaSignature.set_Certificate(X509Certificate2 value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances.GetCertStore">
            <summary>设置 ExcelVbaSignature.GetCertStore() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances.GetContentHashExcelVbaProject">
            <summary>设置 ExcelVbaSignature.GetContentHash(ExcelVbaProject proj) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances.GetSignature">
            <summary>设置 ExcelVbaSignature.GetSignature() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances.PartGet">
            <summary>设置 ExcelVbaSignature.get_Part() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances.PartSetPackagePart">
            <summary>设置 ExcelVbaSignature.set_Part(PackagePart value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances.SaveExcelVbaProject">
            <summary>设置 ExcelVbaSignature.Save(ExcelVbaProject proj) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances.SignProjectExcelVbaProject">
            <summary>设置 ExcelVbaSignature.SignProject(ExcelVbaProject proj) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances.UriGet">
            <summary>设置 ExcelVbaSignature.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances.UriSetUri">
            <summary>设置 ExcelVbaSignature.set_Uri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances.VerifierGet">
            <summary>设置 ExcelVbaSignature.get_Verifier() 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances.VerifierSetSignedCms">
            <summary>设置 ExcelVbaSignature.set_Verifier(SignedCms value) 的 填充码</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.ShimExcelVbaSignature.AllInstances.WritePropBinaryWriterInt32ByteArray">
            <summary>设置 ExcelVbaSignature.WriteProp(BinaryWriter bw, Int32 id, Byte[] data) 的 填充码</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.StubExcelVBACollectionBase`1">
            <summary>OfficeOpenXml.VBA.ExcelVBACollectionBase`1 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.StubExcelVBACollectionBase`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.StubExcelVBACollectionBase`1.InitializeStub">
            <summary>初始化 type StubExcelVBACollectionBase 的新实例</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVBACollectionBase`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVBACollectionBase`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVBACollectionBase`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.StubExcelVbaModuleAttributesCollection">
            <summary>OfficeOpenXml.VBA.ExcelVbaModuleAttributesCollection 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.StubExcelVbaModuleAttributesCollection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.StubExcelVbaModuleAttributesCollection.InitializeStub">
            <summary>初始化 type StubExcelVbaModuleAttributesCollection 的新实例</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVbaModuleAttributesCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVbaModuleAttributesCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVbaModuleAttributesCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.StubExcelVbaReference">
            <summary>OfficeOpenXml.VBA.ExcelVbaReference 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.StubExcelVbaReference.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.StubExcelVbaReference.InitializeStub">
            <summary>初始化 type StubExcelVbaReference 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.StubExcelVbaReference.ToString">
            <summary>设置 ExcelVbaReference.ToString() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.VBA.Fakes.StubExcelVbaReference.ToString01">
            <summary>设置 ExcelVbaReference.ToString() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVbaReference.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVbaReference.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVbaReference.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceControl">
            <summary>OfficeOpenXml.VBA.ExcelVbaReferenceControl 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceControl.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceControl.InitializeStub">
            <summary>初始化 type StubExcelVbaReferenceControl 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceControl.ToString">
            <summary>设置 ExcelVbaReference.ToString() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceControl.ToString01">
            <summary>设置 ExcelVbaReference.ToString() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceControl.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceControl.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceControl.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceProject">
            <summary>OfficeOpenXml.VBA.ExcelVbaReferenceProject 的存根类型</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceProject.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceProject.InitializeStub">
            <summary>初始化 type StubExcelVbaReferenceProject 的新实例</summary>
        </member>
        <member name="M:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceProject.ToString">
            <summary>设置 ExcelVbaReference.ToString() 的 存根</summary>
        </member>
        <member name="F:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceProject.ToString01">
            <summary>设置 ExcelVbaReference.ToString() 的 stub</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceProject.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceProject.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:OfficeOpenXml.VBA.Fakes.StubExcelVbaReferenceProject.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
